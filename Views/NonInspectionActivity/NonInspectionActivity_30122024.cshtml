@model TuvVision.Models.NonInspectionActivity
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    //ViewBag.Title = "NonInspectionActivity";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int l = 0;
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
@*<script src="~/AllJsAndCss/ValidateTimeSheet.js"></script>*@

<style>
    .addCSS {
        pointer-events: none;
    }
</style>

@*<style>
        #customers {
            font-family: Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

            #customers td, #customers th {
                border: 1px solid #ddd;
                padding: 8px;
            }

            #customers tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            #customers tr:hover {
                background-color: #ddd;
            }

            #customers th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                /*background-color: #04AA6D;*/
                background-color: #001ED2;
                color: white;
            }

             .grdSAPWidth {
                width:800px;
            }
    </style>*@

@*
    @helper CustomRenderingOfColumnExpense(TuvVision.Models.NonInspectionActivity callmodel)
    {
        <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem",new { FKId = callmodel.Id,Type="NIA",SubJobNo="",PK_Call_Id=callmodel.Id} )'"><i class="fa fa-inr" aria-hidden="true"></i></button>

        @*<a href="@Url.Action("NonInspectionActivity", "NonInspectionActivity", new { id = callmodel.Id, AddExpense1 = "AddExpense" })" class="btn btn-info btn-xs" title="Edit"  ><i class="fa fa-pencil"></i></a>*@


@*<button type="button" class="btn btn-default insert-form-btn" id="ddlInspectionLocation" style="width:125px;"> Expense</button>*@
@*}*@
@*added by nikita on 02/02/2024*@


@*@helper CustomRenderingOfColumnExpense(TuvVision.Models.NonInspectionActivity callmodel)
    {
    if (callmodel.ActivityType == "27" || callmodel.ActivityType == "16" || callmodel.ActivityType == "06" || callmodel.ActivityType == "40" || callmodel.ActivityType == "28" || callmodel.ActivityType == "44" || callmodel.ActivityType == "45" || callmodel.ActivityType == "03" || callmodel.ActivityType == "43" || callmodel.ActivityType == "47" || callmodel.ActivityType == "40")
    {
            <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id,Pk_CC_Id= callmodel.CostCenter, ActivityCode= callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
    }
    else if (callmodel.ActivityType == "25" || callmodel.ActivityType == "18" || callmodel.ActivityType == "07")
    {
            <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id,Pk_CC_Id=callmodel.CostCenter, ActivityCode= callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
    }
    else
    {
            <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = "", PK_Call_Id = callmodel.Id,Pk_CC_Id=callmodel.CostCenter, ActivityCode= callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
    }
    }*@



@helper CustomRenderingOfColumnExpense(TuvVision.Models.NonInspectionActivity callmodel)
{
if (callmodel.issendforapprovalExpense == "True"/* || callmodel.issendforapprovalope == "True"*/)
{

}
else
{

    if (callmodel.ActivityType == "48" || callmodel.ActivityType == "31" || callmodel.ActivityType == "14" || callmodel.ActivityType == "32" || callmodel.ActivityType == "30" || callmodel.ActivityType == "04" || callmodel.ActivityType == "05" || callmodel.ActivityType == "19" || callmodel.ActivityType == "20" || callmodel.ActivityType == "07"||callmodel.ActivityType=="02")
    {
    }
    else
    {
        if (callmodel.ActivityType == "27" || callmodel.ActivityType == "16" || callmodel.ActivityType == "06" || callmodel.ActivityType == "40" || callmodel.ActivityType == "28" || callmodel.ActivityType == "44" || callmodel.ActivityType == "45" || callmodel.ActivityType == "03" || callmodel.ActivityType == "43" || callmodel.ActivityType == "47" || callmodel.ActivityType == "40")
        {
                <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
        }
        else if (callmodel.ActivityType == "25" || callmodel.ActivityType == "18" || callmodel.ActivityType == "07")
        {
                <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
        }
        else
        {
                <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = "", PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
        }
    }
}

    @*if (callmodel.ActivityType == "27" || callmodel.ActivityType == "16" || callmodel.ActivityType == "06" || callmodel.ActivityType == "40" || callmodel.ActivityType == "28" || callmodel.ActivityType == "44" || callmodel.ActivityType == "45" || callmodel.ActivityType == "03" || callmodel.ActivityType == "43" || callmodel.ActivityType == "47" || callmodel.ActivityType == "40")
            {
                    <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
            }
            else if (callmodel.ActivityType == "25" || callmodel.ActivityType == "18" || callmodel.ActivityType == "07")
            {
                    <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = callmodel.JobNumber, PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
            }
            else
            {
                    <button id="btnAddExpenses" class="btn btn-info btn-xs" type="button" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = callmodel.Id, Type = "NIA", SubJobNo = "", PK_Call_Id = callmodel.Id, Pk_CC_Id = callmodel.CostCenter, ActivityCode = callmodel.ActivityType })'"><i class="fa fa-inr" aria-hidden="true"></i></button>
            }
        }*@
}




@helper CustomRenderingOfColumn(TuvVision.Models.NonInspectionActivity callmodel)
{
if (callmodel.issendforapprovalExpense == "True" || callmodel.issendforapprovalope == "True")
{
        <a href="@Url.Action("NonInspectionActivity", "NonInspectionActivity", new { id = callmodel.Id })" class="btn btn-info btn-xs" title="Edit" style="color:white;"><i class="fa fa-pencil"></i></a>

}
else
{
    if (callmodel.ActivityType == "privilege leave" || callmodel.ActivityType == "sick leave" || callmodel.ActivityType == "casual leave")
    {

    }
    else
    {
            @*<a href="@url.action("updatenoninspectionactivity", "noninspectionactivity", new { id = callmodel.id })" class="btn btn-info btn-xs" title="edit"><i class="fa fa-pencil"></i></a>*@
            <a href="@Url.Action("noninspectionactivity", "noninspectionactivity", new { id = callmodel.Id })" class="btn btn-info btn-xs" title="edit" style="color:white;"><i class="fa fa-pencil"></i></a>

            <a href="@Url.Action("delete", "noninspectionactivity", new { id = callmodel.Id })" class="delete" onclick="return confirm('are you sure you wish to delete selected record?');" title="delete"><i class="fa fa-trash"></i></a>


    }
}
}

@helper CustomRenderingOfColumnAttachment(TuvVision.Models.NonInspectionActivity callmodel)
{
if (callmodel.Attachment == null || callmodel.Attachment == "")
{

}
else
{
    string[] words = (callmodel.Attachment).Split(',');
    for (int j = 1; j < words.Count(); j++)
    {
            <a target="_blank" href="@Url.Content("~/NonInspectionActivityDocument/" + words[j-1])">

                <span>@words[j - 1].ToString()</span>
            </a>

    }


}
}


@*<button type="button" class="btn btn-default insert-form-btn" id="ddlInspectionLocation" style="width:125px;"> Expense</button>*@







@using (Html.BeginForm("Create", "NonInspectionActivity", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
    <div class="main-content3 xs-max-height grey-bg-f3">
        <div class="grey-bg-f3">
            <!--Start of header-->
            <div class="container-fluid">
                <div class="row assignfixedwidth rp-5">
                    @*<a href="@Url.Action("ListNonInspectionActivity","NonInspectionActivity")" class="btn btn-default news-btn" style="float:right;"><i class="fa fa-long-arrow-left"></i> Go Back</a>*@

                    <br />
                    <div class="col-xs-12 form-col">
                        <div class="row">


                            <div class="col-xs-12">
                                <div class="white-bg section-box-shadow">
                                    <h3 class="form-page-title"> Non Inspection Activities</h3>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                            <div class="form-box">
                                                <form>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            @Html.HiddenFor(model => model.Id)
                                                            @Html.HiddenFor(model => model.AddExpense)
                                                            <input type="hidden" id="setvalue" />
                                                        </div>
                                                    </div>


                                                    <div class="row">
                                                        @if (Convert.ToString(TempData["Error"]) != string.Empty)
                                                        {
                                                            <div class="col-xs-12">
                                                                @if (Convert.ToString(TempData["Error"]) != null && Convert.ToString(TempData["Error"]) != "")
                                                                {
                                                                    <h5 style="color:red;font-weight:bold;">@Convert.ToString(TempData["Error"]).Replace("<br />", "\"<br/>\"")</h5>

                                                                }
                                                            </div>
                                                            TempData["Error"] = "";
                                                        }

                                                        @if (Convert.ToString(TempData["Success"]) != "")
                                                        {

                                                            <div class="col-xs-12">

                                                                @{
                                                                    if (Convert.ToString(TempData["Success"]) != null && Convert.ToString(TempData["Success"]) != "")
                                                                    {
                                                                        <h5 style="color:green;font-weight:bold;">@Convert.ToString(TempData["Success"])</h5>
                                                                    }
                                                                }
                                                            </div>
                                                                        TempData["Success"] = "";
                                                                    }

                                                        @if (Convert.ToString(TempData["Failure"]) != "")
                                                        {

                                                            <div class="col-xs-12">

                                                                @{
                                                                    if (Convert.ToString(TempData["Failure"]) != null && Convert.ToString(TempData["Failure"]) != "")
                                                                    {
                                                                        <h5 style="color:red;font-weight:bold;">@Convert.ToString(TempData["Failure"])</h5>
                                                                    }
                                                                }
                                                            </div>
                                                                        TempData["Failure"] = "";
                                                                    }

                                                        <span style="color:#E12F24;">
                                                            <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                        </span>

                                                        <span>
                                                            1) <span style="color:red;">*</span> - Mandatory &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            @*2) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enter multiple job numbers for project related activities i.e. Operation – Project Specific, QA Projects.<br />  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.g. 010101319721, 050101358621
                                                                <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*@
                                                            &nbsp;&nbsp; 2) Continuous entry of more than 6 days of timesheet is restricted.

                                                        </span>



                                                        @*<div class="row">*@
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                        @*</div>*@

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label>Cost Centre:</label>
                                                                @Html.TextBoxFor(model => model.ServiceName, new { @placeholder = "Service Code", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        @*<div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                                <div class="form-group">
                                                                    <label>Service Code:</label>
                                                                    @if (ViewBag.SubCatlist != null)
                                                                    {

                                                                        @Html.DropDownListFor(m => m.ServiceCode, ViewBag.SubCatlist as IEnumerable<SelectListItem>, "--Select Cost center--", new { @class = "form-control", @id = "Pk_CC_Id", })
                                                                        @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger validation-msg" })
                                                                    }
                                                                </div>
                                                            </div>*@
                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label>Activity:</label>
                                                                @if (ViewBag.Activity != null)
                                                                {
                                                                    @Html.DropDownListFor(m => m.ActivityType, ViewBag.Activity as IEnumerable<SelectListItem>, "--Select Activity--", new { @class = "form-control", @id = "PT", @onchange = "onchangeddlStatus(this.value);" })

                                                                    @Html.ValidationMessageFor(model => model.ActivityType, "", new { @class = "text-danger validation-msg" })
                                                                }

                                                            </div>
                                                        </div>

                                                        @if (Model.Id > 0)
                                                        {
                                                            <div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                                <div class="form-group">
                                                                    <label>Start Date:</label>

                                                                    @Html.TextBoxFor(model => model.StartDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom StartDate", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>

                                                            <div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                                <div class="form-group">
                                                                    <label>End Date:</label>
                                                                    @Html.TextBoxFor(model => model.EndDate, "{0:dd MMM yyyy}", new { @placeholder = "End Date", @class = "form-control form-control-custom EndDate", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="col-xs-12 col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Start Date:</label>

                                                                    @Html.TextBoxFor(model => model.StartDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom StartDate", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-6">
                                                                <div class="form-group">
                                                                    <label>End Date:</label>
                                                                    @Html.TextBoxFor(model => model.EndDate, "{0:dd MMM yyyy}", new { @placeholder = "End Date", @class = "form-control form-control-custom EndDate", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                        }





                                                    </div>
                                                    <div class="row" id="pk_ccid">
                                                        <div class="col-xs-12 col-sm-6" id="pk_ccid">
                                                            <div class="form-group">
                                                                <label>Activity Against Cost Centre:</label>
                                                                @if (ViewBag.SubCatlist != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.CostCenter, ViewBag.SubCatlist as IEnumerable<SelectListItem>
                                                                    , "--Select Cost center--", new { @class = "form-control", @id = "Pk_CC_Id", })
                                                                    @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger validation-msg" })
                                                                }
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4" id="OnSiteReadOnly">
                                                            <div class="form-group">
                                                                <label>Outdoor / On-Site Time (Hrs.):</label>

                                                                @Html.TextBoxFor(model => model.ODTime, htmlAttributes: new
                                                           {
                                                               placeholder = "Outdoor / On-Site Time (Hrs.)",
                                                               @class = "form-control",
                                                               autocomplete = "off",
                                                               @OnKeyPress = "return isNumber(event)"@*, @id = "txtonsite"*@ })
                                                                @Html.ValidationMessageFor(model => model.ODTime, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4" id="OffSiteReadOnly">
                                                            <div class="form-group">
                                                                <label>Office / Off-Site Time (Hrs.):</label>
                                                                @Html.TextBoxFor(model => model.EndTime, htmlAttributes: new
                                                           {
                                                               placeholder = "Office / Off-Site Time (Hrs.)",
                                                               @class = "form-control",
                                                               autocomplete = "off",
                                                               @OnKeyPress = "return isNumber(event)"@*, id = "txtoffsite"*@ })
                                                                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Travel Time (Hrs.):</label>
                                                                @Html.TextBoxFor(model => model.TravelTime, htmlAttributes: new
                                                           {
                                                               placeholder = "Travel Time (Hrs.)",
                                                               @class = "form-control",
                                                               autocomplete = "off",
                                                               @OnKeyPress = "return isNumber(event)"@*, id = "txttraveltime"*@ })
                                                                @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        @*</div>*@
                                                    </div>
                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>City/Cities:</label>
                                                                @Html.TextBoxFor(model => model.Location, new { @placeholder = "City/Cities", @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label id="SalesOrderNo" style="display:none;">SalesOrder No.:</label>
                                                                <label id="ControlNo" style="display:none;">TIIMES Job No.:</label>
                                                                <label id="ControlNoWithSubJob" style="display:none;">TIIMES Sub Job No.:</label>
                                                                <span id="ControlSpan" style="color:#ff0000;">*</span>

                                                                @Html.TextBoxFor(model => model.JobNumber, htmlAttributes: new { placeholder = "TUV India Control No.", @class = "form-control", autocomplete = "off", @id = "JobNumber" })
                                                                @Html.ValidationMessageFor(model => model.JobNumber, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        @*<div class="col-xs-12 col-sm-4" id="ControlNoWithSubJob" style="display:none;">
                                                                <div class="form-group">
                                                                    <label>TUV India Control (With Sub Job) No.:</label><span style="color:#ff0000;">*</span>

                                                                    @Html.TextBoxFor(model => model.JobNumber, htmlAttributes: new { placeholder = "TUV India Control (With Sub Job) No.", @class = "form-control", autocomplete = "off",@id="JobNumbersub" })
                                                                    @Html.ValidationMessageFor(model => model.JobNumber, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>*@

                                                        <div class="col-xs-12 col-sm-4" id="callNo" style="display:none;">
                                                            <div class="form-group">
                                                                <label>Tiimes Call Number of Inspector.:</label><span style="color:#1C3DE3">*</span>

                                                                @Html.TextBoxFor(model => model.CallNumber, htmlAttributes: new { placeholder = "Call Number", @class = "form-control", autocomplete = "off", @id = "txtCallNumber", onchange = "CheckValidCall()" })
                                                                @Html.ValidationMessageFor(model => model.CallNumber, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>


                                                    </div>

                                                    <div class="row" id="NewCust">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group " id="DivExisting">
                                                                <label>Customer Type <span style="color:red">*</span> : </label>

                                                                @Html.RadioButtonFor(m => m.NewExistingCustomer, "New", new { id = "New" })
                                                                <label for="Active">New</label>
                                                                @Html.RadioButtonFor(m => m.NewExistingCustomer, "Existing", new { id = "Existing", @checked = "checked" })
                                                                <label for="InActive">Existing</label>
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">

                                                                @Html.RadioButtonFor(m => m.DomesticInternationVisit, "Domestic", new { id = "Domestic" })
                                                                <label for="Active">Domestic</label>
                                                                @Html.RadioButtonFor(m => m.DomesticInternationVisit, "International", new { id = "InternationVisit" })
                                                                <label for="InActive">International</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row" id="txtdays_">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group " id="txtDays">
                                                                <label>Days<span style="color:red">*</span> : </label>
                                                                @Html.RadioButtonFor(m => m.Full_Half_Day, "FullDay", new { @checked = "checked", id = "rdfullday" })
                                                                <label for="Active">Full Day</label>
                                                                @Html.RadioButtonFor(m => m.Full_Half_Day, "HalfDay", new { id = "rdhalfday" })
                                                                <label for="InActive">Half Day</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-8">
                                                            <div class="form-group">
                                                                <label>Description of Activity:</label>
                                                                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { placeholder = "Description of Activity", @class = "form-control form-control-custom ", autocomplete = "off", @rows = "5" })
                                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-4" id="attach">
                                                        <div class="form-group">
                                                            <label>Attachments:</label>
                                                            @*<input type="file"  class="inputupload" name="Image" id="img_Banner" multiple="multiple" />*@
                                                            <input type="file" class="inputupload" name="Image" id="img_Banner" multiple="multiple" />
                                                            @Html.HiddenFor(m => m.Attachment)
                                                            @if (Model != null && Model.Attachment != null && Model.Attachment != "")
                                                            {
                                                                string[] words = (Model.Attachment).Split(',');
                                                                for (int j = 1; j < words.Count(); j++)
                                                                {
                                                                    <a target="_blank" href="@Url.Content("~/NonInspectionActivityDocument/" + words[j-1])">
                                                                        @*<img src="~/PDF-Icon.png" width="50" height="50" />*@
                                                                        <span>@words[j - 1].ToString()</span>
                                                                    </a>
                                                                    @*<img src="@Url.Content("~/Content/JobDocument/" + words[j-1])" width="50" height="50" />*@
                                                                }
                                                            }
                                                        </div>
                                                    </div>





                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-4">

                                                            <div class="form-group">

                                                                <button type="submit" class="btn btn-default insert-form-btn" id="btnAddFl"> Save </button>
                                                                @*<button type="button" class="btn btn-default insert-form-btn" id="ddlInspectionLocation"> Expense</button>*@


                                                            </div>
                                                        </div>

                                                    </div>




                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>
                                                </form>



                                                @*}*@
                                                @using (Html.BeginForm("ListNonInspectionActivity", "NonInspectionActivity", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
                                                {

                                                    <div class="row">
                                                        @*<div class="col-xs-12 col-sm-offset-1 col-sm-10">*@
                                                        <div>
                                                            <div class="form-box">
                                                                <form>



                                                                    <div class="row">
                                                                        <div class="col-xs-12" style="text-align:center;">
                                                                            <h4><label>Records</label></h4>
                                                                        </div>
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-xs-4">
                                                                            <div class="form-group">
                                                                                <label>From Date:</label>
                                                                                @Html.TextBoxFor(model => model.FromD, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                                                                                @Html.ValidationMessageFor(model => model.FromD, "", new { @class = "text-danger validation-msg" })
                                                                            </div>
                                                                        </div>


                                                                        <div class="col-xs-4">
                                                                            <div class="form-group">
                                                                                <label>To Date:</label>
                                                                                @Html.TextBoxFor(model => model.ToD, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                                                                                @Html.ValidationMessageFor(model => model.ToD, "", new { @class = "text-danger validation-msg" })
                                                                            </div>

                                                                        </div>

                                                                        <div class="col-xs-2">
                                                                            <div class="form-group">
                                                                                @*<label>Search:</label>*@<br />
                                                                                <input type="submit" value="Search" class="btn btn-default insert-form-btn" style="margin-top:3px" />
                                                                            </div>

                                                                        </div>
                                                                        <div class="col-xs-2 hidden">
                                                                            <div class="form-group">
                                                                                <br />
                                                                                <button type="button" value="ExportToExcel" class="btn btn-default insert-form-btn" onclick="location.href='@Url.Action("ExportIndex","NonInspectionActivity")'"
                                                                                        style="border:none;margin-top:0px;margin-top:3px;">
                                                                                    Export To Excel
                                                                                </button>

                                                                            </div>
                                                                        </div>
                                                                    </div>



                                                                    <div class="col-xs-12">
                                                                        <table class="display dataTable no-footer" style="overflow-y:auto;width: 1121px;margin-left:-100px" id="gridMapping" onpageindexchanged="gridMapping_PageIndexChanged">
                                                                            <tr>
                                                                                <td>
                                                                                    @(Html
                                                                                        .Grid(Model.NIADashBoard)
                                                                                        .Build(columns =>
                                                                                        {
                                                                                            columns.Add().Titled("Add Expenses").RenderedAs(c => CustomRenderingOfColumnExpense(c)).Sortable(true);
                                                                                            columns.Add().Titled("Edit/Delete").RenderedAs(c => CustomRenderingOfColumn(c)).Sortable(true);
                                                                                            columns.Add(c => c.DateSE).Titled("Date");
                                                                                            columns.Add(c => c.ActivityTypeName).Titled("Activity");
                                                                                            columns.Add(c => c.StartTime).Titled("Outdoor / On-Site Time (Hrs.)");
                                                                                            columns.Add(c => c.EndTime).Titled("Office / Off-Site Time (Hrs.)");
                                                                                            columns.Add(c => c.TravelTime).Titled("Travel Time (Hrs.)");
                                                                                            columns.Add(c => c.CostCenter_name).Titled("CostCenter"); //added by nikita on 30042024
                                                                                            columns.Add(c => c.Location).Titled("City/Cities");
                                                                                            columns.Add(c => c.Description).Titled("Description of Activity");
                                                                                            columns.Add(c => c.ServiceCode).Titled("Service Code");
                                                                                            columns.Add(c => c.NewExistingCustomer).Titled("Customer Type1").Css("grdSAPWidth");
                                                                                            columns.Add(c => c.DomesticInternationVisit).Titled("Customer Type2").Css("grdSAPWidth");
                                                                                            columns.Add(c => c.Id).Titled("ID");
                                                                                            columns.Add().Titled("Attchments").RenderedAs(c => CustomRenderingOfColumnAttachment(c)).Sortable(true);
                                                                                            columns.Add(c => c.JobNumber).Titled("TUVI Control No.");
                                                                                            columns.Add(c => c.SAP_No).Titled("SAP Number").Css("grdSAPWidth");



                                                                                        })
                                                                                        .Pageable(pager =>
                                                                                        {
                                                                                            //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                                                                            pager.ShowPageSizes = true;
                                                                                            pager.PagesToDisplay = 3;
                                                                                            pager.CurrentPage = 1;
                                                                                            pager.RowsPerPage = 15;

                                                                                        })
                                                                                        .UsingFilterMode(GridFilterMode.Row)
                                                                                        .Empty("No Data Found")
                                                                                        .Filterable()
                                                                                        .Sortable()

                                                                                    )
                                                                                </td>
                                                                            </tr>
                                                                        </table>

                                                                    </div>


                                                                    <div class="modal" id="myModal">
                                                                        <div class="modal-dialog">
                                                                            <div class="modal-content">


                                                                                <div class="modal-header">
                                                                                    <button type="button" class="close NO" data-dismiss="modal">&times;</button>
                                                                                </div>
                                                                                <div class="modal-body">
                                                                                    Do you want to Add Expense and Trip Segment?
                                                                                </div>

                                                                                <!-- Modal footer -->
                                                                                <div class="modal-footer">
                                                                                    @*<a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_Call_ID = Model.PK_Call_ID })" class="btn btn-danger" style="background-color:green;" title="Edit">Yes</a>*@
                                                                                    <a href="@Url.Action("CreateExpenseItem", "ExpenseItem", new { FKId = Model.Id,Type="NIA" ,SubJobNo=Model.JobNumber,PK_Call_Id=Model.PK_Call_ID })" class="btn btn-danger" style="background-color:green;" title="Edit">Add Expense</a>
                                                                                    <a href="@Url.Action("CreateTripSegment", "TripSegment", new { FKId = Model.Id,Type="NIA" ,SubJobNo=Model.JobNumber,PK_Call_Id=Model.PK_Call_ID  })" class="btn btn-danger" style="background-color:green;" title="Edit">Add Trip Segment</a>

                                                                                    <button type="button" class="btn btn-danger NO" data-dismiss="modal">No</button>
                                                                                </div>

                                                                            </div>
                                                                        </div>
                                                                    </div>



                                                                </form>
                                                            </div>
                                                        </div>
                                                    </div>

                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                                                    }
@*//added by nikita on 01022024*@
<script>
    $(document).ready(function () {
        debugger;
        $("#pk_ccid").hide();
        if( $("#PT Option:selected").val()=="48"){
            $("#txtdays_").show();
            var endtime=$("#EndTime").val();
            if(endtime=="8"){
                $("#rdfullday").prop("checked", true);
            }
            else if(endtime=="4") {
                $("#rdhalfday").prop("checked", true);
            }
            else{

            }
        }
        else{
            $("#txtdays_").hide();
        }

        console.log("Removing 'QA Activity - Mentoring'");
        $("#PT option[value='15']").remove();
        //$("#PT option[value='42']").remove();
        $("#PT option[value='29']").remove();
        $("#PT option[value='14']").remove();
        $("#PT option[value='13']").remove();
        $("#PT option[value='38']").remove();
        $("#PT option[value='36']").remove();
        $("#PT option[value='47']").remove();
        $("#PT option[value='43']").remove();
        $('#attach').hide();
        //added by nikita on 17042024
        var activity_code = @Session["obsId"];

        var Userid_='@Session["UserID"]';
        //if(Userid_=="TUV000681"){
        //    $("#PT option[value='44']").show();
        //    $("#PT option[value='45']").show();
        //}

        if (activity_code == "32") {
            $("#PT option[value='44']").show();
            $("#PT option[value='45']").show();

        }
        else {
            $("#PT option[value='44']").remove();
            $("#PT option[value='45']").remove();
        }
        //end
        //added by nikita on 19042024
        var activity_code = @Session["specialservice"];
        if (activity_code == "1") {
            $("#PT option[value='43']").show();
            $("#PT option[value='47']").show();


        }
        else {
            $("#PT option[value='43']").remove();
            $("#PT option[value='47']").remove();

        }




    });
</script>
@*end*@

<script>
    $("#btnAddFl").click(function myfunction() {
        debugger;
        const Acttype=$("#PT").val();
        if( $("#PT").val()=="48"){

            var rdfullday=$("#rdfullday").is(":checked");
            var halfday=$("#rdhalfday").is(":checked");
            if(rdfullday===true){
                $("#EndTime").val(8);
            }
            else{
                $("#EndTime").val(4);
            }
        }

        if(Acttype!="40" && Acttype!="41")
        {
            $("#setvalue").val('false');
            let status=checkvalidation();
            if(status==false)
            {
                event.preventDefault()
                return false;
            }
        }
        //end here sat
        if (validateform() == false) {
            return false;
        }
        else {
            $("#form1").submit();
        }
    });

    function validateform()
    {
        debugger;

        //  alert($("#PT Option:selected").val());

        var ActivityType = $("#PT").val();
        var STDate = $("#StartDate").val();
        var ENDate = $("#EndDate").val();

        var Location = $("#Location").val();
        var Description = $("#Description").val();


        var JN = $("#JobNumber").val();

        //var salesno=$("#SalesOrderNo").val();
        //var JNSub = $("#JobNumbersub").val();

        var TT = parseInt($("#TravelTime").val());// $("#TravelTime").val();
        var ODT = $("#ODTime").val();
        var ET = $("#EndTime").val();

        var Call = $("#txtCallNumber").val();
        var Rating = $("#IdRating").val();

        var NewExistingCustomer = $("input[type='radio'][name='NewExistingCustomer']:checked").val();
        var DomesticInternationVisit = $("input[type='radio'][name='DomesticInternationVisit']:checked").val();

        var Id = $("#Id").val();

        // var StartTime = $("#txtCallNumber").val();
        var TravelTime = $("#TravelTime").val();


        //added by nikita on 3004024
        var activity_code = @Session["obsId"];
        var roleid=@Session["RoleID"].ToString();

        var Userid_='@Session["UserID"]';




        if (activity_code == "21" || roleid == "1" || roleid == "46" ||roleid == "47" ||roleid == "48" || roleid == "49" || roleid == "51" || roleid == "53")
        {

            if(ActivityType == "01"||ActivityType == "02" || ActivityType == "03"||ActivityType == "30"|| ActivityType == "31"||ActivityType == "34"||ActivityType == "32"||ActivityType == "27")
            {
                if($("#Pk_CC_Id").val()==""){
                    alert("Please select cost Center!")
                    $("#Pk_CC_Id").focus();
                    return false;
                }
            }
        }
        else if(Userid_=="TUV000681")
        {
            if(ActivityType == "01"||ActivityType == "02" || ActivityType == "03"||ActivityType == "30"|| ActivityType == "31"||ActivityType == "34"||ActivityType == "32"||ActivityType == "27")
            {
                if($("#Pk_CC_Id").val()==""){
                    alert("Please select cost Center!")
                    $("#Pk_CC_Id").focus();
                    return false;
                }
            }
        }


        //end

        if (0 <= parseInt(ODT) && parseInt(ODT) <= 16) {

        }
        else {
            alert("Please select OD Time between 0 to 16!");
            $("#ODTime").focus()
            return false;
        }
        if (0 <= parseInt(ET) && parseInt(ET) <= 16) {

        }
        else {
            alert("Please select Office Time between 0 to 16!");
            $("#EndTime").focus()
            return false;
        }


        //added by nikita on 12032024
        if (ActivityType == '28')
        {
            if ((parseInt($("#TravelTime").val()) > 24 || parseInt($("#TravelTime").val()) < 4))
            {
                alert("please select Travel Time between 4 to 24!");
                $("#TravelTime").focus();
                return false;
            }
        } else {
            if ((parseInt($("#TravelTime").val()) > 8 || parseInt($("#TravelTime").val()) < 0))
            {
                alert("Please select Travel Time between 0 to 8!");
                $("#TravelTime").focus();
                return false;
            }
        }

        //end
        //added by nikita on 12032024
        if (ActivityType === '40' || ActivityType === '41' || ActivityType === '28') {

        }
        else {
            if (parseInt(ODT) === 0 && parseInt(TT) === 0 && parseInt(ET) === 0) {
                alert("At least one value should be more than 0!");
                $("#ODTime").focus();
                return false;
            }
        }

        //end



        if (Id > 0)
        {

        }
        else
        {
            if (STDate == "" || STDate == null) {
                alert("Please select Start Date !");
                $("#StartDate").focus()
                return false;
            }
            else
            {

            }

            if (ENDate == "" || ENDate == null) {
                alert("Please select End  Date !");
                $("#EndDate").focus()
                return false;
            }
            else
            {

            }
        }


        if (($("#PT Option:selected").val() == ""))
        {
            alert("Please Select Activity Type !");
            $("#PT").focus()
            return false;
        }


        /*********************Sub Job Number Compulsory**********************/


        if (($("#PT Option:selected").val() == "42") && (JN == "" || JN == null)) 
        {
            alert("Please Enter SalesOrder Number !");
            $("#SalesOrderNo").focus()
            return false;
        }
        //if (($("#PT Option:selected").val() == "29") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "25") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "41") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "37") && (JN == "" || JN == null)) {
            alert("Please Enter Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "11") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "07") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }
        //if (($("#PT Option:selected").val() == "22") && (JNSub == "" || JNSub == null)) {
        if (($("#PT Option:selected").val() == "18") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "30") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "26") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "30") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "28") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }


        //added by nikita on 12032024

        if (($("#PT Option:selected").val() == "40") && (JN == "" || JN == null)) {
            alert("Please Enter Sub Job Number !");
            $("#JobNumber").focus()
            return false;
        }
        //end

        /*********************Sub Job Number Compulsory**********************/





        /*********************Control Number Compulsory**********************/

        //if (($("#PT Option:selected").val() == "10") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "06") && (JN == "" || JN == null)) {
            alert("Please Enter Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "20") && (JN == "" || JN == null)) {
        if (($("#PT Option:selected").val() == "16") && (JN == "" || JN == null)) {
            alert("Please Enter Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "27") && (JN == "" || JN == null)) {
            alert("Please Enter Job Number !");
            $("#JobNumber").focus()
            return false;
        }
        //added by nikita on 17042024
        if (($("#PT Option:selected").val() == "44"||$("#PT Option:selected").val() == "45") && (JN == "" || JN == null)) {
            alert("Please Enter  Job Number !");
            $("#JobNumber").focus()
            return false;
        }
        if (($("#PT Option:selected").val() == "03") && (JN == "" || JN == null)) {
            alert("Please Enter  Job Number !");
            $("#JobNumber").focus()
            return false;
        }

        //added by nikita on 19042024
        if (($("#PT Option:selected").val() == "43"||$("#PT Option:selected").val() == "47") && (JN == "" || JN == null)) {
            alert("Please Enter  Job Number !");
            $("#JobNumber").focus()
            return false;
        }
        //F
        /*********************Control Number Compulsory**********************/


        //  var LeaveFile = $("[name='img_Banner']").val();
        var LeaveFile = $("#img_Banner").val();

        //if (($("#PT Option:selected").val() == "5") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
        if (($("#PT Option:selected").val() == "01") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }
        //if (($("#PT Option:selected").val() == "5") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
        if (($("#PT Option:selected").val() == "01") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }


        //if (($("#PT Option:selected").val() == "6") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
        if (($("#PT Option:selected").val() == "02") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }
        //if (($("#PT Option:selected").val() == "6") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
        if (($("#PT Option:selected").val() == "02") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }

        /*
        if (($("#PT Option:selected").val() == "10") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }
        if (($("#PT Option:selected").val() == "10") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }
        */

        //if (($("#PT Option:selected").val() == "31") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
        if (($("#PT Option:selected").val() == "27") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }

        //if (($("#PT Option:selected").val() == "31") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
        if (($("#PT Option:selected").val() == "27") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "31") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "31") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }
        if (($("#PT Option:selected").val() == "32") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "32") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }
        if (($("#PT Option:selected").val() == "34") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "34") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }
        if (($("#PT Option:selected").val() == "30") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
            alert("Select Customer Type!");
            $("#NewExistingCustomer").focus()
            return false;
        }

        if (($("#PT Option:selected").val() == "30") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }
        //if (($("#PT Option:selected").val() == "28") && (NewExistingCustomer == "" || NewExistingCustomer == null)) {
        //    alert("Select Customer Type!");
        //    $("#NewExistingCustomer").focus()
        //    return false;
        //}

        //if (($("#PT Option:selected").val() == "28") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
        //    alert("Select Customer Type!");
        //    $("#DomesticInternationVisit").focus()
        //    return false;
        //}



        //if (($("#PT Option:selected").val() == "7") || ($("#PT Option:selected").val() == "31"))
        if (($("#PT Option:selected").val() == "03") || ($("#PT Option:selected").val() == "27"))
        {
            $("#Existing").prop("checked", true);

            //if(($("#PT Option:selected").val() == "7"))
            if (($("#PT Option:selected").val() == "03"))
            {
                $("#Existing").prop("readonly", "readonly");
                var DL = document.getElementById("DivExisting");
                DL.className += " addCSS";

            }


        }
        else {

            $("#DivExisting").removeClass("addCSS");
        }

        //if (($("#PT Option:selected").val() == "7") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
        if (($("#PT Option:selected").val() == "03") && (DomesticInternationVisit == "" || DomesticInternationVisit == null)) {
            alert("Select Customer Type!");
            $("#DomesticInternationVisit").focus()
            return false;
        }

        if (TravelTime=="" || TravelTime==null)
        {
            alert("Select Travel Time!");
            $("#TravelTime").focus()
            return false;
        }
        //if (Location == "" || Location == null) {
        //    alert("Select Location!");
        //    $("#Location").focus()
        //    return false;
        //}
        //if (Description == "" || Description == null) {
        //    alert("Select Description!");
        //    $("#Description").focus()
        //    return false;
        //}

        if($("#PT Option:selected").val() == "48"){
        }
        else{
            if (Location == "" || Location == null) {
                alert("Select Location!");
                $("#Location").focus()
                return false;
            }
        }
        if($("#PT Option:selected").val() == "48"){
        }
        else
        {
            if (Description == "" || Description == null) {
                alert("Select Description!");
                $("#Description").focus()
                return false;
            }
        }


    }

</script>

<script type="text/javascript">
    function OnsiteReadOnly(val)
    {
        if (val == "02" || val == "19" || val == "07" || val == "36" || val == "20" || val == "22" || val == "25" || val == "28" || val == "37")
        {
            var DL = document.getElementById("OnSiteReadOnly");
            DL.className += " addCSS";
            $('#ODTime').val("0");

        }
        else
        {
            $("#OnSiteReadOnly").removeClass("addCSS");
        }

        if (val == "28")
        {
            var DL1 = document.getElementById("OffSiteReadOnly");
            DL1.className += " addCSS";
            $('#EndTime').val("0");
        }
        else
        {
            $("#OffSiteReadOnly").removeClass("addCSS");
        }

    }
</script>
<script type="text/javascript">
    function onchangeddlStatus(val)
    {
        debugger;
        OnsiteReadOnly(val);


        //added by nikita on 12032024
        var selectedValue = $("#PT").val();
        var TT = parseInt($("#TravelTime").val());// $("#TravelTime").val();


        var activity_code = @Session["obsId"];
        var roleid=@Session["RoleID"].ToString();
        var Userid='@Session["UserID"]';
        @*var Userid=Convert(@Session["UserID"]).ToString();*@
        @*var Userid= convert.tostring(@Session["UserID"]);*@

        if (activity_code == "21" || roleid == "1" || roleid == "46" ||roleid == "47" ||roleid == "48" || roleid == "49" || roleid == "51" || roleid == "53"|| roleid == "38"|| roleid == "50"|| roleid == "31")
        {

            if(selectedValue == "01"||selectedValue == "02" || selectedValue == "03"||selectedValue == "30"|| selectedValue == "31"||selectedValue == "34"||selectedValue == "32")
            {
                $("#pk_ccid").show();
            }
            else{
                $("#pk_ccid").hide();
            }
        }
        else if (Userid=="TUV000681"){
            if(selectedValue == "01"||selectedValue == "02" || selectedValue == "03"||selectedValue == "30"|| selectedValue == "31"||selectedValue == "34"||selectedValue == "32")
            {
                $("#pk_ccid").show();
            }
            else{
                $("#pk_ccid").hide();
            }
        }



        if (selectedValue === '40') {
            $("#ODTime").prop('readonly', true);
            $("#EndTime").prop('readonly', true);
            $("#TravelTime").prop('readonly', true);
        } else if (selectedValue === '41') {
            $("#ODTime").prop('readonly', true);
            $("#EndTime").prop('readonly', true);
            $("#TravelTime").prop('readonly', true);
        } else if (selectedValue === '28') {
            $("#ODTime").prop('readonly', true);
            $("#EndTime").prop('readonly', true);
        }
        else if (selectedValue === '04'||selectedValue === '05'||selectedValue === '30') {
            $("#ODTime").prop('readonly', true);
        }

        else if (selectedValue === '39') {
            $("#ODTime").prop('readonly', true);
            $("#EndTime").prop('readonly', true);
        }
            //else if (selectedValue === '48') {
            //    $("#ODTime").prop('readonly', true);
            //    $("#TravelTime").prop('readonly', true);
            //}
        else if(selectedValue ==='48'){
            $("#txtdays_").show();
            $("#ODTime").prop('readonly', true);
            $("#EndTime").prop('readonly', true);
            $("#TravelTime").prop('readonly', true);
            $("#Description").prop('readonly', true);
            $("#Location").prop('readonly', true);

        }
        else if (selectedValue === '44'||selectedValue === '45') { //added by nikita on 18042024
            $('#attach').show();
        }
        else {
            $("#ODTime").prop('readonly', false);
            $("#EndTime").prop('readonly', false);
            $("#TravelTime").prop('readonly', false);
            $('#attach').hide();

        }



        //end
        $('#txtCallNumber').hide();
        $('#callNo').hide();
        $('#idR').hide();
        $('#NewCust').hide();

        VisiblityOfControlNo(val)

        $('#JobNumber').val('');
        // $('#JobNumbersub').val('');


        //if (val == "5" || val == "6" || val == "7" || val == "31" || val == "34" || val == "35" || val == "36" || val == "38")
        if (val == "01" || val == "02" || val == "03" || val == "27" || val == "30" || val == "31" || val == "32" || val == "34")
        {
            $('#NewCust').show();
            //if (val == "7" || val == "31")
            if (val == "03" || val == "27")
            {
                $("#Existing").prop("checked", true);

                //if(val=="7")
                if (val == "03")
                {
                    $("#Existing").prop("readonly", "readonly");
                    var DL = document.getElementById("DivExisting");
                    DL.className += " addCSS";

                }


            }
            else {

                $("#DivExisting").removeClass("addCSS");
            }
        }
        else
        {
            $('input[name="NewExistingCustomer"]').attr('checked', false);
            $('input[name="DomesticInternationVisit"]').attr('checked', false);
            $('#NewCust').hide();

            $("#DivExisting").removeClass("addCSS");

        }


    }


    $(document).ready(function ()
    {

        debugger;


        var val = $("#PT Option:selected").val();   //added by nikita on 30042024

        OnsiteReadOnly(val);

        var activity_code = @Session["obsId"];
        var roleid=@Session["RoleID"].ToString();



        if (activity_code == "21" || roleid == "1" || roleid == "46" ||roleid == "47" ||roleid == "48" || roleid == "49" || roleid == "51" || roleid == "53")
        {

            if(val == "01"||val == "02" || val == "03"||val == "30"|| val == "31"||val == "34"||val == "32"||val == "27")
            {
                $("#pk_ccid").show();
            }
            else{
                $("#pk_ccid").hide();
            }
        }


        if(val=="48"){
            $("#txtdays_").show();
        }


        $('#txtCallNumber').hide();
        $('#callNo').hide();
        $('#idR').hide();
        $('#NewCust').hide();

        VisiblityOfControlNo(val)


        //if (val == "5" || val == "6" || val == "7" || val == "31" || val == "34" || val == "35" || val == "36" || val == "38")
        if (val == "01" || val == "02" || val == "03" || val == "27" || val == "30" || val == "31" || val == "32" || val == "34")
        {
            $('#NewCust').show();
            //if (val == "7" || val=="31")
            if (val == "03" || val == "27")
            {

                $("#Existing").prop("checked", true);
                //if (val == "7") {
                if (val == "03") {
                    $("#Existing").prop("readonly", "readonly");
                    var DL = document.getElementById("DivExisting");
                    DL.className += " addCSS";
                }

            }
            else {

                $("#DivExisting").removeClass("addCSS");
            }
        }
        else {
            $('input[name="NewExistingCustomer"]').attr('checked', false);
            $('input[name="DomesticInternationVisit"]').attr('checked', false);
            $('#NewCust').hide();

            $("#DivExisting").removeClass("addCSS");
        }
    });




    function VisiblityOfControlNo(val2)
    {

        //if (val2 == "29" || val2 == "11" || val2 == "22" || val2 == "32" || val2 == "31" || val2 == "41")
        if (val2 == "25" || val2 == "07" || val2 == "18" || val2 == "28" || val2 == "40")
        {
            /// single Sub Job Number

            $('#ControlNo').hide();
            $('#ControlNoWithSubJob').show();
            $('#JobNumber').show();
            $('#ControlSpan').show();
            $('#SalesOrderNo').hide();
        }
            //else if (val2 == "10" || val2 == "20")
        else if (val2 == "06" || val2 == "16" || val2 == "27" || val2 == "37"|| val2=="44"||val2=="45"||val2=="03"||val2=="43"||val2=="47")
        {
            //control no with sub job
            $('#ControlNo').show();
            $('#ControlNoWithSubJob').hide();
            $('#JobNumber').show();
            $('#ControlSpan').show();
            $('#SalesOrderNo').hide();
        }
        else if (val2 == "42") {
            $('#ControlNo').hide();
            $('#ControlNoWithSubJob').hide();
            $('#JobNumber').show();
            $('#ControlSpan').hide();
            $('#SalesOrderNo').show();
        }
        else
        {
            $('#ControlNo').hide();
            $('#ControlNoWithSubJob').hide();
            $('#JobNumber').hide();
            $('#ControlSpan').hide();
            $('#SalesOrderNo').hide();
        }
    }

</script>


<script>
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        //  alert(evt.keyCode);
        var charCode = (evt.which) ? evt.which : evt.keyCode;


        if ((charCode > 31 && (charCode < 48 || charCode > 57)) && (charcode != 46)) {
            return false;
        }
        return true;
    }
</script>

<script>
    $(document).ready(function ()
    {
        $("#JobNumber").focusout(function ()
        {

            var JobNoAS = $("#JobNumber").val();
            var ActivityType = $("#PT").val();
            // alert(ActivityType);
            if (JobNoAS != '')
            {
                $.post("@Url.Action("ValidateJob", "NonInspectionActivity")",
                {
                    JobNo: $("#JobNumber").val(),
                    ActType: $("#PT").val()

                },
                function (data)
                {
                    if (data == 0)
                    {
                        alert("Job No does not exist !");
                        $("#JobNumber").val("");
                        return false;
                    }
                    if (data == 2) {
                        alert("This SalesOrder No does not exist in the system!");
                        $("#JobNumber").val("");
                        return false;
                    }
                }
                );
            }

        });

    });
</script>


@*...Calender Control...*@

<script src="~/AllJsAndCss/moment.min.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>



<script>
    $(function () {
        $(".StartDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    $(function () {
        $(".EndDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

@*Date Picker for From Date*@

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    function CheckValidCall() {
        debugger;
        // $("#Status").html('<font color="blue">Checking ...</font>'),

        $.post("@Url.Action("CheckValidCall", "NonInspectionActivity")",
            {
                companyname: $("#txtCallNumber").val()
            },
            function (data) {
                debugger;
                if (data == 0) {

                    alert("Call Number is not Valid.")
                    $("#txtCallNumber").val("");

                    //$("#Status").html('<font color="red">Coupan Code is  already Use !</font>');
                }
                if (data == 1) {




                }



            });


    }
</script>

<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>

<script>
    $(document).ready(function () {
        $('#ddlInspectionLocation').on('click', function () {
            debugger;
            $('#myModal').show();
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('.NO').click('change', function () {

            $('#myModal').hide();
        });
    });
</script>

<script>
    $(document).ready(function () {
        debugger;
        var AddExpense = $("#AddExpense").val();
        if(AddExpense=="Yes")
        {

            //var button = document.getElementById("ddlInspectionLocation");
            //button.Click();
            $('#myModal').show();
        }
        else
        {

        }


    });
</script>



<script>

    function checkDateDifference() {
        debugger;
        //if ($('#chkPassport').prop('checked')) {
        var fromDate = $("#StartDate").val();
        var convertedfromDate = moment(fromDate).format('DD/MM/YYYY');



        var toDate = $("#EndDate").val();
        var convertedtoDate = moment(toDate).format('DD/MM/YYYY');

        if (moment(fromDate, 'DD/MM/YYYY').isValid() && moment(toDate, 'DD/MM/YYYY').isValid()) {
            var diffDuration = moment.duration(moment(toDate, 'DD/MM/YYYY').diff(moment(fromDate, 'DD/MM/YYYY')));

            var daysDifference = diffDuration.asDays();


        } else {
            console.log('Invalid date format');
        }




        //var timeDifference = toDate - fromDate;
        //var dayDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

        if (daysDifference > 6) {
            alert('System will not allow to fill Timesheet for more than 6 days.');
            $("#StartDate").val("");
            $("#EndDate").val("");
        }
    }

    function cheackSunday() {
        debugger;
        //var fromDate = $("#StartDate").val();
        //var toDate = $("#EndDate").val();

        //if (moment(fromDate, 'DD/MM/YYYY').isValid() && moment(toDate, 'DD/MM/YYYY').isValid()) {
        //    if (isSunday(fromDate) || isSunday(toDate)) {
        //        alert('Selected date is a Sunday. Please choose a different date.');

        //    }
        //}

        var startDate = moment($('#StartDate').val(), 'YYYY-MM-DD');
        var endDate = moment($('#EndDate').val(), 'YYYY-MM-DD');

        if (isSunday(startDate) || isSunday(endDate)) {
            alert('Selected date is a Sunday. Please choose a different date.');
            // You can add additional actions or modifications here if needed.
        }

    }

    //function isSunday(date) {
    //    return date.getDay() === 0; // 0 corresponds to Sunday
    //}
    function isSunday(date) {
        debugger
        return date.day() === 0; // 0 corresponds to Sunday
    }

</script>
<script>
    //$(".PoDates1").change(function () {
    $('#StartDate, #EndDate').change(function () {
        debugger;
        checkDateDifference();
        UserHolidayCheck();
        CheckWeeklyOff()
    });
</script>

<script>
    function UserHolidayCheck()
    {
        debugger;
        //$("#Status").html('<font color="blue">Checking ...</font>'),
        $.post("@Url.Action("chkIfHoliday", "NonInspectionActivity")",
            {
                //companyname: $("#Company_Name").val(),
                fromDate: $("#StartDate").val(),
                toDate: $("#EndDate").val()
            },
            function (data)
            {
                if (data == 0)
                {


                }
                else
                {
                    alert("Entering timesheet for Holiday / Sunday. Ensure dates before proceeding further.")
                }
            });
    }
</script>

<script>
    function CheckWeeklyOff()
    {
        debugger;
        $.post("@Url.Action("chkIfWeeklyOffEntered", "NonInspectionActivity")",
            {
                fromDate: $("#StartDate").val(),
                toDate: $("#EndDate").val()
            },
            function (data)
            {
                if (data == 0)
                {

                }
                else
                {
                    //alert("You have inserted leaves on selected dates");
                    //$("#StartDate").val("");
                    //$("#EndDate").val("");

                    var ActivityType = $("#PT").val();
                    if (ActivityType == '40')
                    {

                    }
                    else
                    {
                        alert("You have inserted leaves on selected dates");
                        $("#StartDate").val("");
                        $("#EndDate").val("");
                    }



                }
            });
    }
</script>


<script>
    function CheckSunday()
    {
        debugger;
        $.post("@Url.Action("chkIfSunday", "NonInspectionActivity")",
            {
                fromDate: $("#StartDate").val(),
                toDate: $("#EndDate").val()
            },
            function (data)
            {
                if (data == 0)
                {

                }
                else
                {
                    alert("Entering timesheet for Sunday. Ensure dates before proceeding further.")
                }
            });
    }
</script>

@*//added by nikita on 06052024*@
<script>

    $(document).ready (function(){
        debugger;
        var id = @Html.Raw(Json.Encode(Model.Id)); // Accessing model value
        $.ajax({
            url:"@Url.Action("CheckSendForApproval", "NonInspectionActivity")",
            Type:"get",
            datetype:"json",
            data: { pkcallid: id },
            success:function(result){
                debugger;
                if (result !== '') {
                    // Parse the JSON string manually since it's double serialized
                    var parsedResult = JSON.parse(result);

                    if (parsedResult.length > 0) {
                        var opestatus = parsedResult[0].issendforapproval_ope;
                        var Expensestatus = parsedResult[0].issendforapproval_expense;

                        if (Expensestatus != 0) {
                            $("#btnAddFl").hide();
                            $("#btnAddExpenses").hide();
                            $(".btnAddExpenses").hide();
                        }
                    } else {
                        console.log("No data found.");
                    }
                }
            }
        });
    });

    $(document).ready (function(){
        debugger;
        var id = @Html.Raw(Json.Encode(Model.Id)); // Accessing model value
        $.ajax({
            url:"@Url.Action("CheckSendForApproval", "NonInspectionActivity")",
            Type:"get",
            datetype:"json",
            data: { pkcallid: id },
            success:function(result){
                debugger;
                if (result !== '') {
                    // Parse the JSON string manually since it's double serialized
                    var parsedResult = JSON.parse(result);

                    if (parsedResult.length > 0) {
                        var opestatus = parsedResult[0].issendforapproval_ope;
                        var Expensestatus = parsedResult[0].issendforapproval_expense;

                        if (opestatus != 0) {
                            $("#ODTime").attr("readonly", true);
                            $("#EndTime").attr("readonly", true);
                            $("#TravelTime").attr("readonly", true);
                        }
                    } else {
                        console.log("No data found.");
                    }
                }
            }
        });
    });

    @*$(document).ready (function(){
        debugger;
        var id = @Html.Raw(Json.Encode(Model.Id)); // Accessing model value
        $.ajax({
            url:"@Url.Action("CheckSendForApproval", "NonInspectionActivity")",
            Type:"get",
        datetype:"json",
        data: { pkcallid: id },
        success:function(result){
            debugger;
            var parsed = $.parseJSON(result);
            var opestatus =parsed[0].issendforapproval_ope;
            //var Expensestatus =parsed[0].issendforapproval_expense;

            //var stage = ds[0].val();
            if (opestatus !=0){
                $("#ODTime").attr("readonly", true);
                $("#EndTime").attr("readonly", true);
                $("#TravelTime").attr("readonly", true);


            }
        }

    })

    })*@
</script>

@*added by satish yadav*@
<script>
    function checkvalidation()
    {
        debugger;


        var arrayOfTimesheet = [];
        let Id = document.getElementById("Id").value;
        var startDate = $('#StartDate').val();
        var endDate = $("#EndDate").val();
        if (startDate == "" || startDate == null) {
            alert("Please select Start Date !");
            $("#StartDate").focus()
            return false;
        }
        else
        {

        }

        if (endDate == "" || endDate == null) {
            alert("Please select End  Date !");
            $("#EndDate").focus()
            return false;
        }
        else
        {

        }
        var fromDateMoment = moment(startDate, 'DD/MM/YYYY');
        var toDateMoment = moment(endDate, 'DD/MM/YYYY');
        if (fromDateMoment.isValid() && toDateMoment.isValid()) {
            var diffDuration = moment.duration(toDateMoment.diff(fromDateMoment));
            var daysDifference = diffDuration.asDays();
        }
        if(endDate!="Invalid date" && endDate!="")
        {
            for (var m = fromDateMoment.clone(); m.isSameOrBefore(toDateMoment); m.add(1, 'days')) {
                let onSiteTime = parseFloat($("#ODTime").val());
                let offSiteTime = parseFloat($("#EndTime").val());
                let travelTime = parseFloat($("#TravelTime").val());
                let statuschk = ValidateTimeSheet(onSiteTime, offSiteTime, travelTime);
                if (statuschk == false) {
                    event.preventDefault()
                    return false;
                }
                arrayOfTimesheet.push({
                    dateSE:m.format('DD/MM/YYYY'), totalStartTime: onSiteTime, totalEndTime: offSiteTime, totalTravelTime: travelTime,Id:Id
                })
            }

        }else
        {

            let onSiteTime = parseFloat($("#ODTime").val());
            let offSiteTime = parseFloat($("#EndTime").val());
            let travelTime = parseFloat($("#TravelTime").val());
            let DateSe = $('#StartDate').val();
            let statuschk = ValidateTimeSheet(onSiteTime, offSiteTime, travelTime);
            if (statuschk == false) {
                event.preventDefault()
                return false;
            }
            arrayOfTimesheet.push({
                dateSE:fromDateMoment._i, totalStartTime: onSiteTime, totalEndTime: offSiteTime, totalTravelTime: travelTime,Id:Id
            })
        }
        if (arrayOfTimesheet && arrayOfTimesheet.length > 0)
        {
            CommonajaxCallForTimeSheet(arrayOfTimesheet);
            const ajaxstatus=$("#setvalue").val();
            if(ajaxstatus=='true')
            {
                event.preventDefault()
                return false;
            }
        }
    }
</script>
<script>
    function CommonajaxCallForTimeSheet(arrayOfTimesheet)
    {
        debugger;
        $.ajax({
            url:'@Url.Action("CheckCondition", "VisitReport")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ matchingData: arrayOfTimesheet}),
            async:false,
            success: function(response) {
                debugger;
                if(!!response && response.success!="")
                {
                    alert(response.success);
                    $("#setvalue").val('true');//when we return false some jquary file  affected  the call --thats way we used hidden field
                    return false;
                }
            },
            error: function(xhr, status, error) {
                console.error('Error sending data: ', error);
                return false;
            }
        });
    }
    function ValidateTimeSheet(totalStartTime, totalEndTime, totalTravelTime) {
        debugger;

        if (totalStartTime > 0 || totalEndTime > 0 || totalTravelTime > 0) {
            let allowlessthan24 = parseFloat(totalStartTime + totalEndTime + totalTravelTime);
            const allowlessthan12 = parseFloat(totalStartTime + totalEndTime);

            if (allowlessthan24 > 24) {
                alert("greater than 24");
                return false;
            } else if (allowlessthan12 > 12) {
                alert("greater than 12");
                return false;
            }
        }
        else {
            alert("Values must be greater than 0!");
            return false;
        }
        return true;
    }
</script>