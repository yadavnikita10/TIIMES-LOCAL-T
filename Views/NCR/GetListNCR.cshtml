@*@model IEnumerable<TuvVision.Models.NCR>*@
@model TuvVision.Models.NCR
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "GetListNCR";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

@helper Edit(TuvVision.Models.NCR Report)
{
if (Report.Edit == "1")
{
        <a href="@Url.Action("CreateNCR", "NCR", new {@Id = Report.Id})" title="Edit"><i class="fa fa-pencil"></i></a>
}
else
{

}
}
<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <div class="col-xs-12">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">NCR</h3>
                @*<button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateNCR", "NCR")'">Add NCR</button>*@
                <button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex1","NCR")'">
                    Export To Excel
                </button>
            </div><!-- /.col -->

            <div class="col-xs-12">
                <hr class="custom-hr">
            </div><!-- /.col -->
        </div>
        <div class="col-xs-12">
        </div>

        <div class="col-xs-12">
            <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lmd1)
                            .Build(columns =>
                            {

                                columns.Add().Titled("Edit").RenderedAs(c => Edit(c)).Sortable(true);
                                //columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateNCR", new { Id = o.Id }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { Id = o.Id }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));
                                columns.Add(c => c.Id).Titled("Id").Hidden();
                                columns.Add(c => c.NCRNo).Titled("NCR No");
                                columns.Add(c => c.TUVControlNo).Titled("TUVI Control No");
                                columns.Add(c => c.ProjectName).Titled("Project Name");
                                columns.Add(c => c.Client).Titled("Client");
                                columns.Add(c => c.SubJobNo).Titled("Sub/Sub-Sub Job No");
                                columns.Add(c => c.V1).Titled("Sub Job Vendor Name");
                                columns.Add(c => c.V2).Titled("Sub-Sub Job Vendor Name");
                                columns.Add(c => c.P1).Titled("Sub Job PO No");
                                columns.Add(c => c.P2).Titled("Sub-Sub Job PO No");
                                columns.Add(c => c.ItemEquipment).Titled("Item Equipment");
                                columns.Add(c => c.ReferenceDocument).Titled("Reference Document");
                                columns.Add(c => c.DescriptionOfTheNonconformity).Titled("Description Of The Nonconformity");
                                columns.Add(c => c.NCRRaisedBy).Titled("NCR Raised By");
                                columns.Add(c => c.Date).Titled("Date");
                                columns.Add(c => c.IVRId).Titled("IVR Id");
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.Status).Titled("Status");

                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>

        </div>





    </div>

</div>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>





