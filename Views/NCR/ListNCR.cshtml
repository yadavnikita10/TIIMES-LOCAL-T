@*@model IEnumerable<TuvVision.Models.NCR>*@
@model TuvVision.Models.NCR
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "ListNCR";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

@*DATEPICKER*@

<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />

@*Testing purpose of Time Picker*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.1/moment.min.js"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/js/bootstrap-datetimepicker.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/css/bootstrap-datetimepicker.min.css">
@helper Edit(TuvVision.Models.NCR Report)
{
if (Report.Edit == "1")
{
        <a href="@Url.Action("CreateNCR", "NCR", new {@Id = Report.Id})" title="Edit"><i class="fa fa-pencil"></i></a>
}
else
{

}
}

<style>
    .btn1 {
        display: inline-block;
        border: 1px solid #001ED2;
        padding: 6px 14px;
        font-size: 14px;
        border-radius: 0;
        margin-bottom: 5px;
        background-color: #001ED2;
        color: #FFFFFF;
        margin-left: 10px;
        /*font-family: mont-med;*/
        font-family: 'TNG Pro';
    }
</style>


<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <div class="col-xs-12">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">NCR</h3>
                <br />
                <br />
                @using (Html.BeginForm("ListNCR", "NCR", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="col-xs-12">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="small">From Date:</label>
                                @Html.TextBoxFor(model => model.FromDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom form-control-sm form FromD", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger validation-msg" })
                            </div>
                        </div>
                        <div class="col-sm-3" style="margin-left: 10px">
                            <div class="form-group">
                                <label class="small">To Date:</label>
                                @Html.TextBoxFor(model => model.ToDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select End Date", @class = "form-control form-control-custom form-control-sm form FromD", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger validation-msg" })
                            </div>
                        </div>
                        <div class="col-sm-3" style="margin-left: 10px">
                            <div class="form-group">

                                <input type="submit" value="Search" class="btn btn-default insert-form-btn insert form-control-sm" id="btnsave" @*style="margin-top:22px; "*@ />

                            </div>

                        </div>
                        <div class="col-sm-3" >
                            <div class="form-group" style="margin-left: 436px;margin-top: -55px;">

                                <button type="button"value="ExportToExcel" class="btn btn-info dynamic-function-btn btn1" onclick="location.href='@Url.Action("ExportIndex","NCR")'">
                                    Export To Excel
                                </button>
                            </div>

                        </div>
                    </div>
                }
                @*<button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateNCR", "NCR")'">Add NCR</button>*@


            </div><!-- /.col -->

            <div class="col-xs-12">
                <hr class="custom-hr">
            </div><!-- /.col -->
            <!--Table was here-->

        </div>
        <div class="col-xs-12">
            @*<table id="example" class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="hidden">Id</th>
                            <th>NCR No </th>
                            <th>TUVI Control No </th>
                            <th>Project Name</th>
                            <th>Client</th>
                            <th>Vendor Sub Vendor </th>
                            <th>Item Equipment</th>
                            <th>Reference Document</th>
                            <th>Description Of The Nonconformity</th>
                            <th>NCR Raised By</th>
                            <th>Date</th>

                            <th>IVR Id</th>
                            <th>Branch</th>
                            <th>Status</th>
                            <th IVRIdclass="remove-search">Action</th>
                        </tr>
                    </thead>

                    <tbody>

                        <tr class="hidden">
                            <td class="hidden"></td>
                            <td>NCR No </td>
                            <td>TUVI Control No </td>
                            <td>Project Name</td>
                            <td>Client</td>
                            <td>Vender Sub Vendor </td>
                            <td>Item Equipment</td>
                            <td>Reference Document</td>
                            <td>Description Of tde Nonconformity</td>
                            <td>NCR Raised By</td>
                            <td>Date</td>
                            <td>IVR Id</td>
                            <td>Branch</td>
                            <td>Status</td>
                            <td></td>


                        </tr>

                        <tr class="hidden">
                            <td></td>
                            <td> </td>
                            <td> </td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>



                        </tr>

                        @foreach (var b in Model)
                        {
                            <tr>
                                <td class="hidden">@b.Id</td>
                                <td>@b.NCRNo </td>
                                <td>@b.TUVControlNo </td>
                                <td>@b.ProjectName</td>
                                <td>@b.Client</td>
                                <td>@b.VenderSubVendor </td>
                                <td>@b.ItemEquipment</td>
                                <td>@b.ReferenceDocument</td>
                                <td>@b.DescriptionOfTheNonconformity</td>
                                <td>@b.NCRRaisedBy</td>
                                <td>@b.Date</td>

                                <td>@b.IVRId</td>
                                <td>@b.Branch</td>
                                <td>@b.Status</td>
                                <td cRemarkslass="action-btn" style="text-align:center;">
                                    <a href="@Url.Action("CreateNCR", "NCR", new { Id = @b.Id })" class="btn btn-info btn-xs" title="Edit"><i class="fa fa-pencil"></i></a>

                                    <a href="@Url.Action("Delete", "NCR", new { Id = @b.Id })" class="delete" onclick="return confirm('Are you sure you wish to Delete selected Record?');" title="Delete"><i class="fa fa-trash"></i></a>


                                </td>

                            </tr>
                        }
                    </tbody>

                </table>*@

        </div>

        <div class="col-xs-12">
            <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lmd1)
                            .Build(columns =>
                            {
                                //columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateNCR", new { Id = o.Id }, new { @class = "fa fa-pencil", title = "Edit" }));
                                //columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { Id = o.Id }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));
                                columns.Add().Titled("Edit").RenderedAs(c => Edit(c)).Sortable(true);
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { Id = o.Id }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));
                                columns.Add(c => c.Id).Titled("Id").Hidden();
                                columns.Add(c => c.NCRNo).Titled("NCR No");
                                columns.Add(c => c.TUVControlNo).Titled("TUVI Control No");
                                columns.Add(c => c.ProjectName).Titled("Project Name");
                                columns.Add(c => c.Client).Titled("Client");
                                columns.Add(c => c.SubJobNo).Titled("Sub/Sub-Sub Job No");
                                columns.Add(c => c.V1).Titled("Sub Job Vendor Name");
                                columns.Add(c => c.V2).Titled("Sub-Sub Job Vendor Name");
                                columns.Add(c => c.P1).Titled("Sub Job PO No");
                                columns.Add(c => c.P2).Titled("Sub-Sub Job PO No");
                                columns.Add(c => c.ItemEquipment).Titled("Item Equipment");
                                columns.Add(c => c.ReferenceDocument).Titled("Reference Document");
                                columns.Add(c => c.DescriptionOfTheNonconformity).Titled("Description Of The Nonconformity");
                                columns.Add(c => c.NCRRaisedBy).Titled("NCR Raised By");
                                columns.Add(c => c.Date).Titled("Date");
                                columns.Add(c => c.IVRId).Titled("IVR Id");
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.Status).Titled("Status");

                                //                            columns.Add(c => c.AttachedDoucment)
                                //.Titled("Reference Documents")
                                //.RenderedAs(model =>
                                //{
                                //    if (model.AttachedDoucment != null && model.AttachedDoucment != "")
                                //    {
                                //        var output = "<div style='display: flex; flex-wrap: wrap; gap: 10px;'>"; // Horizontal layout using flexbox
                                //        foreach (var d in model.AttachedDoucment.Split('!'))
                                //        {
                                //            var attach = d.Split('|');
                                //            if (attach.Length >= 3)
                                //            {
                                //                var linkText = attach[0].ToString();
                                //                var linkUrl = Url.Action("DownloadNCRAttach", "NCR", new { p = attach[2].ToString(), d = attach[1].ToString() });
                                //                output += $@"
                                //                    <div>
                                //                        <a href='{linkUrl}' download='{linkUrl}' title='{linkText}' style='text-decoration: none;'>
                                //                            <img src='/View1.png'/>
                                //                        </a>
                                //                    </div>";
                                //            }
                                //        }
                                //        output += "</div>";
                                //        return new HtmlString(output);
                                //    }
                                //    else
                                //    {
                                //        return "";
                                //    }
                                //});
                                columns.Add(c => c.AttachedDoucment)
     .Titled("Reference Documents")
     .RenderedAs(model =>
     {
         if (!string.IsNullOrEmpty(model.AttachedDoucment))
         {
             var output = "<div style='display: flex; flex-wrap: wrap; gap: 10px;'>";
             var documents = model.AttachedDoucment.Split('!');

             foreach (var document in documents)
             {
                 var attach = document.Split('|');

                 if (attach.Length >= 3)
                 {
                     var fileNameWithExtension = attach[0];
                     var fileId = attach[1];


                     var fileExtension = Path.GetExtension(fileNameWithExtension);


                     var linkUrl = $"/NCR/DownloadNCRAttach/?p={fileId + fileExtension}&d={fileNameWithExtension}";


                     output += $@"
                        <div>
                            <a href='{linkUrl}' title='Download {fileNameWithExtension}' style='text-decoration: none;'>
                                <img src='/View1.png' alt='Download Icon' title='{fileNameWithExtension}' />
                            </a>
                        </div>";
                 }
             }

             output += "</div>";
             return new HtmlString(output);
         }
         else
         {
             return "";
         }
     });





                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>

        </div>





    </div>

</div>
@*<div id="Grid" class="hidden">
        @Html.Partial("_NCR", Model)
    </div>


    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
            $(function () {
                $("#btnSubmit").click(function () {
                    $("input[name='GridHtml']").val($("#Grid").html());
                });
            });
    </script>*@
<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>












