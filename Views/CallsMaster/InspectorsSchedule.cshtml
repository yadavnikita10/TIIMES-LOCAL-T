@model TuvVision.Models.CallsModel
@{
    ViewBag.Title = "InspectorsSchedule";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int j = 0;
}

@*<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />*@

<style>
    #customers {
        /*font-family: Arial, Helvetica, sans-serif;*/
        font-family:'TNG Pro';
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #ddd;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            /*background-color: #04AA6D;*/
            background-color: #001ED2;
            color: white;
        }
</style>


@using (Html.BeginForm("InspectorsSchedule", "CallsMaster", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <br /><br />

            <div class="form-group" style="padding-left:25px;">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Inspector Schedule</h3>
            </div>

            @if (Convert.ToString(TempData["Result"]) != null && Convert.ToString(TempData["Result"]) != "")
            {
                <div class="col-xs-4">
                    <h4 style="color:red;font-weight:bold;">@Convert.ToString(TempData["Result"])</h4>
                </div>
            }

            <div class="form-group" style="padding-left:25px;">
                <hr class="custom-hr1">
            </div>


            <br /><br />
            <div class="row">

                <div class="col-xs-2">
                    <div class="form-group" >
                        <label>Select Date:</label>
                        @Html.TextBoxFor(model => model.FromDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/MM/yyyy", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                @*<div class="col-xs-2">
                    <div class="form-group" style="width:280px;padding-right:25px;">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/MM/yyyy", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>

                </div>*@

                <div class="col-xs-2">
                    <label></label>
                    <div class="form-group">
                        <button type="button" class="btn btn-primary form-control" id="btnSearch">Search</button>
                    </div>
                </div>

                @*<div class="col-xs-2">
                    <div class="form-group">
                        <label></label>
                        <button type="button" id="a" value="ExportToExcel" class="btn btn-primary form-control" onclick="location.href='@Url.Action("ExportIndexEnquiryReport","MisReport")'">
                            Export To Excel
                        </button>
                    </div>
                </div>*@


            </div>



            <div class="col-xs-12">
                @*<table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>

                            @(Html
                            .Grid(Model.lstInspectorSchedule)
                            
                            .Build(columns =>
                            {
                               columns.Add(c => c.Inspector).Titled("Inspector Name");
                                columns.Add(c => c.InspectorAddress).Titled("Inspector Address");
                                columns.Add(c => c.Call_No).Titled("Call Name");
                                columns.Add(c => c.InspectionLocation).Titled("Inspection Location");
                                columns.Add(c => c.VendorName).Titled("Vendor Name");
                                columns.Add(c => c.SubVendorName).Titled("Sub Vendor Name");

                            })
                            .Pageable(pager =>
                            {

                                pager.ShowPageSizes = true;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                                pager.TotalRows = 500;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()


                            )
                        </td>
                    </tr>
                </table>*@

            </div>

            <style>
                #searchBox {
  box-sizing: border-box;
  width: 100%;
  font-size: 16px;
  padding: 12px 20px 12px 40px;
  border: 1px solid #ddd;
  margin-bottom: 12px;
}
            </style>

            <input type="text" id="searchBox" placeholder="Search">
            <div class="col-xs-12">
                <table id="customers" class="display custom-table" cellspacing="0" width="100%">

                    <thead>
                        <tr>
                            
                            <th class="remove-search" >Inspector Name </th>
                            <th class="remove-search">Current Assignment </th>
                            
                            <th class="remove-search" >Inspector Address</th>
                            <th class="remove-search" >Call No</th>
                            <th class="remove-search">EstimatedHours</th>
                            <th class="remove-search">Inspection Location</th>
                            <th class="remove-search">Vendor Name</th>
                            <th class="remove-search">Sub Vendor Name</th>
                           
                        </tr>
                    </thead>

                    <tbody>

                        @{
                            int i = 0;
                        }
                         @foreach (var item in ViewBag.CostSheet as IEnumerable<TuvVision.Models.CallsModel>)
                        {

                            i = i + 1;
                            <tr>
                                <td>@item.Inspector</td>
                                <td>@item.CurrentAssignment</td>
                                <td>@item.InspectorAddress</td>
                                <td>@item.Call_No</td>
                                <td>@item.EstimatedHours</td>
                                <td>@item.InspectionLocation</td>
                                <td>@item.VendorName</td>
                                <td>@item.SubVendorName</td>
                            </tr>
                                            j++;
                                        }
                    </tbody>
                </table>
            </div>



            <script>
                var $rows = $('#table tr');
                $('#searchBox').keyup(function () {
                    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

                    $rows.show().filter(function () {
                        var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                        return !~text.indexOf(val);
                    }).hide();
                });
            </script>

            <script>
                function performSearch() {

                    // Declare search string 
                    var filter = searchBox.value.toUpperCase();

                    // Loop through first tbody's rows
                    for (var rowI = 0; rowI < trs.length; rowI++) {

                        // define the row's cells
                        var tds = trs[rowI].getElementsByTagName("td");

                        // hide the row
                        trs[rowI].style.display = "none";

                        // loop through row cells
                        for (var cellI = 0; cellI < tds.length; cellI++) {

                            // if there's a match
                            if (tds[cellI].innerHTML.toUpperCase().indexOf(filter) > -1) {

                                // show the row
                                trs[rowI].style.display = "";

                                // skip to the next row
                                continue;

                            }
                        }
                    }

                }

                // declare elements
                const searchBox = document.getElementById('searchBox');
                const table = document.getElementById("customers");
                const trs = table.tBodies[0].getElementsByTagName("tr");

                // add event listener to search box
                searchBox.addEventListener('keyup', performSearch);
            </script>




        </div>

    </div>



}


@*...Calender Control...*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/MvcGrid/jquery.quicksearch.js"></script>
<script src="~/Scripts/MvcGrid/dataTables.fixedColumns.min.js"></script>

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSearch").click(function myfunction() {
            debugger;
            if (ValidateForm() == false) {
                return false;
            }
            else {
                $("#form1").submit()
            }
        });
    });

    function ValidateForm() {

        if ($("#FromDate").val() == "") {
            alert('Select From Date!');
            return false;
        }
        if ($("#ToDate").val() == "") {
            alert('Select To Date!');
            return false;
        }
        debugger;
        if ($("#FromDate").val() > $("#ToDate").val()) {
            alert("To Date selected is Greater than From Date  !!!");
            return false;
        }

        else {
            return true;

        }
    }
</script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });


            $('.mvc-grid-value').each(function (i)
            {
                    $(this).quicksearch("#gridMapping tr:not(:has(th))",
                    {
                        'testQuery': function (query, txt, row)
                        {
                            return $(row).children(":eq(" + i + ")").text().toLowerCase().indexOf(query[0].toLowerCase()) != -1;
                        }
                    });
            });



</script>
