@model TuvVision.Models.CallsModel
@{
    ViewBag.Title = "CallsDetails";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    List<string> EditProdName = ViewBag.EditproductName as List<string>;
}
<!--multiselect-->
@*<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />*@

@*<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-1.8.0.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.22/jquery-ui.js"></script>*@
<!--multiselect-->
<link href="~/Content/css/bootstrap-multiselect.css" rel="stylesheet" />
@*<script src="~/Scripts/bootstrap-multiselect.js"></script>*@
@*<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />*@

<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />
@*DATEPICKER*@
@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.js" data-modules="effect effect-bounce effect-blind effect-bounce effect-clip effect-drop effect-fold effect-slide"></script>*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<style>
    a#btnAddToCart {
        padding: 12px;
    }
    span.excel {
        word-break: break-all;
    }
</style>
<script type="text/javascript">
    function ShowHideDiv(chkPassport) {
        var dvPassport = document.getElementById("dvPassport");
        dvPassport.style.display = chkPassport.checked ? "block" : "none";
    }
</script>
<script>

    $(function () {
        $(".PoDates").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>

    $(function () {
        $(".TODate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    $(function () {
        $(".CallRecivedate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".CallRequestdate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    $(function () {
        $(".PlannedDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>


<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom.js"></script>
<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
</style>
@if ((Convert.ToString(TempData["InsertCompany"])) != "" && Convert.ToString(TempData["InsertCompany"]) != null)
{
    TempData["InsertCompany"] = null;
    <script type="text/javascript" language="javascript">
        //alert("Calls Added Successfully!!!!");
    </script>
}



@Html.AntiForgeryToken()
<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        <!-- The Modal -->
                        <div class="modal" id="myModal">
                            <div class="modal-dialog">
                                <div class="modal-content">

                                    <!-- Modal Header -->
                                    <div class="modal-header">

                                        <button type="button" class="close NO" data-dismiss="modal">&times;</button>
                                    </div>

                                    <!-- Modal body -->
                                    <div class="modal-body">
                                        Do you want to Create Visit Report?
                                    </div>

                                    <!-- Modal footer -->
                                    <div class="modal-footer">
                                        <a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_Call_ID = Model.PK_Call_ID, @status="Closed"})" class="btn btn-danger" style="background-color:green;" title="Edit">Yes</a>
                                        @*<button type="button" class="btn btn-danger" data-dismiss="modal">Yes</button>*@
                                        <button type="button"  class="btn btn-danger NO" data-dismiss="modal">No</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!--End The Modal -->

                        <!-- The Modal -->
                        <div class="modal" id="myModalAbortive">
                            <div class="modal-dialog">
                                <div class="modal-content">

                                    <!-- Modal Header -->
                                    <div class="modal-header">

                                        <button type="button" class="close NO" data-dismiss="modal">&times;</button>
                                    </div>

                                    <!-- Modal body -->
                                    <div class="modal-body">
                                        Do you want to Create Visit Report?
                                    </div>

                                    <!-- Modal footer -->
                                    <div class="modal-footer">
                                        <a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_Call_ID = Model.PK_Call_ID, @status="Abortive"})" class="btn btn-danger" style="background-color:green;" title="Edit">Yes</a>
                                        @*<button type="button" class="btn btn-danger" data-dismiss="modal">Yes</button>*@
                                        <button type="button" class="btn btn-danger NO" data-dismiss="modal">No</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!--End The Modal -->

                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("CallsListByInspector","CallsMaster")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                @if (Model.Call_No == null)
                                {
                                    <h3 class="form-page-title">Create Call</h3>
                                }
                                else
                                {
                                    <h3 class="form-page-title"> Call No :- @Model.Call_No</h3>
                                }

                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">
                                                @Html.HiddenFor(m => m.PK_SubJob_Id)
                                                @Html.HiddenFor(m => m.PK_Call_ID, new { @class = "GetID" })
                                                @Html.HiddenFor(m => m.Actual_Visit_Date)
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service Type:</label>

                                                            @Html.TextBoxFor(model => model.Type, new { @placeholder = "Type", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Client Name:</label>

                                                            @Html.TextBoxFor(model => model.Company_Name, new { @placeholder = "Client Name", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> End Customer:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.End_Customer, new { @placeholder = "End Customer", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.End_Customer, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Vendor Name:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.Vendor_Name, new { @placeholder = "Vendor Name", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Vendor_Name, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Project Name:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.Project_Name, new { @placeholder = "Project Name", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Project_Name, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Source:</label>
                                                            @*@Html.DropDownListFor(m => m.Source, new List<SelectListItem>
                                                          {
                                                           new SelectListItem{ Text="Select Source", Value = "" },
                                                            new SelectListItem{ Text="Email", Value = "Email" },
                                                            new SelectListItem{ Text="Fax", Value = "Fax" },
                                                            new SelectListItem{ Text="Phone", Value = "Phone" },
                                                            new SelectListItem{ Text="Walk-in", Value = "Walk-in" },
                                                            new SelectListItem{ Text="Web", Value = "Web" },

                                                         }, new { @class = "form-control", @disabled = "disabled", @readonly = "readonly", @id = "Source" })*@

                                                            @Html.TextBoxFor(model => model.Source, new { @placeholder = "Source", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Job No:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.Job, new { @placeholder = "Job", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Sub Job:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.Sub_Job, new { @placeholder = "Sub Job", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Sub_Job, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>P.O Number:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.PO_Number, new { @placeholder = " Po Number", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.PO_Number, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Call Received Date:</label>

                                                            @Html.TextBoxFor(model => model.Call_Recived_date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Call Received Date", @class = "form-control  ", autocomplete = "off", @readonly = "readonly" })

                                                            @Html.ValidationMessageFor(model => model.Call_Recived_date, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    @if (Model.Call_Request_Date != "")
                                                    {
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label> Call Request Date:</label>
                                                                @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                                @Html.TextBoxFor(model => model.Call_Request_Date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Call Request Date", @class = "form-control CallRequestdate ", autocomplete = "off", @disabled = "disabled", @readonly = "readonly" })

                                                                @Html.ValidationMessageFor(model => model.Call_Request_Date, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    }

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Planned Date:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.TextBoxFor(model => model.Planned_Date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Planned Date", @class = "form-control  ", autocomplete = "off", @readonly = "readonly" })

                                                            @Html.ValidationMessageFor(model => model.Planned_Date, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                        @if (Model.Call_Request_Date == "") //Model.From_Date == null & Model.To_Date == null
                                                        {
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>From Date:</label>
                                                                    @Html.TextBoxFor(model => model.From_Date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "From Date", @class = "form-control PoDates ", @disabled = "disabled", autocomplete = "off", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.From_Date, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>To Date:</label>
                                                                    @Html.TextBoxFor(model => model.To_Date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "To Date", @class = "form-control TODate ", @disabled = "disabled", autocomplete = "off", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.To_Date, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            
                                                        }
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label> Inspector:</label>
                                                                @if (ViewBag.Userlist != null)
                                                                {
                                                                    @Html.DropDownListFor(m => m.FirstName, ViewBag.Userlist as IEnumerable<SelectListItem>, "--Select Inspector--", new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" })

                                                                }
                                                                @*@Html.TextBoxFor(model => model.FirstName, new { @placeholder = "Inspector", @class = "form-control"  })*@
                                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger validation-msg" })
                                                           @Html.HiddenFor(model => model.FirstName)
                                                             </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Originating Branch </label>
                                                            @if (ViewBag.SubCatlist != null)
                                                            {
                                                                @Html.DropDownListFor(m => m.Originating_Branch, ViewBag.SubCatlist as IEnumerable<SelectListItem>, "--Select Branch--", new { @class = "form-control", @id = "Br_Id", @disabled = "disabled" })
                                                            }
                                                            @Html.ValidationMessageFor(model => model.Originating_Branch, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Executing Branch:</label>

                                                            @*@Html.TextBoxFor(model => model.Executing_Branch, new { @placeholder = "Executing Branch", @class = "form-control" })*@
                                                            @if (ViewBag.SubCatlist != null)
                                                            {
                                                                @Html.DropDownListFor(m => m.Br_Id, ViewBag.SubCatlist as IEnumerable<SelectListItem>, "--Select Branch--", new { @class = "form-control", @disabled = "disabled" })

                                                            }
                                                            @Html.ValidationMessageFor(model => model.Br_Id, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Call Status:</label>

                                                            @*@Html.TextBoxFor(model => model.Status, new { @placeholder = "Status", @class = "form-control", @readonly = "readonly" })*@

                                                            @Html.DropDownListFor(m => m.Status, new List<SelectListItem>
                                                                {
                                                                new SelectListItem{ Text="Select Status", Value = "" },
                                                                new SelectListItem{ Text="Open", Value = "Open" },
                                                                new SelectListItem{ Text="Assigned", Value = "Assigned" },
                                                                new SelectListItem{ Text="Not Done", Value = "NotDone" },
                                                                new SelectListItem{ Text="Closed", Value = "Closed" },
                                                                new SelectListItem{ Text="Abortive", Value = "Abortive" },
                                                                }, new { @class = "form-control", @id = "ddlInspectionLocation" })
                                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Product Item:</label><span style="color:#ff0000;">*</span>
                                                            <div class="drpdomn" id="drpdomn">
                                                            </div>
                                                            @if (ViewBag.check == "productcheck")
                                                            {

                                                                    <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">
                                                                    @foreach (var item in ViewBag.ProjectTypeItems)
                                                                    {
                                                                        if (EditProdName.Contains(item.Text))
                                                                        {
                                                                            <option value="@item.Value" selected>@item.Text</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.Value">@item.Text</option>
                                                                        }

                                                                    }
                                                                </select>
                                                            }
                                                            else
                                                            {
                                                               
                                                                <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">

                                                                    @{
                                                                        foreach (var item in ViewData["Drpproduct"] as IEnumerable<TuvVision.Models.Calls>)
                                                                        {

                                                                            <option value="@item.Product_Name">@item.Product_Name&nbsp; &nbsp;</option>


                                                                        }
                                                                    }
                                                                </select>
                                                                        }



                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Product Description:</label>
                                                            @Html.TextBoxFor(model => model.Description, new { placeholder = "Enter Description", @class = "form-control form-control-custom CompanyName" , @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Product Quantity:</label>
                                                            @Html.TextBoxFor(model => model.Quantity, new { placeholder = "Enter Quantity", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Sub Category:</label>
                                                            @Html.DropDownListFor(m => m.Sub_Category, new List<SelectListItem>
                                                          {
                                                            new SelectListItem{ Text="kick Off Meeting", Value = "kick Off Meeting" },
                                                            new SelectListItem{ Text="Pre inspection meeting", Value = "Pre inspection meeting" },
                                                            new SelectListItem{ Text="Stage Inspection", Value = "Stage Inspection" },
                                                            new SelectListItem{ Text="Final Inspection", Value = "Final Inspection" },
                                                         }, new { @class = "form-control", @id = "Type", @readonly = "readonly", @disabled = "disabled" })
                                                            @Html.ValidationMessageFor(m => m.Sub_Category, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label> Urgency:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @Html.DropDownListFor(m => m.Urgency, new List<SelectListItem>
                                                          {
                                                            new SelectListItem{ Text="High", Value = "High" },
                                                            new SelectListItem{ Text="Low", Value = "Low" },
                                                            new SelectListItem{ Text="Med-High", Value = "Med-High" },
                                                            new SelectListItem{ Text="Med-Low", Value = "Med-Low" },
                                                            new SelectListItem{ Text="Low", Value = "SubSub Job" },

                                                         }, new { @class = "form-control", @id = "Type", @disabled = "disabled", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(m => m.Urgency, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Special Notes:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your Special Notes..."></textarea>*@

                                                            @Html.TextAreaFor(model => model.Special_Notes, new { @placeholder = "Special Notes", @class = "form-control",@readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Special_Notes, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                                    <div class="col-xs-12 col-sm-4" id='INTERNATIONAL' style='display:none;'>
                                                        <div class="form-group">
                                                            <label style="color:red;">Reason:</label>

                                                            @Html.TextBoxFor(model => model.Reasion, new { @placeholder = "Reason", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Reasion, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4" id='IVR' style='display:none;'>
                                                        <div class="form-group">
                                                            <label style="color:transparent;">Reason:</label>
                                                            <a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_Call_ID = Model.PK_Call_ID })" class="btn btn-info dynamic-function-btn" style="height: 33px;" title="Edit">Create Visit Report</a>
                                                        </div>
                                                    </div>





              



                                                </div>


                                                <div class="row">



                                                  


                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Inspection Location:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                            @Html.TextAreaFor(model => model.Job_Location, new { @placeholder = "Job Location", @class = "form-control", @rows = "3", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Job_Location, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Client Contact:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                            @Html.TextAreaFor(model => model.Client_Contact, new { @placeholder = "Client Contact", @class = "form-control", @rows = "3", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Client_Contact, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Vendor Location:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                            @Html.TextAreaFor(model => model.Vendor_Contact, new { @placeholder = "Vendor Location", @class = "form-control", @rows = "3", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Vendor_Contact, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Sub Vendor Contact:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                            @Html.TextAreaFor(model => model.Sub_Vendor_Contact, new { @placeholder = "Sub Vendor Contact", @class = "form-control", @rows = "3", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Sub_Vendor_Contact, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>






                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>TUV Email:</label> @Html.CheckBoxFor(model => model.Homecheckbox)
                                                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                        @Html.TextAreaFor(model => model.Tuv_Branch, new { @placeholder = "Home Branch", @class = "form-control", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(model => model.Tuv_Branch, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>


                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label> Client Email:</label>@Html.CheckBoxFor(model => model.ClientEmailcheckbox)
                                                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                        @Html.TextAreaFor(model => model.Client_Email, new { @placeholder = "Client Email", @class = "form-control", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(model => model.Client_Email, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Vendor Email: </label> @Html.CheckBoxFor(model => model.Vendorcheckbox)
                                                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                        @Html.TextAreaFor(model => model.Vendor_Email, new { @placeholder = "Vendor Email", @class = "form-control", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(model => model.Vendor_Email, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>






                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Attachment:</label>
                                                        @*<input type="file" class="inputupload" name="Image" id="img_Banner" multiple="multiple" />*@
                                                        @Html.HiddenFor(m => m.Attachment)

                                                        

                                                        <div class="row">
                                                            @if (Model != null)
                                                            {
                                                                if (Model.SubJobFileDetails != null && Model.SubJobFileDetails.Count > 0)
                                                                {
                                                                    <div class="col-xs-12">
                                                                        <div class="form-group">
                                                                            <ul class="AttachmentFormat">
                                                                                @foreach (var item in Model.SubJobFileDetails)
                                                                                {
                                                                                    <li>
                                                                                        <a class="title1" href="~/Content/JobDocument/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                                        
                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded against Sub Job</p>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <p style="color:red;text-align:center;font-weight:bold;">There are no attachments !!!</p>
                                                            }
                                                        </div>
                                                        <div class="row">
                                                            @if (Model != null)
                                                            {
                                                                if (Model.CallFileDetails != null && Model.CallFileDetails.Count > 0)
                                                                {
                                                                    <div class="col-xs-12">
                                                                        <div class="form-group">
                                                                            <ul class="AttachmentFormat">
                                                                                @foreach (var item in Model.CallFileDetails)
                                                                                {
                                                                                    <li>
                                                                                        <a class="title1" href="~/Content/JobDocument/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>

                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded against Call</p>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <p style="color:red;text-align:center;font-weight:bold;">There are no attachments !!!</p>
                                                            }
                                                        </div>

                                                    </div>
                                                </div>


                                                <div class="col-xs-12 col-sm-4">

                                                    <div class="form-group">
                                                        <label style="color:red;">Report Formates </label>
                                                        @{

                                                            if (Model != null)
                                                            {

                                                                //if (!string.IsNullOrEmpty(Model.formats_Of_Report))
                                                                //{
                                                                   
                                                                    <div class="row">
                                                                        @if (Model != null)
                                                                        {
                                                                            if (Model.FileDetailsFormat1 != null && Model.FileDetailsFormat1.Count > 0)
                                                                            {
                                                                                <div class="col-xs-12">
                                                                                    <div class="form-group">
                                                                                        <ul class="AttachmentFormat">
                                                                                            @foreach (var item in Model.FileDetailsFormat1)
                                                                                            {
                                                                                                <li>
                                                                                                    <a class="title1" href="~/JobMaster/DownloadFormat/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                                                    @*<a href="javascript:void(0);" data-id="@item.IDS" class="deleteItemFormat">X</a>*@
                                                                                                </li>
                                                                                            }
                                                                                        </ul>
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <p style="color:red;text-align:center;font-weight:bold;">No File Formats</p>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <p style="color:red;text-align:center;font-weight:bold;">There are no attachments !!!</p>
                                                                        }
                                                                    </div>

                                                                //}

                                                            }
                                                        }
                                                    </div>
                                                </div>







                                                <div class="row">
                                                    <div class="col-xs-12 text-center">
                                                        <a href="@Url.Action("IRNReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.Sub_Job })" class="btn btn-default news-btn"> IRN List</a>
                                                        <a href="@Url.Action("IVRReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.Sub_Job })" class="btn btn-default news-btn"> Visit Reports</a>
                                                        <a href="@Url.Action("NCRReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.PK_Call_ID })" class="btn btn-default news-btn"> NCR List</a>
                                                    </div>

                                                </div>
                                                @if (Model.Status == "Closed")
                                                {

                                                }
                                                else
                                                {
                                                    <div class="col-xs-12 text-center">

                                                        <button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Save </button>
                                                        @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                        Open modal
                    </button>*@
                                                    </div>
                                                }

                                            </form>

                                        </div>
                                    </div>
                                </div>
                                <!--Contact Details By Manoj -->


                            </div><!-- /.box-shadow -->
                        </div><!-- /.col -->

                    </div><!-- /.row -->
                </div><!-- /.col -->



            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
</div>

<script type="text/javascript">
    $(function () {
        var v = $('#Br_Id').val();
        debugger;
        $("#FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/CallsMaster/GetAutoCompleteData/",
                    // data: "{'InspectorName':'" + request.term + "'}",
                    data: '{InspectorName: "' + request.term + '" ,Br_Id: "' + v + '"}',
                    datatype: "json",
                    type: "POST",
                    contentType: "application/json;charset-utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.FirstName, value: item.FirstName };
                        }))
                    },
                    minLength: 1
                });
            }
        });
    });

</script>


<script type="text/javascript">
    $(function () {

        debugger;
        $("#Sub_Job").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/CallsMaster/GetSubNoAutoComplete/",
                    data: "{'InspectorName':'" + request.term + "'}",
                    // data: '{InspectorName: "' + request.term + '" ,Br_Id: "' + v + '"}',
                    datatype: "json",
                    type: "POST",
                    contentType: "application/json;charset-utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Sub_Job, value: item.Sub_Job };
                        }))
                    },
                    minLength: 1
                });
            }
        });
    });

</script>
@if (Model.To_Date !=null && Model.From_Date !=null)
{
    <script>
    $(document).ready(function () {
        $('#ddlInspectionLocation').on('change', function () {

            if (this.value == 'NotDone')
            {
                $("#INTERNATIONAL").show();
                $("#IVR").hide();
            }
            else if (this.value == 'Open')
            {
                $("#INTERNATIONAL").hide();
                $("#IVR").hide();

            }
            else if (this.value == 'Closed') {
                debugger;
                
                $("#INTERNATIONAL").hide();
                 //alert("Do you want to Create Visit Report");
                $('#myModal').show();            
                 //$("#IVR").show();
            }
            else if (this.value == 'Abortive') {
                $("#INTERNATIONAL").hide();
                // $("#IVR").show();
                $('#myModalAbortive').show();
            }

        });
    });
    </script>
}
else
{
    <script>
        $("#Visitreport").click(function () {
        $('#ddlInspectionLocation').on('change', function () {

            if (this.value == 'NotDone')
            {
                $("#INTERNATIONAL").show();
                $("#IVR").hide();
            }
            else if (this.value == 'Open')
            {
                $("#INTERNATIONAL").hide();
                $("#IVR").hide();

            }
            else if (this.value == 'Closed') {
                $("#INTERNATIONAL").hide();
              //  alert("Do you want to Create Visit Report");
                $("#IVR").show();
            }
            else if (this.value == 'Abortive') {
                var hv = 'Abortive';
                $("#INTERNATIONAL").hide();
                $("#IVR").show();
            }
        });
    });
    </script>
}

<script>


    $(document).ready(function () {

        if ($("#ddlInspectionLocation").val() == 'Closed')
        {
            $("#Status").attr("disabled", true);
            $("#ddlInspectionLocation").attr("disabled", true);
            //$("#Type").attr("disabled", true);
            //$("#End_Customer").attr("disabled", true);
            //$("#Company_Name").attr("disabled", true);
            //$("#End_Customer").attr("disabled", true);
            //$("#Vendor_Name").attr("disabled", true);
            //$("#Project_Name").attr("disabled", true);
            //$("#Source").attr("disabled", true);
            //$("#Job").attr("disabled", true);
            //$("#Sub_Job").attr("disabled", true);
            //$("#Call_Recived_date").attr("disabled", true);
            //$("#Call_Request_Date").attr("disabled", true);
            //$("#Planned_Date").attr("disabled", true);
            //$("#From_Date").attr("disabled", true);
            //$("#To_Date").attr("disabled", true);
            //$("#FirstName").attr("disabled", true);
            //$("#Originating_Branch").attr("disabled", true);
            //$("#Br_Id").attr("disabled", true);
            //$("#ProductLists").attr("disabled", true);
            //$("#Description").attr("disabled", true);
            //$("#Quantity").attr("disabled", true);
            //$("#Sub_Category").attr("disabled", true);
            //$("#Urgency").attr("disabled", true);
            //$("#Reasion").attr("disabled", true);
            //$("#Job_Location").attr("disabled", true);
            //$("#Client_Contact").attr("disabled", true);
            //$("#Vendor_Contact").attr("disabled", true);
            //$("#Sub_Vendor_Contact").attr("disabled", true);
            //$("#Tuv_Branch").attr("disabled", true);
            //$("#Client_Email").attr("disabled", true);
            //$("#Vendor_Email").attr("disabled", true);
            //$("#Attachment").attr("disabled", true);
            //$("#formats_Of_Report").attr("disabled", true);
        }
    });
</script>

<script>
    $(document).ready(function () {
        $('.NO').click('change', function () {
          
            $('#myModal').hide();
            $('#myModalAbortive').hide();
        });
    });
</script>

<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
<script>
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
</script>

<script type="text/javascript">
    $(function () {
        $('#ProductLists').multiselect({
            includeSelectAllOption: true
        });

    });

    $(function () {
        $("#Product_item").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Virtual_Call/GetAutoCompleteDataPItem/",
                    data: "{'Productname':'" + request.term + "'}",
                    datatype: "json",
                    type: "POST",
                    contentType: "application/json;charset-utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Product_item, value: item.Product_item };
                        }))
                    },
                    minLength: 1
                });
            }
        });
    });



</script>

