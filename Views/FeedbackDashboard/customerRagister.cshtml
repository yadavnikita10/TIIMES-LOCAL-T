@model TuvVision.Models.customerFeedbackregister
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "customerRagister";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}



<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
@*calender control*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>


@using (Html.BeginForm("customerRagister", "FeedbackDashboard", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-9">
                <br />
                <br />
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Customer Feedback Register</h3>
    

            </div><!-- /.col -->
            <div class="col-xs-2">
                <div class="form-group">
                    <br />
                    <br />
                    <button type="button" id="btnExport" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex2", "FeedbackDashboard")';">
                        Export To Excel
                    </button>
                </div>
            </div>
        </div>
        <br />
        <br />

        <div class="col-xs-12">
            <hr class="custom-hr1">
        </div><!-- /.col -->



                <div class="col-xs-12">
                    <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                        <tr>
                            <td>


                                @(Html
.Grid(Model.lstCustomerFeedback)
.Build(columns =>

{



    columns.Add(c => c.RequestCreatedBy).Titled("Request Created By");
    columns.Add(c => c.Branch_Name).Titled("Branch Name");
    columns.Add(c => c.RequestDate).Titled("Request Date");
    columns.Add(c => c.CompanyName).Titled("Customer Name");
    columns.Add(c => c.JobNo).Titled("Job Number");
    columns.Add(c => c.AddressOfOrg).Titled("Address Of Organisation");
    columns.Add(c => c.ResponseFilledDate).Titled("Respondant Filled Date");
    columns.Add(c => c.NameOfRespondant).Titled("Name Of Respondant");
    columns.Add(c => c.DesignationOfRespondant).Titled("Designation Of Respondant");
    columns.Add(c => c.Emailid).Titled("Email ID of the Respondent");
    columns.Add(c => c.FeedbackRemark).Titled("Feed back against which Order / Project / Item / Vendor / Equipment / P.O./ TUV control No.?");
    columns.Add(c => c.ResponseRequiredDate).Titled("Response Required Date");
    columns.Add(c => c.QNo1).Titled("Did the quotation contain all the required information?");
    columns.Add(c => c.QNo2).Titled ("How well did we understand your requirements?");
    columns.Add(c => c.QNo3).Titled ("How well did we respond to your enquiry?");
    columns.Add(c => c.QNo4).Titled ("How quickly were your queries resolved & revised quotation submitted?");
    columns.Add(c => c.QNo5).Titled ("Was your email / call responded on time?");
    columns.Add(c => c.QNo6).Titled ("Was the call scheduled as per your request?");
    columns.Add(c => c.QNo7).Titled ("Did You receive the Quotation within Expected Time Frame?");
    columns.Add(c => c.QNo8).Titled ("Did you receive information regarding conformation of calls, inspector details in advance?");
    columns.Add(c => c.QNo9).Titled ("In case of change in schedule were you informed within expected time frame?");
    columns.Add(c => c.QNo10).Titled("How satisfied are you with the communication process with the inspection coordination team?");
    columns.Add(c => c.QNo11).Titled("How would you rate the behaviour of TUV inspector with your staff (w.r.t. language, attitude)?");
    columns.Add(c => c.QNo12).Titled("How would you rate the inspector’s safety awareness & leadership in implementation of safety requirements?");
    columns.Add(c => c.QNo13).Titled("How would you rate the quality of inspection w.r.t. observations raised?");
    columns.Add(c => c.QNo14).Titled("How would you rate the efficiency of our inspector w.r.t time taken for inspection?");
    columns.Add(c => c.QNo15).Titled("How would you rate our inspectors for maintaining confidentiality & Integrity?");
    columns.Add(c => c.QNo16).Titled("Did you receive the inspection report/Release note in time?");
    columns.Add(c => c.QNo17).Titled("Did the report meet your expectations w.r.t. completeness, contents and conclusion");
    columns.Add(c => c.QNo18).Titled("How would you rate the report for number of errors, revisions?");
    columns.Add(c => c.QNo19).Titled("For Improvement");
    //columns.Add(c => c.QNo20).Titled("Further Exception");

})
.Pageable(pager =>
{
    //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
    pager.ShowPageSizes = true;
    pager.PagesToDisplay = 3;
    pager.CurrentPage = 1;
    pager.RowsPerPage = 2;
})
.UsingFilterMode(GridFilterMode.Row)
.Empty("No data found")
.Filterable()
.Sortable()

                                )


                            </td>
                        </tr>
                    </table>

                </div>




            </div>
        }

    </div>

}

<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
        'custom': CustomTextFilter
        }
});
</script>
