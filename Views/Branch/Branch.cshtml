@model TuvVision.Models.BranchMasters
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "Branch";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

@*Ashwini Scripts here for datatable starts here*@
@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>*@

<!--export to excel-->
@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>*@
@*Ashwini Scripts here for datatable ends here*@

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

@using (Html.BeginForm())
{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Branch Management</h3>
                    <button type="button" value="CreateRole" style="margin-left: 10px" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateBranch", "Branch")'">Add New Branch</button>
                    <button type="button" id="a" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","Branch")'"
                            >
                        Export To Excel
                    </button>
                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->

            <div class="col-xs-12">
                @*<table id="example" class="display custom-table" cellspacing="0" width="100%">

                        <thead>
                            <tr>
                                <th class="remove-search less-width">Action</th>
                                <th>Branch Name</th>
                                <th>Branch Admin</th>
                                <th>Branch Code</th>
                                <th>Email Id</th>
                                <th>Country</th>
                                <th>City Name</th>
                                <th>Address 1</th>
                                <th>Address 2</th>
                                <th>Status</th>




                            </tr>
                        </thead>

                        <tbody>



                            <tr class="hidden">
                                <td></td>
                                <td>Branch Name</td>
                                <td>Branch Admin</td>
                                <td>Branch Code</td>
                                <td>Email Id</td>
                                <td>Country</td>
                                <td>City Name</td>

                                <td>Address 1</td>
                                <td>Address 2</td>
                                <td>Status</td>

                            </tr>

                            <tr  class="hidden">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>

                                <td></td>
                                <td></td>
                                <td></td>

                            </tr>



                            @{
                                int i = 0;
                            }
                            @foreach (var item in ViewData["BranchList"] as IEnumerable<TuvVision.Models.BranchMasters>)
                            {
                                <tr>
                                    <td class="less-width">
                                        <a href="@Url.Action("DeleteBranch", "Branch", new {@Br_Id = item.Br_Id })" onclick="return confirm('Are you sure you want to delete this record?')" title="Delete"><span class="fa fa-trash-o"></span>&nbsp;</a>
                                        @{
                                            if ((Convert.ToString(TempData["InsertCompany"])) != "" && Convert.ToString(TempData["InsertCompany"]) != null)
                                            {
                                                TempData["InsertCompany"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Added Successfully!!!!");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["UpdateCompany"])) != "" && Convert.ToString(TempData["UpdateCompany"]) != null)
                                            {
                                                TempData["UpdateCompany"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Updated Successfully");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["DeleteCompany"])) != "" && Convert.ToString(TempData["DeleteCompany"]) != null)
                                            {
                                                TempData["DeleteCompany"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Deleted Successfully");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["InsertContact"])) != "" && Convert.ToString(TempData["InsertContact"]) != null)
                                            {
                                                TempData["InsertContact"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Added Successfully!!!!");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["UpdateContact"])) != "" && Convert.ToString(TempData["UpdateContact"]) != null)
                                            {
                                                TempData["UpdateContact"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Updated Successfully");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["DeleteContact"])) != "" && Convert.ToString(TempData["DeleteContact"]) != null)
                                            {
                                                TempData["DeleteContact"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Branch Deleted Successfully");
                                                </script>
                                            }
                                        }
                                    </td>
                                    <td>

                                    <a href="@Url.Action("CreateBranch", "Branch", new {@Br_Id = item.Br_Id })" title="Edit">@item.Branch_Name</a>
                                    </td>

                                    <td>@item.BranchAdmin</td>
                                    <td>@item.Branch_Code</td>
                                    <td>@item.Email_Id</td>
                                    <td>@item.Country</td>
                                    <td>@item.CityName</td>


                                    <td>@item.Address1</td>
                                    <td>@item.Address2</td>
                                    <td>@item.Status</td>

                                </tr>
                                            }

                        </tbody>

                    </table>*@
            </div><!-- /.data table col -->


            <div class="col-xs-12">
                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lstCompanyDashBoard1)
                            .Build(columns =>
                            {

                                //< a href = "@Url.Action("CreateBranch", "Branch", new {@Br_Id = item.Br_Id })" title = "Edit" > @item.Branch_Name </ a >
                                //< a href = "@Url.Action("DeleteBranch", "Branch", new {@Br_Id = item.Br_Id })" onclick = "return confirm('Are you sure you want to delete this record?')" title = "Delete" >< span class="fa fa-trash-o"></span>&nbsp;</a>
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "DeleteBranch", new { Br_Id = o.Br_Id }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete this Branch?');" }));
                                columns.Add(c => c.Branch_Name).Titled("Branch Name").Encoded(false).RenderedAs(o => Html.ActionLink(o.Branch_Name, "CreateBranch", new { Br_Id = o.Br_Id })).Filterable(true).FilteredAs("custom").Sortable(true);

                                columns.Add(c => c.BranchAdmin).Titled("Branch Admin");
                                columns.Add(c => c.Branch_Code).Titled("Branch Code");
                                columns.Add(c => c.Email_Id).Titled("Email Id");
                                columns.Add(c => c.Country).Titled("Country");
                                columns.Add(c => c.CityName).Titled("City Name");
                                columns.Add(c => c.Address1).Titled("Address 1");
                                //columns.Add(c => c.Address2).Titled("Address 2");
                                columns.Add(c => c.Status).Titled("Status");




                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                            )


                        </td>
                    </tr>
                </table>


            </div>

        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
    <!--End of Ashwini Code-->


}

<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>

