@model TuvVision.Models.BranchMasters

@{
    ViewBag.Title = "CreateBranch";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<!--multiselect-->
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />

<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<script src="~/AllJsAndCss/js/datatable-custom.js"></script>
<style>
     /*-- Delete color-profile --*/
    ul.Attachment {
    padding-left: 0px;
    list-style: none;
    margin-bottom: 0px;
    }
    ul.Attachment > li {
        border: 1px solid #999;
        margin: 7px 5px 0 0;
        display: inline-block;
        padding: 0px 10px;
        background-color: #dfdfdf;
        color: #000;
    }
    ul.Attachment > li a.title {
        color: #000;
        vertical-align: text-bottom;
        text-transform: capitalize;
    }
    ul.Attachment > li a.deleteItem {
        color: white;
        font-size: 10px;
        background: #e91e1e;
        padding: 2px 4px;
        border-radius: 50%;
        vertical-align: text-top;
    }
    /*EndCode*/
</style>

@using (Html.BeginForm("CreateBranch", "Branch", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
    @Html.Hidden("Br_Id")
    @Html.AntiForgeryToken()
    <div class="main-content3 xs-max-height grey-bg-f3">
        <div class="grey-bg-f3">
            <!--Start of header-->
            <div class="container-fluid">
                <div class="row assignfixedwidth rp-5">

                    <div class="col-xs-12 form-col">
                        <div class="row">

                            <div class="col-xs-12 text-right">
                                <a href="@Url.Action("Branch","Branch")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                            </div>

                            <div class="col-xs-12">
                                <div class="white-bg section-box-shadow">
                                    @{
                                        if (Model != null)
                                        {
                                            @*<h3 class="form-page-title">Update Enquiry : @Html.DisplayFor(model => model.EnquiryNumber)</h3>*@
                                            <h3 class="form-page-title">Update Branch</h3>
                                        }
                                        else
                                        {
                                            <h3 class="form-page-title">Create Branch</h3>
                                        }
                                    }
                                    @*<h3 class="form-page-title">Add New Branch</h3>*@
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-offset-1 col-sm-10">
    <div class="form-box">
        <form>
            <div class="row">
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Branch Name: <span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="Company Name Here">*@
                        @Html.TextBoxFor(model => model.Branch_Name, new { @placeholder = "Branch Name Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Branch_Name, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Branch Code: <span class="text-danger">*</span></label>
                        @*<input type="email" class="form-control" placeholder="Email Here">*@
                        @Html.TextBoxFor(model => model.Branch_Code, new { @placeholder = "Branch Code Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Branch_Code, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                @*<div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Manager:</label>

                        @Html.TextBoxFor(model => model.Manager, new { @placeholder = "Manager Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>*@
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Service Code:<span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="Phone Here">*@
                        @Html.TextBoxFor(model => model.Service_Code, new { @placeholder = "Service Code Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Service_Code, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
            </div>

            <div class="row">


                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label> Email Id:</label>
                        @*<input type="text" class="form-control" placeholder="Fax Here">*@
                        @Html.TextBoxFor(model => model.Email_Id, new { @placeholder = "Email Id", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email_Id, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label> Coordinator Email Id:</label>
                        @*<input type="text" class="form-control" placeholder="Fax Here">*@
                        @Html.TextBoxFor(model => model.Coordinator_Email_Id, new { @placeholder = "Coordinator Email Id", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Coordinator_Email_Id, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Country:<span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="Status Here">*@
                        @Html.TextBoxFor(model => model.Country, new { @placeholder = "Country Name  Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>

            </div>


            <div class="row">

                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>State:<span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="Status Here">*@
                        @Html.TextBoxFor(model => model.State, new { @placeholder = "State Name Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>City:<span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="Fax Here">*@
                        @Html.TextBoxFor(model => model.CityName, new { @placeholder = "City Name Here", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label> Postal Code:</label>
                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                        @Html.TextBoxFor(model => model.Postal_Code, new { @placeholder = "Postal Code Here", @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Postal_Code, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>

                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label> Branch Admin:<span class="text-danger">*</span></label>
                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                        @Html.DropDownListFor(m => m.BranchAdmin, (SelectList)ViewBag.Employees, "Select Branch Admin", new { @class = "form-control form-control-custom-ddl" })
                        @*@Html.TextBoxFor(model => model.BranchAdmin, new { @placeholder = "Branch Admin", @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.BranchAdmin, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-4">
                    <div class="form-group">
                        <label>Region:</label>
                        <div class="form-group">
                    
                            @Html.DropDownListFor(m => m.Domesticinter, new List<SelectListItem>
                                                                     {
                                                                     new SelectListItem{ Text="Domestic", Value = "Domestic" },
                                                                     new SelectListItem{ Text="International", Value = "International" },
                                                           },
                            new { @class = "form-control", @id = "ddlbranchregion" })
                        </div>

                    </div>
                </div>
              
            </div>


            <div class="col-xs-12">
                <div class="form-group">
                    <label><i class="fa fa-paperclip" style="color:black;"></i> Related Documents (Please attach files here) : <span style="color:#ff0000;">*</span></label>
                    <input type="file" class="filepond" name="filepond" id="FileUpload" multiple>
                    <input hidden="hidden" id="hdfFileUpload" name="FileUpload" class="hidden" />
                </div>
            </div>

            @if (Model != null)
            {
                if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                {
                    <div class="col-xs-12">
                        <div class="form-group">
                            <ul class="Attachment">
                                @foreach (var item in Model.FileDetails)
                                {
                                    <li>
                                        <a class="title" href="/Branch/Download/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                        <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
                else
                {
                    <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                }
            }
            else
            {
                <p style="color:red;text-align:center;font-weight:bold;">There are no attachments</p>
            }

            @*<div class="col-xs-12">
                <div class="form-group">
                    @{
                        if (Model != null)
                        {

                            if (!string.IsNullOrEmpty(Model.Attachment))
                            {
                                <div class="cform-group">
                                    @{
                                        string[] words = (Model.Attachment).Split(',');
                                        for (int i = 0; i < words.Count(); i++)
                                        {
                                            <a id="btnAddToCart" class="btn btn-default insert-form-btn" href="@Url.Content("" + words[i])" role="button" download="@Url.Content("~/Content/Uploads/Images/" + words[i])">
                                                <i class="fa fa-download"></i>           @words[i]
                                            </a>
                                        }
                                    }
                                </div>
                                        }
                                        else
                                        {
                                            <div class="form-group">

                                            </div>
                                            }
                                        }
                    }
                </div>
            </div>*@


            <div class="row">
                <div class="col-xs-12">
                    <div class="form-group">
                        <label>Address:<span class="text-danger">*</span></label>
                        @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                        @Html.TextAreaFor(model => model.Address1, new { @placeholder = "Address Here", @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                @*<div class="col-xs-12">
                    <div class="form-group">
                        <label>Address2:</label>
                        @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>
                        @Html.TextAreaFor(model => model.Address2, new { @placeholder = "Address Here", @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="form-group">
                        <label>Address3:</label>
                        @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>
                        @Html.TextAreaFor(model => model.Address3, new { @placeholder = "Address Here", @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger validation-msg" })
                    </div>
                </div>*@
            </div>





            <div class="row">


            </div>
            <div class="col-xs-12 text-center">

                <button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Save Branch</button>

            </div>
        </form>
                                    </div>
                                        </div>
                                    </div>
                                    <!--Contact Details By Manoj -->

                                  
                                </div><!-- /.box-shadow -->
                            </div><!-- /.col -->

                        </div><!-- /.row -->
                    </div><!-- /.col -->



                </div><!-- /.row -->
            </div><!-- /.container-fluid -->
            <!--End of header-->

        </div>
        </div>
   
                                                        }
@*<script>
    //Added by Sagar
    $(document).ready(function () {
        //called when key is pressed in textbox
        $(".IsNumber").keypress(function (e)
        {
            //if the letter is not digit then display error and don't type anything
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57))
            {
                //display error message
                $("#postalerrormsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
    });
</script>*@


<!--filepond-->
<!-- Load FilePond library -->
<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>
@*Custom Scripts*@
@*Binding Service Type Dropdownlist*@
<script>
    $(document).ready(function () {
        $("#ddlServiceType").change(function () {
            $("#ddlPedType").empty();
            $("#ddlOtherType").empty();
            $("#ddlEnergyType").empty();
            $("#ddlPedType").append('<option>--Select Ped Type--</option>');
            $("#ddlOtherType").append('<option>--Select Other Type--</option>');
            $("#ddlEnergyType").append('<option>--Select Energy Type--</option>');
            if ($("#ddlServiceType").val() != "--Select ServiceType--") {
                if ($("#ddlServiceType").val() == 200) {
                    $.ajax({
                        url: '@Url.Action("BindPedType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ SubType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlPedType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
                if ($("#ddlServiceType").val() == 300) {
                    //$(".form-multiselect-others-box").show();
                    //$(".form-multiselect-energy-box").hide();
                    //$(".form-multiselect-ped-box").hide();
                    $.ajax({
                        url: '@Url.Action("BindOtherType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ OtherType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlOtherType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
                if ($("#ddlServiceType").val() == 400) {
                    //$(".form-multiselect-others-box").hide();
                    //$(".form-multiselect-energy-box").show();
                    //$(".form-multiselect-ped-box").hide();
                    $.ajax({
                        url: '@Url.Action("BindEnergyType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ EnergyType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlEnergyType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
            }//First Bind Ped
        });
    });
</script>

<script>
    var SummaryExtension = false;
    var fileExtension = ["pdf", "PDF", "xls", "xlsx", "doc", "DOC", "docx", "DOCX", "png", "PNG", "jpg", "JPG", "jpeg", "JPEG", "gif", "GIF"];
    $("#FileUpload").change(function (e) {
        debugger;
        var files = $("#FileUpload input[type='file']").get(0).files;
        for (var index = 0; index < files.length; index++)
        {
            var singleExtension = e.target.files[index].name.split('.').pop();
            var Condition = fileExtension.includes(singleExtension);
            if (Condition == true)
            {
                SummaryExtension = true;
            }
            else
            {
                alert("Only formats are allowed : " + fileExtension.join(','));
                SummaryExtension = false;
                return;
            }
        }
        if (SummaryExtension == true)
        {
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++)
            {
                fileData.append("FileUpload input[type='file']", files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            var link = '@Url.Action("TemporaryFilePathDocumentAttachment", "Branch")';
            xhr.open('POST', link, 'true');
            xhr.send(fileData);
            xhr.onreadystatechange = function ()
            {
                if (xhr.readyState == 4 && xhr.status == 200)
                {
                    var data = xhr.responseText;
                    data = data.replace(/"/g, "");
                    $("#Attachment").val(data);
                }
            }
            //})
        }
        //else
        //{
        //    alert("Only formats are allowed : " + fileExtension.join(','));
        //}




        //if ($.inArray($("#FileUpload").val().split('.').pop().toLowerCase(), fileExtension) == -1)
        //{
        //    alert("Only formats are allowed : " + fileExtension.join(', '));
        //}

        //var SingleExtension = "JPG";


    })
</script>

@*Delete Uploaded File Code added by manoj Sharma 12 March 2020*@

<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>







