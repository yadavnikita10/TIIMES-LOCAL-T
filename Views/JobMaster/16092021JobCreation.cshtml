@model TuvVision.Models.JobMasters
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "JobCreation";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int j = 0;
    int k = 0;
}
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />



@helper CustomRenderingOfColumn1(TuvVision.Models.JobMasters Jobsmodel)
{
if (Jobsmodel.Type == "SubSub Job")
{
        <a href="@Url.Action("CreatSubJob", "SubJobMaster", new {@PK_SubJob_Id = Jobsmodel.PK_SubJob_Id })" title="Edit">@Jobsmodel.SubSubJob_No</a>

}
else
{
        <a href="@Url.Action("CreatSubJob", "SubJobMaster", new {@PK_SubJob_Id = Jobsmodel.PK_SubJob_Id })" title="Edit">@Jobsmodel.SubJob_No</a>
}
}


@helper CustomRenderingOfColumn2(TuvVision.Models.JobMasters Jobsmodel)
{
    <a href="@Url.Action("JobCreation", "JobMaster", new {@PK_JOB_ID = Jobsmodel.PK_JOB_ID })" title="Edit">@Jobsmodel.Control_Number</a>
}


<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<!--multiselect-->
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />

@*DATEPICKER*@
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.js" data-modules="effect effect-bounce effect-blind effect-bounce effect-clip effect-drop effect-fold effect-slide"></script>*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>
<script>

    $(function () {
        $(".estimatedclosedate").datepicker({
            //dateFormat: 'dd/mm/y',//check change
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $(function () {
        $(".PoDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
@*<script src="~/AllJsAndCss/js/datatable-custom.js"></script>*@
<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
    /*-- Delete color-profile --*/
    ul.AttachmentFormat {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.AttachmentFormat > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.AttachmentFormat > li a.title1 {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.AttachmentFormat > li a.deleteItemFormat {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
</style>

<!--Start of main content 3-->
<div class="grey-bg-f3">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-5">

            <div class="col-xs-12 form-col">
                <div class="row">

                    <div class="col-xs-12 text-right">
                        <a href="@Url.Action("JobList", "JobMaster")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                    </div>

                    <div class="col-xs-12">
                        <div class="white-bg section-box-shadow">
                            <h3 class="form-page-title">Work Order Management</h3>
                            <div class="row">
                                <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                    <div class="form-box">
                                        <form method="post" id="formjc" enctype="multipart/form-data">
                                            @Html.HiddenFor(m => m.PK_QT_ID)
                                            @Html.HiddenFor(m => m.PK_JOB_ID)
                                            @Html.HiddenFor(m => m.PortCode)
                                            @Html.HiddenFor(m => m.ServiceCode)
                                            @Html.HiddenFor(m => m.OBSID)
                                            @Html.HiddenFor(m => m.ServiceID)
                                            @Html.HiddenFor(m => m.PortID)
                                            @Html.HiddenFor(m => m.CostSheetApproved)
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Job Number:</label>
                                                    @Html.TextBoxFor(model => model.Job_Number, new { @placeholder = "Control Number", @class = "form-control", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.Job_Number, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Project Name:</label>
                                                    @Html.TextBoxFor(model => model.Description, new { @placeholder = "Project Name", @class = "form-control", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger validation-msg" })
                                                    @*<input type="email" class="form-control" placeholder="Email Here">*@
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Sub Project Name:</label>
                                                    @Html.TextBoxFor(model => model.SubProjectName, new { @placeholder = "Sub Project Name", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.SubProjectName, "", new { @class = "text-danger validation-msg" })
                                                    @*<input type="email" class="form-control" placeholder="Email Here">*@
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Customer Name:</label>
                                                    <a href="@Url.Action("CreateCompany", "CompanyMasters", new {@CompanyID = Model.CMP_ID })">
                                                        @Html.TextBoxFor(model => model.Client_Name, new { @placeholder = "Client Name", @class = "form-control", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(model => model.Client_Name, "", new { @class = "text-danger validation-msg" })
                                                    </a>
                                                </div>
                                            </div>

                                            @Html.HiddenFor(model => model.FK_CMP_ID)
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>End Customer Name:</label>
                                                    @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                    <a href="@Url.Action("CreateCompany", "CompanyMasters", new {@CompanyID = Model.CMP_ID })">
                                                        @Html.TextBoxFor(model => model.End_User, new { @placeholder = "End User", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.End_User, "", new { @class = "text-danger validation-msg" })
                                                    </a>

                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Enquiry Reference No :</label>
                                                    @*<input type="text" class="form-control" placeholder="Phone Here">*@

                                                    <a href="@Url.Action("Enquiry", "EnquiryMaster", new {@EQ_ID = Model.EQ_ID })"> @Html.TextBoxFor(model => model.Enquiry_Of_Order, new { @placeholder = "Enquiry Order", @class = "form-control", autocomplete = "off" })</a>
                                                    @Html.ValidationMessageFor(model => model.Enquiry_Of_Order, "", new { @class = "text-danger validation-msg" })

                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Quotation Reference No:</label>
                                                    @*<input type="text" class="form-control" placeholder="Website Here">*@
                                                    <a style="color:red;" href="@Url.Action("Quotation", "QuotationMaster", new { @QuotationNumber = Model.Quotation_Of_Order })">
                                                        @Html.TextBoxFor(model => model.Quotation_Of_Order, new { @placeholder = "Quotation Order", @class = "form-control", autocomplete = "off" })
                                                        @Html.ValidationMessageFor(model => model.Quotation_Of_Order, "", new { @class = "text-danger validation-msg" })
                                                    </a>
                                                </div>
                                            </div>
                                            <style>
                                                .addCSS {
                                                    pointer-events: none;
                                                }
                                            </style>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group addCSS">
                                                    <label>Branch :</label>

                                                    @Html.DropDownListFor(model => model.Branch, (IEnumerable<SelectListItem>)ViewData["BranchName"], "---Select Branch---", new { @id = "ddlBranch", @class = "form-control" })

                                                    @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>


                                            @*vaibhav start 14 July*@
                                            @if (Model.PK_JOB_ID == 0)
                                            {
                                                <div class="col-xs-12 col-sm-12">

@if (ViewBag.lstDOrderType != null)
{
    <div id="DomesticCurrency" style="width:1000px ;align:center ;">
        <div class="form-page-title"><label>Domestic Quoted</label></div>

        <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 100%">
            <tr>
                <td class="hidden">
                    Id
                </td>
                <td width="200px">
                    Order Type
                </td>
                <td>
                    Order Rate
                </td>
                <td>
                    Estimated Mandays/ManMonth
                </td>
                <td>
                    Distance in (KM)
                </td>
                @*<td>
                        Estimated AMount
                    </td>*@
                <td>
                    Currency
                </td>
                <td>
                    Exchange Rate
                </td>
                <td colspan="2">
                    Amount
                </td>

            </tr>
            @{
                int i = 0;
            }

            @if (ViewBag.lstDOrderType != null)
            {
                if (ViewBag.lstDOrderType.Count != 0)
                {

                    foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.JobMasters>)
                    {
                        i = i + 1;
                        <tr class="trDomestic">



                        <td class="hidden">
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderTypeId, new { @placeholder = "Order Rate", @class = "form-control  COrderTypeId", @Value = item.OrderTypeId, @id = "IddOrderTypeId" + i , @readonly = "readonly" })
                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].OrderTypeId)
                        </td>

                        <td>

                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].OrderType, new List<SelectListItem>
                            {
                                new SelectListItem{ Text="Select Order Type", Value = "" },
                                new SelectListItem{ Text="Man Days", Value = "ManDays" , Selected = (item.OrderType == "ManDays") ?true : false} ,
                                new SelectListItem{ Text="Man Month", Value = "ManMonth", Selected = (item.OrderType == "ManMonth") ?true : false },
                                new SelectListItem{ Text="Lump Sum/Percentage", Value = "LumSum", Selected = (item.OrderType == "LumSum") ?true : false },
                                new SelectListItem{ Text="Man Hours", Value = "ManHR", Selected = (item.OrderType == "ManHR") ?true : false },

                            },
                            new { @class = "form-control COrderType addCSS", @id = "ddlOrderType", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.lstQuotationMasterOrderType[j].OrderType)

                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderRate, new { @placeholder = "Order Rate", @class = "form-control  COrderRate", @Value = item.OrderRate, @id = "IddOrderType" + i })
                            @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                        </td>

                        <td>
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "IddEstimate_ManDays_ManMonth", @Value = item.Estimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);"})
                            @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                        </td>
                        <td >
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Distance, new { @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "IddDistance", @Value = item.Distance, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                        </td>
                       
                        <td >
                            @*@Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>,"--Select Currency--", new { @id = "IddDcurrency", @class = "form-control CDcurrency"})*@

                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new SelectList(@ViewBag.DTestCurrency, "Code", "Name", item.Dcurrency), "--Select Currency--", new { @id = "IddDcurrency", @class = "form-control CDcurrency", @readonly = "readonly" })

                            

                            @Html.HiddenFor(m => m.lstQuotationMasterOrderType[j].Dcurrency)

                            @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                        </td>
                        <td >
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "IddDExchangeRate", @Value = item.DExchangeRate, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                            @*<input type="text" name="DExchangeRate" class="form-control CDExchangeRate" , Value = item.DExchangeRate/>*@
                            @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                        </td>
                        <td >
                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "IddDTotalAmount", @Value = item.DTotalAmount, @readonly = "readonly" })
                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @Value = item.DTotalAmount })

                            @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                        </td>


                        <td >
                            @if (item.DReadOnly == "Yes")
                            {
                                @Html.CheckBoxFor(model => model.lstQuotationMasterOrderType[j].RadioButton, new { @onclick = "return false;", @class = "DCheckBox" })
                            }
                            else
                            {
                                @Html.CheckBoxFor(model => model.lstQuotationMasterOrderType[j].RadioButton, new { @class = "DCheckBox" })
                            }


                        </td>



                    </tr>
                        j++;
                    }
                }
                else
                {

                }
            }
            else
            {

            }





        </table>




    </div>
                }

                                                   


                                                </div>

                                                <br />

                                                <div class="col-xs-12 col-sm-12">

                                                    @if (ViewBag.lstIOrderType != null)
                                                    {
                                                        <div id="InternationalCurrency" style='width:1000px;align:center'>

                                                        <div class="form-page-title"><label>International Quoted</label></div>

                                                        <table id="ITestTable" cellspacing="0" cellpadding="3" border="1" style="width: 100%">

                                                            <tr>
                                                                <td class="hidden">Id</td>
                                                                <td width="200px">
                                                                    Order Type
                                                                </td>
                                                                <td>
                                                                    Order Rate
                                                                </td>
                                                                <td>
                                                                    Estimated Mandays/ManMonth
                                                                </td>
                                                                <td>
                                                                    Distance in (KM)
                                                                </td>
                                                                @*<td>
                                                                        Estimated Amount
                                                                    </td>*@
                                                                <td>
                                                                    Currency
                                                                </td>
                                                                <td>
                                                                    Exchange Rate
                                                                </td>
                                                                <td colspan="2">
                                                                    Amount
                                                                </td>

                                                            </tr>

                                                            @{
                                                                int l = 0;
                                                            }

                                                            

                                                            @if (ViewBag.lstIOrderType != null)
                                                            {
                                                                if (ViewBag.lstIOrderType.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstIOrderType as IEnumerable<TuvVision.Models.JobMasters>)
                                                                    {
                                                                        l = l + 1;

                                                                        <tr class="trInternational">
                                                                            <td class="hidden">
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[j].IOrderTypeId, new { @placeholder = "Order Type", @class = "form-control  CIOrderTypeId", @Value = item.IOrderTypeId, @id = "IdIOrderTypeId" + l ,  @readonly = "readonly" })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderTypeI[j].IOrderTypeId) 
                                                                            </td>
                                                                            <td>
                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderTypeI[k].IOrderType, new List<SelectListItem>
                                                                    {
                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays"  , Selected = (item.IOrderType == "ManDays") ?true : false} ,
                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" , Selected = (item.IOrderType == "ManMonth") ?true : false} ,
                                                                    new SelectListItem{ Text="Lump Sum/Percentage", Value = "LumSum" , Selected = (item.IOrderType == "LumSum") ?true : false} ,
                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR", Selected = (item.IOrderType == "ManHR") ?true : false },

                                                                    },
                                                                    new { @class = "form-control CIOrderType addCSS", @id = "ddlIOrderType" + l })

                                                                                @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IOrderRate, new { @placeholder = "Order Rate", @class = "form-control CIOrderRate", @Value = item.IOrderRate, @id = "ddlIOrderRate" + l, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IEstimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "ddlIEstimate_ManDays_ManMonth" + l, @Value = item.IEstimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IDistance, new { @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "ddlIDistance" + l, @Value = item.IDistance, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                            </td>
                                                                            
                                                                            <td>
                                                                                
                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderTypeI[k].Icurrency, new SelectList(@ViewBag.ITestCurrency, "Code", "Name", item.Icurrency), "--Select Currency--", new { @id = "IddIcurrency" + l, @class = "form-control CIcurrency addCSS" })

                                                                                @*@Html.HiddenFor(m => m.lstQuotationMasterOrderType[k].Icurrency, new SelectList(@ViewBag.ITestCurrency, "Code", "Name", item.Icurrency))*@
                                                                               

                                                                                @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "ddlIExchangeRate" + l, @Value = item.IExchangeRate, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount, @readonly = "readonly" })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderType[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount })
                                                                                @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                         
                                                                            <td>


                                                                                @if (item.IReadOnly == "Yes")
                                                                                {
                                                                                    @Html.CheckBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IRadioButton, new { @onclick = "return false;", @class = "DCheckBox" })
                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.CheckBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IRadioButton, new { @class = "DCheckBox" })
                                                                                }
                                                                            </td>
                                                                        </tr>
                                                                        k++;
                                                                    }
                                                                }                                                                
                                                            }

                                                        </table>


                                                        </div>
                                                    }

                                                </div>

                                            }
                                                               




                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>PO Amount:</label>
                                                    @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                    @Html.TextBoxFor(model => model.Customer_PO_Amount, new { @placeholder = "PO Amount", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Customer_PO_Amount, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Invoiced Amount (INR):</label>
                                                    @Html.TextBoxFor(model => model.InvoiceAmount, new { @placeholder = "Invoice Amount", @class = "form-control", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.InvoiceAmount, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Bal. Invoicing Amount (INR):</label>

                                                    @Html.TextBoxFor(model => model.Balance, new { @placeholder = "Balance", @class = "form-control", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>


                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>SAP No:</label>
                                                    @Html.TextBoxFor(model => model.SAP_No, new { @placeholder = "SAP No", @class = "form-control", autocomplete = "off", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                                    @Html.ValidationMessageFor(model => model.SAP_No, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-12">
                                                <label><u>PROBABLE INVOICING FOR</u></label>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>First Year:</label>
                                                    @Html.TextBoxFor(model => model.FirstYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.FirstYear, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Second Year:</label>
                                                    @Html.TextBoxFor(model => model.SecondYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.SecondYear, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Third Year:</label>
                                                    @Html.TextBoxFor(model => model.ThirdYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.ThirdYear, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Fourth Year:</label>
                                                    @Html.TextBoxFor(model => model.FourthYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.FourthYear, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>


                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>OBS Type:</label>
                                                    @Html.TextBoxFor(model => model.Job_type, new { @placeholder = "Job Type", @class = "form-control", @readonly = "readonly", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Job_type, "", new { @class = "text-danger validation-msg" })
                                                    @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Service Portfolio Type:</label>
                                                    @Html.TextBoxFor(model => model.PortfolioType, new { @placeholder = "Portfolio Type", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.PortfolioType, "", new { @class = "text-danger validation-msg" })
                                                    @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Service Type:</label>
                                                    @Html.TextBoxFor(model => model.subserviceType, new { @placeholder = "Service Type", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.subserviceType, "", new { @class = "text-danger validation-msg" })
                                                    @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                </div>
                                            </div>

                                            @*Hide Below fields for job creation  15 July*@

                                            @if (Model.PK_JOB_ID > 0)
                                            {

                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Currency:</label>
                                                        @Html.DropDownListFor(model => model.Currency, (IEnumerable<SelectListItem>)ViewData["CurrencyItems"], "---Select Currency---", new { @id = "ddlCurrency", @class = "form-control",@disabled = "disabled" })

                                                        @Html.HiddenFor(model => model.Currency, new { @id = "ddlCurrency" })  
                                                        @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>



                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label> Order Type:</label>
                                                        @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                         {
                                                          new SelectListItem{ Text="Select Order Type", Value = "" },
                                                           new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                           new SelectListItem{ Text="Man Months", Value = "ManMonth" },
                                                           new SelectListItem{ Text="Lump Sum/Percentage", Value = "LumSum" },
                                                           new SelectListItem{ Text="Man Hours", Value = "ManHR" },
                                                        }, new { @class = "form-control", @id = "ddlOrderType", @disabled = "disabled" })

                                                        @Html.HiddenFor(model => model.OrderType, new { @id = "ddlOrderType" })                                                  

                                                       
                                                        @Html.ValidationMessageFor(m => m.OrderType, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>



                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Order Rate:</label>

                                                        @Html.TextBoxFor(model => model.OrderRate, new { @placeholder = "Order Rate", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Estimated Man Month:</label>
                                                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                        @Html.TextBoxFor(model => model.Estimate_ManMonth, new { @placeholder = "Estimated Man Month", @class = "form-control", autocomplete = "off", @id = "Estimate_ManMonth" })
                                                        @Html.ValidationMessageFor(model => model.Estimate_ManMonth, "", new { @class = "text-danger validation-msg" })


                                                        @*@Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })*@
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">

                                                        <label>Estimated Man Days:</label>
                                                        @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                        @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control", autocomplete = "off", @id = "Estimate_ManDays" })
                                                        @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Distance:</label>
                                                        @Html.TextBoxFor(model => model.Distance, new { @placeholder = "Distance", @class = "form-control", autocomplete = "off", @id = "Distance" ,@readonly="readonly"})
                                                        @Html.HiddenFor(model => model.Distance, new { @id = "Distance" })
                                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Estimated Man Hours:</label>
                                                        @Html.TextBoxFor(model => model.Estimate_ManHours, new { @placeholder = "Estimate_ManHours", @class = "form-control", autocomplete = "off", @id = "Estimate_ManHours"})
                                                        @Html.HiddenFor(model => model.Estimate_ManHours, new { @id = "Estimate_ManHours" })
                                                        @Html.ValidationMessageFor(model => model.Estimate_ManHours, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            }
                                            




                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>Customer PO Number on TUVI</label>
                                                    @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                    @Html.TextBoxFor(model => model.Customer_PoNo_PoDate, new { @placeholder = "PO No", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Customer_PoNo_PoDate, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>PO Date:</label>
                                                    @*<input type="text" class="form-control" placeholder="Po Date">*@
                                                    @*@Html.TextBoxFor(model => model.Customer_PoDate, new { @placeholder = "Po Date", @class = "form-control" })*@
                                                    @Html.TextBoxFor(model => model.Customer_PoDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Po Date", @class = "form-control PoDate ", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Customer_PoNo_PoDate, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label> PO Validity:</label>
                                                    @if (Model.POAwaited == false)
                                                    {
                                                        @Html.TextBoxFor(model => model.Po_Validity, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date", @class = "form-control estimatedclosedate ", autocomplete = "off" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.Po_Validity, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date", @class = "form-control estimatedclosedate ", autocomplete = "off", @disabled = "disabled" })
                                                    }
                                                    @Html.HiddenFor(model => model.Po_Validity, new { @id = "estimatedclosedate" })
                                                    
                                                    @Html.ValidationMessageFor(model => model.Po_Validity, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>DEC/ PMC/ EPC Name:</label>
                                                    @Html.TextBoxFor(model => model.DECName, new { @placeholder = "DEC PMC Name", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.DECName, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3">
                                                <div class="form-group">
                                                    <label>DEC/ PMC/ EPC No:</label>
                                                    @Html.TextBoxFor(model => model.DECNumber, new { @placeholder = "DEC PMC No", @class = "form-control", autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.DECNumber, "", new { @class = "text-danger validation-msg" })
                                                </div>
                                            </div>


                                            <div class="col-xs-12 col-sm-3">                                                
                                                <div class="form-group">
                                                    <label for="InActive" style="color:black;">ARC Job</label>
                                                    @Html.CheckBoxFor(model => model.chkARC, new { @onclick = "return false;" })

                                                </div>
                                            </div>


                                            @if (Model.PK_JOB_ID == 0)
                                            {

                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Order Status:</label>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label for="Active">Complete</label>
                                                        @Html.RadioButtonFor(m => m.OrderStatus, "Complete", new { id = "Complete" })
                                                        <label for="InActive">Incomplete</label>
                                                        @Html.RadioButtonFor(m => m.OrderStatus, "Incomplete", new { id = "Incomplete", @checked = "true" })
                                                        @Html.ValidationMessageFor(m => m.OrderStatus, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            }
                                            else
                                            {
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Order Status:</label>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label for="Active">Complete</label>
                                                        @Html.RadioButtonFor(m => m.OrderStatus, "Complete", new { id = "Complete" })
                                                        <label for="InActive">Incomplete</label>
                                                        @Html.RadioButtonFor(m => m.OrderStatus, "Incomplete", new { id = "Incomplete" })
                                                        @Html.ValidationMessageFor(m => m.OrderStatus, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            }



                                            <div class="col-xs-12 col-sm-6">
											<div class="form-group"></div>
                                                <div class="form-group">
                                                    <label for="InActive" style="color:black;">Check For Customer Specific Report</label>
                                                    @Html.CheckBoxFor(model => model.checkIFCustomerSpecific)

                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-6">
                                                <div class="form-group"></div>
                                                <div class="form-group">
                                                    <label for="InActive" style="color:black;">PO Awaited</label>
                                                    @Html.CheckBoxFor(model => model.POAwaited)

                                                </div>
                                            </div>



                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Special Notes:</label>
                                                        @*<textarea rows="3" class="form-control" placeholder="Type your Special Notes..."></textarea>*@

                                                        @Html.TextAreaFor(model => model.Special_Notes, new { @placeholder = "Special Notes", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Special_Notes, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Additional remarks:</label>
                                                        @*<textarea rows="3" class="form-control" placeholder="Type your Special Notes..."></textarea>*@

                                                        @Html.TextAreaFor(model => model.GstDetails_BillingAddress, new { @placeholder = "Additional remarks", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.GSTDetail, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="form-group">
                                                        <label><i class="fa fa-paperclip" style="color:black;"></i>Attachment (Please attach files here): </label>
                                                        <input type="file" class="filepond" name="FileUpload" id="FileUpload" multiple>

                                                        <input hidden="hidden" id="FileUpload" name="FileUpload" class="hidden" />
                                                    </div>
                                                </div>

                                                @if (Model != null)
                                                {
                                                    if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                    {
                                                        <input type="hidden" value="Yes" name="testing" id="testing" />
                                                                    <div class="col-xs-12">
                                                                        <div class="form-group">
                                                                            <ul class="Attachment">
                                                                                @foreach (var item in Model.FileDetails)
                                                                                {
                                                                                    <li>
                                                                                        <a class="title" href="~/JobMaster/Download/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                                        <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        </div>
                                                                    </div>
                                                    }
                                                    else
                                                    {
                                                        <input type="hidden" value="" name="testing" id="testing" />
                                                                    <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                    }
                                                }
                                                else
                                                {
                                                    <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                }
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="form-group">
                                                        <label><i class="fa fa-paperclip" style="color:black;"></i>Format Of Reports (Please attach files here): <span style="color:#ff0000;">*</span></label>
                                                        <input type="file" class="filepond" name="FileUpload1" id="FileUpload1" multiple>
                                                        <input hidden="hidden" id="hdfFileUpload1" name="FileUpload1" class="hidden" />
                                                    </div>
                                                </div>
                                                @if (Model != null)
                                                {
                                                    if (Model.FileDetailsFormat != null && Model.FileDetailsFormat.Count > 0)
                                                    {
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <ul class="AttachmentFormat">
                                                                    @foreach (var item in Model.FileDetailsFormat)
                                                                    {
                                                                        <li>
                                                                            <a class="title1" href="~/JobMaster/DownloadFormat/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                            <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItemFormat">X</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                    }
                                                }
                                                else
                                                {
                                                    <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                }
                                            </div>







                                            <div class="col-xs-12 text-center">
                                                <button type="reset" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModal">Contract Review CheckList</button>
                                                @if (Model.Job_Number == null || Model.Job_Number == "")
                                                {
                                                    <button type="reset" class="btn btn-default news-btn">Reset</button>
                                                                <button type="submit" id="btnjc" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i>  Save </button>
                                                }
                                                else
                                                {

                                                    <button type="submit" id="btnjc" class="btn btn-default insert-form-btn">  Update </button>
                                                }
                                                <a href="@Url.Action("InvoiceInstructionDetails", "InvoiceInstruction" , new {@PK_JOB_ID=Model.PK_JOB_ID })" class="btn btn-default insert-form-btn">Invoice Instruction</a>
                                            </div>
                                            <div class="col-xs-12 text-center">

                                                @if (Model.Job_Number == null || Model.Job_Number == "")
                                                {

                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("IRNReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.Job_Number, @JobId=Model.PK_JOB_ID,@Type="JobMaster" })" class="btn btn-default news-btn"> IRN List</a>
                                                                <a href="@Url.Action("IVRReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.SubJob_No, @JobId=Model.PK_JOB_ID,@Type="JobMaster"  })" class="btn btn-default news-btn"> Visit Reports</a>


                                                }

                                            </div>

                                        </form>

                                    </div>
                                </div>
                            </div><!-- /.row -->

                            <div class="row">
                                <hr>
                                <!-- /.row -->

                                <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                    <h2 class="dynamic-page-title dynamic-page-title-2"><i class="fa fa-address-book"></i>List of Sub-Job</h2>

                                    @if (Model.CostsheetApproval != null)
                                    {
                                        if (Model.CostsheetApproval == "2")
                                        {
                                            <a href="@Url.Action("CreatSubJob", "SubJobMaster", new { @PK_JOB_ID = Model.PK_JOB_ID })" class="btn btn-info dynamic-function-btn dynamic-function-btn-2"><i class="fa fa-plus-circle"></i> Add New Sub-Job</a>
                                        }
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("CreatSubJob", "SubJobMaster", new { @PK_JOB_ID = Model.PK_JOB_ID })" class="btn btn-info dynamic-function-btn dynamic-function-btn-2"><i class="fa fa-plus-circle"></i> Add New Sub-Job</a>
                                    }
                                </div>



                                <div class="col-xs-12 col-sm-offset-1 col-sm-10">



                                    <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                                        <tr>
                                            <td>
                                                @(Html
                                .Grid(Model.lstSubJob)
                                .Build(columns =>
                                {


                                    columns.Add(c => c.Type).Titled("Sub-Job No").RenderedAs(c => CustomRenderingOfColumn1(c)).Sortable(true);
                                    columns.Add(c => c.V1).Titled("Vendor Name");
                                    columns.Add(c => c.V2).Titled("Sub Vendor Name");
                                    columns.Add(c => c.Company_Name).Titled("Customer Name");
                                    //columns.Add(c => c.Vendor_Po_No).Titled("Vendor Po No");
                                    columns.Add(c => c.P1).Titled("Customer PO No on Vendor");
                                    columns.Add(c => c.P2).Titled("Vendor PO No on Sub Vendor");
                                    //columns.Add(c => c.Date_of_Po).Titled("Po Date");
                                    columns.Add(c => c.Status).Titled("Order Status");


                                    columns.Add(c => c.PK_JOB_ID).Titled("Control Number").RenderedAs(c => CustomRenderingOfColumn2(c)).Sortable(true);

                                })
                                .Pageable(pager =>
                                {

                                    pager.ShowPageSizes = true;
                                    pager.PagesToDisplay = 3;
                                    pager.CurrentPage = 1;
                                    pager.RowsPerPage = 2;
                                })
                                .UsingFilterMode(GridFilterMode.Row)
                                .Empty("No Data Found")
                                .Filterable()
                                .Sortable()

                                                )


                                            </td>
                                        </tr>
                                    </table>

                                    <hr>
                                </div><!-- /.data table col -->
                            </div>

                        </div><!-- /.box-shadow -->
                    </div><!-- /.col -->

                </div><!-- /.row -->
            </div><!-- /.col -->



        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
    <!--End of header-->

</div>
<!--End of main content 3-->
<!-- Modal -->
<div class="modal fade bs-example-modal-lg modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #3677e6;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Contract Review List</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">
                                @*<label>Contact Name:</label>*@
                                <ul type="checkbox" id="checkAll">
                                    <li><input type="checkbox" checked> Availability of personnel with required competency.</li>
                                    <li><input type="checkbox" checked> Availability of resources vis - a -vis present work load status.</li>
                                    <li><input type="checkbox" checked> Client's requirements have been understood.</li>
                                    <li><input type="checkbox" checked> Contract conditions have been thoroughly reviewed.</li>
                                    <li><input type="checkbox" checked> Scope of Inspection has been clearly defined  and reviewed</li>
                                    <li><input type="checkbox" checked> Commercial requirements including fees/rate & payment terms have been agreed.</li>
                                    <li><input type="checkbox" checked> Needs for special equipment(if any) have been reviewed.</li>
                                    <li><input type="checkbox" checked> Special training needs required(if any) have been reviewed.</li>
                                    <li><input type="checkbox" checked> Statutory requirements(if any) have been reviewed.</li>
                                    <li><input type="checkbox" checked> Special safety requirements(if any) have been reviewed.</li>
                                    <li><input type="checkbox" checked> Documentation needs have been reviewed.</li>
                                    <li><input type="checkbox" checked> Any changes in the contract conditions from the originally agreed version have been reviewed.</li>
                                </ul>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">
                                <textarea rows="3" style="color:red;" class="form-control" placeholder="Type your Comments..."></textarea>

                            </div>
                        </div>
                    </div>



                    <div class="row">
                        <div class="col-xs-12 text-center">
                            <button type="button" class="btn btn-default insert-form-btn" id="btnAddNewContact" title="Add New Contact"><i class="fa fa-plus-circle"></i> Save</button>
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>


    </div>
</div>
<!-- Modal -->

<script>
    $(document).ready(function () {
        debugger;
        $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });
    });
</script>


<script>
    $("#btnjc").click(function myfunction() {
        if (validateform() == false) {
            return false;
        }
        else {
            $("#formjc").submit();
        }
    });

    function validateform() {
        debugger;
        var DV = "1";
        var IV = "1";
        var PODate = $("#Customer_PoDate").val();
        var POAmount = $("#Customer_PO_Amount").val();
        var ValDate = $("#Po_Validity").val();
        var OrderType = $("#ddlOrderType").val();
        var Estimate_ManMonth = $("#Estimate_ManMonth").val();
        var Estimate_ManDays = $("#Estimate_ManDays").val();
        var SAP_No = $("#SAP_No").val();
        var PONo = $("#Customer_PoNo_PoDate").val();
        var PKJobNo = $("#PK_JOB_ID").val();
        var checkboxes = $('input.DCheckBox:checked').length;
        var filePath = $("[name='FileUpload']").val();
        

        if (PKJobNo == "0")
        {
            $('.trDomestic').each(function () {
                var trD = {};
                var OrderType = $(this).find('.COrderType').val();
                var OrderRate = $(this).find('.COrderRate').val();
                var Estimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth').val();
                var distance = $(this).find('.CDistance').val();

                var Dcurrency = $(this).find('.CDcurrency').val();
                var DExchangeRate = $(this).find('.CDExchangeRate').val();
                var DTotalAmount = $(this).find('.CDTotalAmount').val();


                if (OrderType == '') {
                    return DV = "2";
                }
                if (OrderRate == '') {
                    return DV = "2";
                }
                if (Estimate_ManDays_ManMonth == '') {
                    return DV = "2";
                }
                if (Dcurrency == '') {
                    return DV = "2";
                }
                if (DExchangeRate == '') {
                    return DV = "2";
                }
            })



            $('.trInternational').each(function () {

                var trI = {};



                if ($('.DCheckBox:checkbox:checked')) {
                    var IOrderType = $(this).find('.CIOrderType').val();
                    var IOrderRate = $(this).find('.CIOrderRate').val();
                    var IEstimate_ManDays_ManMonth = $(this).find('.CIEstimate_ManDays_ManMonth').val();
                    var Idistance = $(this).find('.CIDistance').val();
                    var Icurrency = $(this).find('.CIcurrency').val();
                    var IExchangeRate = $(this).find('.CIExchangeRate').val();
                    var ITotalAmount = $(this).find('.CITotalAmount').val();

                    if (IOrderType == '') {

                        return IV = "2";
                    }
                    if (IOrderRate == '') {
                        return IV = "2";
                    }
                    if (IEstimate_ManDays_ManMonth == '') {
                        return IV = "2";
                    }

                    if (Icurrency == '') {
                        return IV = "2";
                    }
                    if (IExchangeRate == '') {
                        return IV = "2";
                    }
                }







            })
        }
        

        



        var checkbox = "";
        if ($('#chkArc').prop('checked')) {
            checkbox = "1"
        }
        else {
            checkbox = "0"
        }

        var POAwaited = "";

        if ($('#POAwaited').prop('checked'))
        {
            POAwaited = "1"
        }
        else
        {
            POAwaited = "0"                  
        }


        
        
              
        if (PKJobNo == "0")
        {
            if (POAwaited == "0") {
                if (filePath == "" || filePath == null) {
                    alert("Please attach file for the Purchase Order");
                    $("#FileUpload").focus();
                    return false;
                }

                if (!filePath.toUpperCase().includes(".PDF")) {
                    alert("Please attach PDF copy for the Purchase Order");
                    $("#FileUpload").focus();
                    return false;
                }
            }
            else
            {
                if (filePath == "" || filePath == null)
                {
                    alert("Attach Offer acceptance communication in PDF Format");
                    $("#FileUpload").focus();
                    return false;
                }

                if (!filePath.toUpperCase().includes(".PDF")) {
                    alert("Please attach Offer acceptance in PDF Format");
                    $("#FileUpload").focus();
                    return false;
                }
            }
        }

        if (PKJobNo == "0")
        {
            if (checkboxes == "0") {
                alert("Please Select Order Type Check Box !!!");
                $("#Quotation_Of_Order").focus()
                return false;
            }
        }
        

        if (DV == "2")
        {
            alert("Please Fill details in Domestic !!!");
            $("#Quotation_Of_Order").focus()
            return false;
        }

        if (IV == "2")
        {
            alert("Please Fill details in International !!!");
            $("#Quotation_Of_Order").focus()
            return false;
        }

        

        if (POAwaited == "0")
        {
            if (PONo == "" || PONo == null) {
                alert("Please Enter Purchase Order Number !");
                $("#Customer_PoNo_PoDate").focus()
                return false;
            }

            if (PODate == "" || PODate == null) {
                alert("Please select PO Date !");
                $("#Customer_PoDate").focus()
                return false;
            }

            if (ValDate == "" || ValDate == null) {
                alert("Please select PO Validity Date !");
                $("#Po_Validity").focus()
                return false;
            }

            if (POAmount == "" || POAmount == null) {
                alert("Please select PO Amount !");
                $("#POAmount").focus()
                return false;
            }
        }        


        if (SAP_No == "" || SAP_No == null)
        {
            alert("Please Enter SAP Number !");
            $("#SAP_No").focus()
            return false;
        }

        if (SAP_No == "8888888888" || SAP_No == "1111111111" || SAP_No == "8111111111" || SAP_No == "0000000000")
        {
            alert("Incorrect SAP Number !");
            $("#SAP_No").focus()
            return false;
        }

        if(SAP_No.length < 10)
        {
            alert("SAP No has incorrect length !");
            $("#SAP_No").focus()
            return false;
        }

        return true;


    }
</script>

<!--filepond-->
<!-- Load FilePond library -->
<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>

<script>
FilePond.registerPlugin(
// encodes the file as base64 data
FilePondPluginFileEncode,
// validates the size of the file
FilePondPluginFileValidateSize,
// corrects mobile image orientation
FilePondPluginImageExifOrientation,
// previews dropped images
FilePondPluginImagePreview
);
// Select the file input and use create() to turn it into a pond
FilePond.create( document.querySelector('.filepond'));
</script>
<script>
FilePond.setOptions({
server: '@Url.Action("TemporaryFilePathDocumentAttachment", "JobMaster")'
});
</script>

<script>
    FilePond1.parse(document.body);
</script>

<script>
FilePond1.registerPlugin(
// encodes the file as base64 data
FilePondPluginFileEncode,
// validates the size of the file
FilePondPluginFileValidateSize,
// corrects mobile image orientation
FilePondPluginImageExifOrientation,
// previews dropped images
FilePondPluginImagePreview
);
// Select the file input and use create() to turn it into a pond
FilePond1.create( document.querySelector('.filepond1'));
</script>

<script>
FilePond1.setOptions({
server: '@Url.Action("TemporaryFilePathDocumentAttachment1", "JobMaster")'
});
</script>




<input type="hidden" value="" name="testing" id="testing" />



<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

@*Delete Uploaded File Code added by manoj Sharma 13 March 2020*@

<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>

@*Delete Uploaded File Code added by manoj Sharma 13 March 2020 Format Report*@

<script>
    $(document).ready(function () {
        $('.deleteItemFormat').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFileFormat")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>


<script type="text/javascript">
    $(".CDExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    //$(".CEstimatedAmount").on("keyup change", function (e) {
    $(".COrderRate").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    $(".CEstimate_ManDays_ManMonth").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })
</script>

<script type="text/javascript">
    $(".CIExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CIEstimatedAmount").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIOrderRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })
</script>


<style>
    .addCSS {
        pointer-events: none;
    }
</style>

<script type="text/javascript">

    $('.DCheckBox').change(function ()
    {
        debugger;       
        
        var checkboxes = $('input.DCheckBox:checked').length;
        
        if (checkboxes >= 2) {
            alert("You Can select only one row at a Time")
            $('.DCheckBox').prop('checked', false);
            return false;
        }

    });

    $('.trDomestic').each(function () {
        var trD = {};

        var CostSheetApproved = $("#CostSheetApproved").val();        //// Auto Approval Flag
        var vCOrderRate = $(this).find('.COrderRate')
        var vCEstimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth')
        

        if (CostSheetApproved == "2")
        {
            /////Auto Approved with PCH Approval
     
            vCOrderRate.attr("readonly", "readonly");
            vCEstimate_ManDays_ManMonth.attr("readonly", "readonly");
        }
        else
        {
            vCOrderRate.removeAttr("readonly");
            vCEstimate_ManDays_ManMonth.removeAttr("readonly");
        }

        
       
    });
</script>
<style>
    .addCSS {
        pointer-events: none;
    }
</style>