@model TuvVision.Models.JobMasters
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "JobCreation";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int j = 0;
    int k = 0;
    int v = 0;
    int cntAddMandays = 0;
    string UserIDs = Convert.ToString(System.Web.HttpContext.Current.Session["UserIDs"]);
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>



@helper CustomRenderingOfColumn1(TuvVision.Models.JobMasters Jobsmodel)
{
if (Jobsmodel.Type == "SubSub Job")
{
        <a href="@Url.Action("CreatSubSubJob", "SubJobMaster", new {@PK_SubJob_Id = Jobsmodel.PK_SubJob_Id, @subType = Jobsmodel.Type })" title=@Jobsmodel.SubSubJob_No>@Jobsmodel.SubSubJob_No</a>

}
else if (Jobsmodel.Type == "SubSubSub Job")
{
        <a href="@Url.Action("CreatSubSubSubJob", "SubJobMaster", new {@PK_SubJob_Id = Jobsmodel.PK_SubJob_Id, @subType = Jobsmodel.Type })" title=@Jobsmodel.SubSubJob_No>@Jobsmodel.SubSubSubJob_No</a>
}
else
{
        <a href="@Url.Action("CreatSubJob", "SubJobMaster", new {@PK_SubJob_Id = Jobsmodel.PK_SubJob_Id, @subType = Jobsmodel.Type })" title=@Jobsmodel.SubJob_No>@Jobsmodel.SubJob_No</a>
}
}


@helper CustomRenderingOfColumn2(TuvVision.Models.JobMasters Jobsmodel)
{
    <a href="@Url.Action("JobCreation", "JobMaster", new {@PK_JOB_ID = Jobsmodel.PK_JOB_ID })" title=@Jobsmodel.Control_Number>@Jobsmodel.Control_Number</a>
}






<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<!--multiselect-->
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />

@*DATEPICKER*@

<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

<style>
    .addCSS {
        pointer-events: none;
    }
</style>


<script type="text/javascript">


    /* $('#chkAwaited').change(function ()
     {
         alert(123);
         if (this.checked) {
             var returnVal = confirm("Are you sure?");
             $(this).prop("checked", returnVal);
         }
         $('#textbox1').val(this.checked);
     });

     */

    function onchangeddlStatus(val, OrderType) {

        $('#divPOtable').find('input:text')
                    .each(function () {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });

                        $(this).val('');
                    });

        $('#divdisplaytable').find('input:text')
                    .each(function () {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                        $(this).val('');

                    });

        $('#divSAPtable').find('input:text')
                   .each(function () {
                       $(this).css({
                           "border": "",
                           "background": ""
                       });

                       $(this).val('');
                   });

        
        if (val.toUpperCase() == "POAMD" || val.toUpperCase() == "POVALID" || val.toUpperCase() == "PORECT" || val.toUpperCase() == "MANDAYCOR")
        {

            document.getElementById("divPOtable").style.display = "block";
            document.getElementById("divPOSave").style.display = "block";
            document.getElementById("divdisplaytable").style.display = "block";
            document.getElementById("divPOAttach").style.display = "block";
            


            if (val.toUpperCase() == "POVALID") {
                document.getElementById("UAdd_PoNumber").value = document.getElementById("Customer_PoNo_PoDate").value;
                document.getElementById("UAdd_PoDate").value = document.getElementById("Customer_PoDate").value;
                document.getElementById("UAdd_POAmt").value = document.getElementById("Customer_PO_Amount").value;
                document.getElementById("UAdd_Mandays").value = document.getElementById("Estimate_ManDays").value;
                document.getElementById("divPOAttach").style.display = "none";
                document.getElementById("UAdd_PoNumber").readOnly = "readonly";
                document.getElementById("UAdd_POAmt").readOnly = "readonly";
                document.getElementById("UAdd_Mandays").readOnly = "readonly";

                var DL = document.getElementById("UAdd_PoDate");
                DL.className += " addCSS";
            }           
            else if (val.toUpperCase() == "MANDAYCOR")
            {
                document.getElementById("divPOtable").style.display = "none";
                document.getElementById("divPOAttach").style.display = "none";
                document.getElementById("UAdd_PoNumber").value = document.getElementById("Customer_PoNo_PoDate").value;
                document.getElementById("UAdd_PoDate").value = document.getElementById("Customer_PoDate").value;
                document.getElementById("UAdd_POAmt").value = document.getElementById("Customer_PO_Amount").value;
                document.getElementById("UAdd_PoValidity").value = document.getElementById("Po_Validity").value;

                if (OrderType.toUpperCase() == "MANHR")
                { $("#UAdd_Mandays").attr("placeholder", "Correction in Mandays"); }
                else if (OrderType.toUpperCase() == "MANMONTH")
                { $("#UAdd_Mandays").attr("placeholder", "Correction in Manmonth"); }
                else
                { $("#UAdd_Mandays").attr("placeholder", "Correction in Mandays"); }



            }
            else
            {
                document.getElementById("UAdd_PoNumber").readOnly = false;
                document.getElementById("UAdd_POAmt").readOnly = false;
                document.getElementById("UAdd_Mandays").readOnly = false;

                if (OrderType.toUpperCase() == "MANHR")
                { $("#UAdd_Mandays").attr("placeholder", "Additional Manhours"); }
                else if (OrderType.toUpperCase() == "MANMONTH")
                { $("#UAdd_Mandays").attr("placeholder", "Additional Manmonth"); }
                else
                { $("#UAdd_Mandays").attr("placeholder", "Additional Mandays"); }

                var DL = document.getElementById("UAdd_PoDate");
                DL.removeClass("addCSS");
            }
        }
        else if(val.toUpperCase() == "SAPUPDATE")
        {
            document.getElementById("divSAPtable").style.display = "block";
                
            document.getElementById("divPOtable").style.display = "none";
            document.getElementById("divPOAttach").style.display = "none";
            document.getElementById("UAdd_SAPNumber").value = document.getElementById("SAP_No").value;
            document.getElementById("UAdd_PoNumber").readOnly = "readonly";
            document.getElementById("UAdd_POAmt").readOnly = "readonly";
            document.getElementById("UAdd_Mandays").readOnly = "readonly";
            document.getElementById("divPOSave").style.display = "block";
          
        }
        else
        {
            document.getElementById("divPOtable").style.display = "none";
            document.getElementById("divSAPtable").style.display = "none";
            document.getElementById("divPOSave").style.display = "none";

        }
    }





    //Edit event handler.

    $("body").on("click", "#WOSummaryTable .Edit", function () {
        var row = $(this).closest("tr");
        //var ddlvalue = $('#divdisplaytable').find('#ddlTypeofReason').val();
        
        $("td", row).each(function () {
            var ddlvalue = row.find('td:eq(1)').html();
            

            if (ddlvalue == 'PO Ammendment' || ddlvalue == 'Receipt of PO' || ddlvalue == 'Formal PO Awaited') {
                if ($(this).find("input").length > 0) {
                    $(this).find("input").show();
                    $(this).find("span").hide();
                }
            }
            else if (ddlvalue == 'PO Validity Extension') {
                if ($(this).find("input").length > 0) {
                    if ($(this).find("input").attr('name') == 'Add_PoValidity') {
                        $(this).find("input").show();
                        $(this).find("span").hide();

                    }
                }

            }
            else if (ddlvalue == 'Sales Order Upd.')
            {
                if ($(this).find("input").length > 0)
                {
                    if ($(this).find("input").attr('name') == 'Add_SAPNumber' || $(this).find("input").attr('name') == 'Add_SAPDate') {
                        $(this).find("input").show();
                        $(this).find("span").hide();

                    }
                }

            }
            else if (ddlvalue == 'Mandays Correction') {
                if ($(this).find("input").length > 0) {
                    if ($(this).find("input").attr('name') == 'Add_Mandays') {
                        $(this).find("input").show();
                        $(this).find("span").hide();
                    }
                }
            }



        });

        row.find(".Update").show();
        row.find(".Cancel").show();
        row.find(".Delete").hide();

        $(this).hide();
    });


    //Update event handler.
    $("body").on("click", "#WOSummaryTable .Update", function () {
        var row = $(this).closest("tr");
        var ddlvalue = row.find('td:eq(1)').html();
        // alert(ddlvalue);
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                span.html(input.val());
                span.show();
                input.hide();
            }
        });

        row.find(".Edit").show();
        //row.find(".Delete").show();
        row.find(".Cancel").hide();

        $(this).hide();

        debugger;
        var customer =
            {

                PK_ADDPOID: row.find("#PK_ADDPOID").val(),
                Add_Mandays: row.find("#Add_Mandays").val(),
                Add_PoNumber: row.find("#Add_PoNumber").val(),
                Add_PoDate: row.find("#Add_PoDate" + row.find("#PK_ADDPOID").val()).val(),
                Add_PoValidity: row.find("#Add_PoValidity" + row.find("#PK_ADDPOID").val()).val(),
                Add_POAmt: row.find("#Add_POAmt").val(),
                Add_PoReason: ddlvalue,
                Add_SAPNumber: row.find("#Add_SAPNumber").val(),
                Add_SAPDate: row.find("#Add_SAPDate" + row.find("#PK_ADDPOID").val()).val()                 
            };
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateCustomer", "JobMaster")',
            data: '{AddPO:' + JSON.stringify(customer) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                location.reload();
            }
        });
    });

    //Cancel event handler.
    $("body").on("click", "#WOSummaryTable .Cancel", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                input.val(span.html());
                span.show();
                input.hide();
            }
        });
        row.find(".Edit").show();
        //  row.find(".Delete").show();
        row.find(".Update").hide();
        $(this).hide();
    });


    function DisplayTable() {
        document.getElementById("divdisplaytable").style.display = "block";
    }


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $(function () {
        $(".PoDate").datepicker({
            dateFormat: 'dd/mm/yy', //check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //minDate: "-90d",
            //maxDate: 0,
        });
    });



</script>






<style>
    .ui-widget-header {
        background: #001ED2 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
    /*-- Delete color-profile --*/
    ul.AttachmentFormat {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.AttachmentFormat > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.AttachmentFormat > li a.title1 {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.AttachmentFormat > li a.deleteItemFormat {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
</style>




<!--Start of main content 3-->
<div class="grey-bg-f3">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-5">

            <div class="col-xs-12 form-col">
                <div class="row">

                    <div class="col-xs-12 text-right">
                        <a href="@Url.Action("JobList", "JobMaster")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                    </div>
                    <div class="col-xs-12 text-center">
                        @if (Model.JObBlock == "YES")
                        {
                            <h2 style="font-size:18px;color:red">This sales order number is blocked in SAP, and no further actions are permitted.</h2>
                        }  
                        
                        
                        </div>
                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">

                                <h3 class="form-page-title" style="font-size:14px;">Work Order Management</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" id="formjc" enctype="multipart/form-data">
                                                @Html.HiddenFor(m => m.PK_QT_ID)
                                                @Html.HiddenFor(m => m.PK_JOB_ID)
                                                @Html.HiddenFor(m => m.PortCode)
                                                @Html.HiddenFor(m => m.ServiceCode)
                                                @Html.HiddenFor(m => m.OBSID)
                                                @Html.HiddenFor(m => m.ServiceID)
                                                @Html.HiddenFor(m => m.PortID)
                                                @Html.HiddenFor(m => m.CostSheetApproved)
                                                @Html.HiddenFor(m => m.CommaSeparatedCheckListId)
                                                @Html.HiddenFor(m => m.CheckListId)
                                                @Html.HiddenFor(m => m.CheckListDescription)
                                                @Html.HiddenFor(m => m.CheckListDescriptionN)
                                                @Html.HiddenFor(m => m.CMP_ID)

                                                <div class="row">

                                                    <div class="col-sm-3">
                                                        <div class="form-group">
                                                            <label>TUV India Control number:</label>
                                                            @Html.TextBoxFor(model => model.Job_Number, new { @placeholder = "TUV India Control number:", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Job_Number, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Old Customer Name:</label>

                                                            @Html.TextBoxFor(model => model.oldCustomerName, new { @placeholder = "Customer Name:", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.oldCustomerName, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Customer Name:</label>
                                                            @*<a href="@Url.Action("CreateCompany", "CompanyMasters", new {@CompanyID = Model.CMP_ID })">*@
                                                            @Html.TextBoxFor(model => model.Client_Name, new { @placeholder = "Customer Name:", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Client_Name, "", new { @class = "text-danger validation-msg" })
                                                            @*</a>*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group addCSS">
                                                            <label>Branch :</label>

                                                            @Html.DropDownListFor(model => model.Branch, (IEnumerable<SelectListItem>)ViewData["BranchName"], "---Select Branch---", new { @id = "ddlBranch", @class = "form-control", @readonly = "readonly" })

                                                            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>OBS Type:</label>
                                                            @Html.TextBoxFor(model => model.Job_type, new { @placeholder = "Job Type", @class = "form-control", @readonly = "readonly", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.Job_type, "", new { @class = "text-danger validation-msg" })
                                                            @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service Portfolio Type:</label>
                                                            @Html.TextBoxFor(model => model.PortfolioType, new { @placeholder = "Portfolio Type", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.PortfolioType, "", new { @class = "text-danger validation-msg" })
                                                            @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service Type:</label>
                                                            @Html.TextBoxFor(model => model.subserviceType, new { @placeholder = "Service Type", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.subserviceType, "", new { @class = "text-danger validation-msg" })
                                                            @*<input type="text" class="form-control" placeholder="Main Here">*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Enquiry Reference Number :</label>
                                                            @*<input type="text" class="form-control" placeholder="Phone Here">*@

                                                            <a href="@Url.Action("Enquiry", "EnquiryMaster", new {@EQ_ID = Model.EQ_ID })"> @Html.TextBoxFor(model => model.Enquiry_Of_Order, new { @placeholder = "Enquiry Reference Number", @class = "form-control", autocomplete = "off", @readonly = "readonly" })</a>
                                                            @Html.ValidationMessageFor(model => model.Enquiry_Of_Order, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Quotation Reference Number:</label>
                                                            @*<input type="text" class="form-control" placeholder="Website Here">*@
                                                            <a style="color:#001ED2;" href="@Url.Action("Quotation", "QuotationMaster", new { @PK_QM_ID = Model.PK_QT_ID })">
                                                                @Html.TextBoxFor(model => model.Quotation_Of_Order, new { @placeholder = "Quotation Reference Number", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Quotation_Of_Order, "", new { @class = "text-danger validation-msg" })
                                                            </a>
                                                        </div>
                                                    </div>





                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.chkARC, new { @onclick = "return false;" })
                                                            <label for="InActive" style="color:black;padding-top:24px;">ARC Job</label>
                                                        </div>
                                                    </div>
                                                    @if (Model.PK_JOB_ID > 0)
                                                    {
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Execution Location:</label>
                                                                @Html.TextBoxFor(model => model.InspectionLocation, new { @placeholder = "Inspection Location", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.InspectionLocation, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    }

                                                </div>


                                                @if (Model.PK_JOB_ID == 0)
                                                {
                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-12">

                                                            @if (ViewBag.lstDOrderType != null)
                                                            {
                                                                <div id="DomesticCurrency" style="align:center ;">
                                                                    <div class="form-page-title" style="width:110%;"><label>Domestic Quoted</label></div>

                                                                    <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%;font-family:'TNG Pro';font-size:14px;">
                                                                        <tr style="background-color:lightgray;color:black">
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Type(s)
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Rate <br />(Refer Note 3)
                                                                            </td>
                                                                            <td width="80px" style="text-align: center;vertical-align:top;">
                                                                                Estimated Manday
                                                                                /ManMonth/Manhour <br />(Refer Note 4)
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Distance in KM <br />(To And Fro)
                                                                            </td>

                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Currency
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Exchange Rate
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Amount <br />INR
                                                                            </td>
                                                                            <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                                Remark <br />(Refer  Note 5)
                                                                            </td>

                                                                        </tr>
                                                                        @{
                                                                            int i = 0;
                                                                        }

                                                                        @if (ViewBag.lstDOrderType != null)
                                                                        {
                                                                            if (ViewBag.lstDOrderType.Count != 0)
                                                                            {

                                                                                foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.JobMasters>)
                                                                                {
                                                                                    i = i + 1;
                                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">



                                                                                        <td class="hidden">
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderTypeId, new { @placeholder = "Order Rate", @class = "form-control  COrderTypeId", @Value = item.OrderTypeId, @id = "IddOrderTypeId" + i, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].OrderTypeId, new { @Value = item.OrderTypeId })
                                                                                        </td>

                                                                                        <td>

                                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].OrderType, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays" , Selected = (item.OrderType == "ManDays") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth", Selected = (item.OrderType == "ManMonth") ?true : false },
                                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum", Selected = (item.OrderType == "LumSum") ?true : false },
                                                                                    new SelectListItem{ Text="Percentage", Value = "Perc", Selected = (item.OrderType == "Perc") ?true : false },
                                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR", Selected = (item.OrderType == "ManHR") ?true : false },

                                                                                },
                                                                                new { @class = "form-control COrderType addCSS", @id = "ddlOrderType", @readonly = "readonly" })
                                                                                            @Html.HiddenFor(m => m.lstQuotationMasterOrderType[j].OrderType, new { @Value = item.OrderType })

                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderRate, new { @placeholder = "Order Rate", @class = "form-control  COrderRate", @Value = item.OrderRate, @id = "IddOrderType" + i })
                                                                                            @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>

                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "IddEstimate_ManDays_ManMonth", @Value = item.Estimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);" })
                                                                                            @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Distance, new { @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "IddDistance", @Value = item.Distance, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>

                                                                                        <td>


                                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new SelectList(@ViewBag.DTestCurrency, "Code", "Name", item.Dcurrency), "--Select Currency--", new { @id = "IddDcurrency", @class = "form-control CDcurrency", @disabled = "disabled" })
                                                                                            @*@Html.HiddenFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new { @value = item.Dcurrency })

                                                                                @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })*@

                                                                                            @Html.HiddenFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new { @Value = item.Dcurrency })
                                                                                            @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })

                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "IddDExchangeRate", @Value = item.DExchangeRate, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @*<input type="text" name="DExchangeRate" class="form-control CDExchangeRate" , Value = item.DExchangeRate/>*@
                                                                                            @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "IddDTotalAmount", @Value = item.DTotalAmount, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @Value = item.DTotalAmount })

                                                                                            @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Remark, new { @placeholder = "Remark", @class = "form-control CDRemark", autocomplete = "off", @id = "CDRemark", @Value = item.DTotalAmount, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @Value = item.Remark })

                                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>

                                                                                        <td>
                                                                                            @Html.CheckBoxFor(model => model.lstQuotationMasterOrderType[j].RadioButton, new { @class = "DCheckBox" })



                                                                                        </td>



                                                                                    </tr>
                                                                                    j++;
                                                                                }
                                                                            }
                                                                            else
                                                                            {

                                                                            }
                                                                        }






                                                                    </table>




                                                                </div>
                                                                            }

                                                        </div>
                                                    </div>

                                                    <div class="row" style="height:30px"></div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12">
                                                            @if (ViewBag.lstIOrderType != null)
                                                            {
                                                                <div id="InternationalCurrency" style="align:center">

                                                                    <div class="form-page-title" style="width:110%;"><label>International Quoted</label></div>

                                                                    <table id="ITestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%;font-family:'TNG Pro';font-size:14px;">

                                                                        <tr style="background-color:lightgray;color:black">
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Type(s)
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Rate <br />(Refer Note 3)
                                                                            </td>
                                                                            <td width="80px" style="text-align: center;vertical-align:top;">
                                                                                Estimated Manday
                                                                                /ManMonth/Manhour <br />(Refer Note 4)
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Distance in KM <br />(To And Fro)
                                                                            </td>

                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Currency
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Exchange Rate
                                                                            </td>
                                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                                Amount <br />INR
                                                                            </td>
                                                                            <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                                Remark <br />(Refer  Note 5)
                                                                            </td>

                                                                        </tr>

                                                                        @{
                                                                            int l = 0;
                                                                        }



                                                                        @if (ViewBag.lstIOrderType != null)
                                                                        {
                                                                            if (ViewBag.lstIOrderType.Count != 0)
                                                                            {
                                                                                foreach (var item in ViewBag.lstIOrderType as IEnumerable<TuvVision.Models.JobMasters>)
                                                                                {
                                                                                    l = l + 1;

                                                                                    <tr class="trInternational" style="background-color:#f0f0f0">
                                                                                        <td class="hidden">
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IOrderTypeId, new { @placeholder = "Order Type", @class = "form-control  CIOrderTypeId", @Value = item.IOrderTypeId, @id = "IdIOrderTypeId" + l, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderTypeI[k].IOrderTypeId, new { @Value = item.IOrderTypeId })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderTypeI[k].IOrderType, new List<SelectListItem>
                                                                                    {
                                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays"  , Selected = (item.IOrderType == "ManDays") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" , Selected = (item.IOrderType == "ManMonth") ?true : false} ,
                                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum", Selected = (item.IOrderType == "LumSum") ?true : false },
                                                                                    new SelectListItem{ Text="Percentage", Value = "Perc", Selected = (item.IOrderType == "Perc") ?true : false },
                                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR", Selected = (item.IOrderType == "ManHR") ?true : false },

                                                                                    },
                                                                                    new { @class = "form-control CIOrderType addCSS", @id = "ddlIOrderType" + l, @disabled = "disabled" })

                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderTypeI[k].IOrderType, new { @Value = item.IOrderType })

                                                                                            @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IOrderRate, new { @placeholder = "Order Rate", @class = "form-control CIOrderRate", @Value = item.IOrderRate, @id = "ddlIOrderRate" + l, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IEstimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "ddlIEstimate_ManDays_ManMonth" + l, @Value = item.IEstimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IDistance, new { @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "ddlIDistance" + l, @Value = item.IDistance, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                                        </td>

                                                                                        <td>

                                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderTypeI[k].Icurrency, new SelectList(@ViewBag.ITestCurrency, "Code", "Name", item.Icurrency), "--Select Currency--", new { @id = "IddDcurrency" + l, @class = "form-control CIcurrency", @disabled = "disabled" })

                                                                                            @*@Html.HiddenFor(m => m.Icurrency)*@
                                                                                            @Html.HiddenFor(m => m.lstQuotationMasterOrderTypeI[k].Icurrency, new { @Value = item.Icurrency })


                                                                                            @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "ddlIExchangeRate" + l, @Value = item.IExchangeRate, @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                            @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderTypeI[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount })
                                                                                            @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderTypeI[j].Remark, new { @placeholder = "Remark", @class = "form-control CDRemark", autocomplete = "off", @id = "CDRemark", @Value = item.DTotalAmount, @readonly = "readonly" })
                                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderTypeI[j].Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @Value = item.Remark })

                                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>

                                                                                            @Html.CheckBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IRadioButton, new { @class = "DCheckBox" })

                                                                                            @*@if (item.IReadOnly == "Yes")
                                                                                {
                                                                                    @Html.CheckBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IRadioButton, new { @onclick = "return false;", @class = "DCheckBox" })
                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.CheckBoxFor(model => model.lstQuotationMasterOrderTypeI[k].IRadioButton, new { @class = "DCheckBox" })
                                                                                }*@
                                                                                        </td>
                                                                                    </tr>

                                                                                    k++;
                                                                                }
                                                                            }
                                                                        }

                                                                    </table>


                                                                </div>
                                                                            }
                                                        </div>
                                                    </div>
                                                                            }



                                                <br />

                                                @*Hide Below fields for job creation  15 July*@

                                                @if (Model.PK_JOB_ID > 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label> Order Type:</label>
                                                                @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                                                     {
                                                                                      new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                                       new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                                                       new SelectListItem{ Text="Man Months", Value = "ManMonth" },
                                                                                       new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                                       new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                                                       new SelectListItem{ Text="Man Hours", Value = "ManHR" },
                                                                                    }, new { @class = "form-control", @id = "ddlOrderType", @disabled = "disabled" })

                                                                @Html.HiddenFor(model => model.OrderType, new { @id = "ddlOrderType" })


                                                                @Html.ValidationMessageFor(m => m.OrderType, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Currency:</label>
                                                                @Html.DropDownListFor(model => model.Currency, (IEnumerable<SelectListItem>)ViewData["CurrencyItems"], "---Select Currency---", new { @id = "ddlCurrency", @class = "form-control", @disabled = "disabled" })

                                                                @Html.HiddenFor(model => model.Currency, new { @id = "ddlCurrency" })
                                                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Order Rate:</label>

                                                                @Html.TextBoxFor(model => model.OrderRate, new { @placeholder = "Order Rate", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Estimated Man Month:</label>
                                                                @if (Model.OrderType.ToString().ToUpper() == "MANMONTH")
                                                                {
                                                                    if (Model.PK_JOB_ID > 0)
                                                                    {
                                                                        @Html.TextBoxFor(model => model.Estimate_ManMonth, new { @placeholder = "Estimated Man Month", @class = "form-control", autocomplete = "off", @id = "Estimate_ManMonth", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextBoxFor(model => model.Estimate_ManMonth, new { @placeholder = "Estimated Man Month", @class = "form-control", autocomplete = "off", @id = "Estimate_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(model => model.Estimate_ManMonth, new { @placeholder = "Estimated Man Month", @class = "form-control", autocomplete = "off", @id = "Estimate_ManMonth", @readonly = "readonly" })
                                                                }

                                                                @Html.ValidationMessageFor(model => model.Estimate_ManMonth, "", new { @class = "text-danger validation-msg" })



                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Estimated Man Hours:</label>
                                                                @if (Model.PK_JOB_ID > 0)
                                                                {
                                                                    @Html.TextBoxFor(model => model.Estimate_ManHours, new { @placeholder = "Estimated Man Hours", @class = "form-control", autocomplete = "off", @id = "Estimate_ManHours", @readonly = "readonly" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(model => model.Estimate_ManHours, new { @placeholder = "Estimated Man Hours", @class = "form-control", autocomplete = "off", @id = "Estimate_ManHours" })

                                                                }
                                                                @Html.HiddenFor(model => model.Estimate_ManHours, new { @id = "Estimate_ManHours" })
                                                                @Html.ValidationMessageFor(model => model.Estimate_ManHours, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>


                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group" id="divMandays">

                                                                <label>Man Days as per PO:</label>
                                                                @if (Model.OrderType.ToString().ToUpper() == "MANMONTH")
                                                                {
                                                                    @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control", autocomplete = "off", @id = "Estimate_ManDays", @readonly = "readonly" })
                                                                }
                                                                else
                                                                {
                                                                    if (Model.PK_JOB_ID > 0)
                                                                    {
                                                                        @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control", autocomplete = "off", @id = "Estimate_ManDays", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control", autocomplete = "off", @id = "Estimate_ManDays", @onkeypress = "return isNumberKey(event);" })
                                                                    }
                                                                }

                                                                @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Distance in KM (To & fro):</label>
                                                                @Html.TextBoxFor(model => model.Distance, new { @placeholder = "Distance in KM (To & fro)", @class = "form-control", autocomplete = "off", @id = "Distance", @readonly = "readonly" })
                                                                @Html.HiddenFor(model => model.Distance, new { @id = "Distance" })
                                                                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Taxation:</label>
                                                                @Html.TextBoxFor(model => model.Distance, new { @placeholder = "Taxation Considered In Quotation", @class = "form-control", autocomplete = "off", @id = "Distance", @readonly = "readonly" })
                                                                @Html.HiddenFor(model => model.Distance, new { @id = "Distance" })
                                                                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Quoted Amount (Excluding Taxes):</label>
                                                                @Html.TextBoxFor(model => model.EstimatedAmount, new { @placeholder = "Quoted Amount (Excluding Taxes)", @class = "form-control", autocomplete = "off", @id = "Distance", @readonly = "readonly" })
                                                                @Html.HiddenFor(model => model.EstimatedAmount, new { @id = "Distance" })
                                                                @Html.ValidationMessageFor(model => model.EstimatedAmount, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }



                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Customer PO Number on TUVI:</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @if (Model.PK_JOB_ID > 0)
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PoNo_PoDate, new { @placeholder = "Customer PO Number on TUVI", @class = "form-control", @readonly = "readonly" })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PoNo_PoDate, new { @placeholder = "Customer PO Number on TUVI", @class = "form-control" })
                                                            }
                                                            @Html.ValidationMessageFor(model => model.Customer_PoNo_PoDate, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>PO Date:</label>
                                                            @if (Model.PK_JOB_ID > 0)
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PoDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Po Date", @class = "form-control PoDate addCSS ", autocomplete = "off" })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PoDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Po Date", @class = "form-control PoDate ", autocomplete = "off" })
                                                            }
                                                            @Html.ValidationMessageFor(model => model.Customer_PoDate, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-2" id="divPOValidity">
                                                        <div class="form-group">
                                                            <label> PO Validity:</label>
                                                            @if (ViewBag.Role == "1")
                                                            {
                                                                @Html.TextBoxFor(model => model.Po_Validity, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date", @class = "form-control PoDate ", autocomplete = "off" })
                                                            }
                                                            else
                                                            {
                                                                if (Model.POAwaited == false && Model.PK_JOB_ID == 0)
                                                                {
                                                                    @Html.TextBoxFor(model => model.Po_Validity, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date", @class = "form-control PoDate ", autocomplete = "off" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(model => model.Po_Validity, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date", @class = "form-control PoDate addCSS", autocomplete = "off", @disabled = "disabled" })
                                                                }
                                                            }

                                                            @Html.HiddenFor(model => model.Po_Validity, new { @id = "Po_Validity" })

                                                            @Html.ValidationMessageFor(model => model.Po_Validity, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Total PO Amount in INR (Excluding Taxes):</label>
                                                            @*<input type="text" class="form-control" placeholder="TAN Here">*@
                                                            @if (Model.PK_JOB_ID > 0)
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PO_Amount, new { @placeholder = "PO Amount in INR", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.Customer_PO_Amount, new { @placeholder = "PO Amount in INR", @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                            }
                                                            @Html.ValidationMessageFor(model => model.Customer_PO_Amount, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.POAwaited, new { @id = "chkAwaited" })
                                                            <label for="InActive" style="color:black;">PO Awaited</label>


                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>TUV Terms & Conditions Accepted by Customer:</label>
                                                            @Html.DropDownListFor(model => model.TermsCondition, new List<SelectListItem>
                                                    {
                                                        new SelectListItem{ Text="---SELECT---", Value = "" },
                                                        new SelectListItem{ Text="YES", Value = "YES", Selected = Model.TermsCondition == "YES" },
                                                        new SelectListItem{ Text="NO", Value = "NO", Selected = Model.TermsCondition == "NO" },
                                                    },
                                                    new { @class = "form-control", @id = "ddlTermsCondition" })
                                                        </div>
                                                    </div>
                                                </div>










                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.checkIFCustomerSpecific)
                                                            <label for="InActive" style="color:black;">Report required in Customer Specific Format</label>


                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.checkIFCustomerSpecificReportNo)
                                                            <label for="InActive" style="color:black;">Customer defined numbering is required for IVR + IRN</label>


                                                        </div>
                                                    </div>
                                                </div>

                                                @* added by shrutika salve 01082024 *@
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.checkIFConcernDisplay)
                                                            <label for="InActive" style="color:black;">Check if Concern need to be Displayed on the PDF</label>


                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.ItemDescriptionDynamic)
                                                            <label for="InActive" style="color:black;">Check if Heat number need to be Displayed on the PDF</label>


                                                        </div>
                                                    </div>
                                                </div>

                                                @* added by shrutika salve 01082024 *@
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.checkIFExpeditingReport)
                                                            <label for="InActive" style="color:black;">Expediting Job</label>


                                                        </div>
                                                    </div>

                                                    @if (Model.subserviceType == "IBR - RESIDUAL LIFE ASSESSMENT (RLA)" || Model.subserviceType == "INDIAN BOILER REGULATIONS (IBR)")
                                                    {
                                                        Model.IVRAssignment = true;
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-6">

                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(model => model.IVRAssignment,new { @checked = "checked" })
                                                                    <label for="InActive" style="color:black;">IVR Assingment</label>

                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-6">

                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(model => model.IVRAssignment)
                                                                    <label for="InActive" style="color:black;">IVR Assingment</label>

                                                                </div>
                                                            </div>
                                                        </div>
                                                    }


                                                </div>
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.checkIFInOutTimeOnPDF)
                                                            <label for="InActive" style="color:black;">In/Out Time display on PDF</label>


                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.chkIfTravelExpenseOnPDF)
                                                            <label for="InActive" style="color:black;">Travel Expense display on PDF</label>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.chkIfEndUserEditable)
                                                            <label for="InActive" style="color:black;">End User Editable on PDF</label>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">

                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.chkDoNotshareVendor)
                                                            <label for="InActive" style="color:black;">Do Not Share IVR or IRN With Vendor</label>

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                @if (Model.PK_JOB_ID != 0)
                                                {
                                                    <label id="Showvalue"></label>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>SAP No:</label>
                                                                @Html.TextBoxFor(model => model.SAP_No, new { @placeholder = "SAP No", @class = "form-control", autocomplete = "off", @maxlength = "10", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.SAP_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>SAP Item No(If Applicable):</label>
                                                                @Html.TextBoxFor(model => model.SAPItem_No, new { @placeholder = "SAP Item No", @class = "form-control", autocomplete = "off", @maxlength = "5", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.SAPItem_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>SAP No:</label>
                                                                @Html.TextBoxFor(model => model.SAP_No, new { @placeholder = "SAP No", @class = "form-control", autocomplete = "off", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                                                @Html.ValidationMessageFor(model => model.SAP_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>SAP Item No(If Applicable):</label>
                                                                @Html.TextBoxFor(model => model.SAPItem_No, new { @placeholder = "SAP Item No", @class = "form-control", autocomplete = "off", @maxlength = "5", @onkeypress = "return isNumberKey(event);" })
                                                                @Html.ValidationMessageFor(model => model.SAPItem_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }


                                                <div class="row">
                                                    @Html.HiddenFor(model => model.FK_CMP_ID)
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>End Customer Name:</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                            @*<a href="@Url.Action("CreateCompany", "CompanyMasters", new {@CompanyID = Model.CMP_ID })">*@
                                                            @Html.TextBoxFor(model => model.End_User, new { @placeholder = "End Customer Name", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.End_User, "", new { @class = "text-danger validation-msg" })
                                                            @*</a>*@

                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Project Name:</label>
                                                            @Html.TextBoxFor(model => model.Description, new { @placeholder = "Project Name", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger validation-msg" })
                                                            @*<input type="email" class="form-control" placeholder="Email Here">*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Sub Project Name:</label>
                                                            @Html.TextBoxFor(model => model.SubProjectName, new { @placeholder = "Sub Project Name", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.SubProjectName, "", new { @class = "text-danger validation-msg" })
                                                            @*<input type="email" class="form-control" placeholder="Email Here">*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>DEC/ PMC/ EPC Name:</label>
                                                            @Html.TextBoxFor(model => model.DECName, new { @placeholder = "DEC/ PMC/ EPC Name", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.DECName, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>DEC/ PMC/ EPC No:</label>
                                                            @Html.TextBoxFor(model => model.DECNumber, new { @placeholder = "DEC/ PMC/ EPC No", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.DECNumber, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>



                                                </div>







                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <label><u>PROBABLE INVOICING FOR</u></label>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>First Year:</label>
                                                            @Html.TextBoxFor(model => model.FirstYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.FirstYear, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Second Year:</label>
                                                            @Html.TextBoxFor(model => model.SecondYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.SecondYear, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Third Year:</label>
                                                            @Html.TextBoxFor(model => model.ThirdYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.ThirdYear, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Fourth Year:</label>
                                                            @Html.TextBoxFor(model => model.FourthYear, new { @placeholder = "Amount", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.FourthYear, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Invoiced Amount in INR:</label>
                                                            @Html.TextBoxFor(model => model.InvoiceAmount, new { @placeholder = "Invoiced Amount in INR", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.InvoiceAmount, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Bal. Invoicing Amount in INR:</label>

                                                            @Html.TextBoxFor(model => model.Balance, new { @placeholder = "Balance", @class = "form-control", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Special Notes or Customer instructions (These will be visible to Inspector on their call page):</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your Special Notes..."></textarea>*@

                                                            @Html.TextAreaFor(model => model.Special_Notes, new { @placeholder = "Special Notes", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Special_Notes, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Additional remarks (Internal purpose only. These will not be visible to Inspector on their call page):</label>
                                                            @*<textarea rows="3" class="form-control" placeholder="Type your Special Notes..."></textarea>*@

                                                            @Html.TextAreaFor(model => model.GstDetails_BillingAddress, new { @placeholder = "Additional remarks", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.GSTDetail, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label><i class="fa fa-paperclip" style="color:black;"></i>Attachments: </label><br />
                                                            <span style="color:#E12F24;">
                                                                <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                            </span>

                                                            <span>
                                                                1) Attach Purchase order copies, order acceptance communications in PDF format.<br />
                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2) These attachments will not be visible to Inspector on their call page.
                                                            </span>
                                                            <input type="file" class="filepond" name="FileUpload" id="FileUpload" multiple>
                                                            <input hidden="hidden" id="FileUpload" name="FileUpload" class="hidden" />
                                                        </div>
                                                    </div>

                                                    @if (Model != null)
                                                    {
                                                        if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                        {
                                                            <input type="hidden" value="Yes" name="testing" id="testing" />
                                                            <div class="col-xs-12">
                                                                <div class="form-group">
                                                                    <ul class="Attachment">
                                                                        @foreach (var item in Model.FileDetails)
                                                                        {
                                                                            <li>
                                                                                <a class="title1" href="~/JobMaster/Download1/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                                <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                            </li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <input type="hidden" value="" name="testing" id="testing" />
                                                            <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                    }
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label><i class="fa fa-paperclip" style="color:black;"></i>@*Format Of Reports (Please attach files here):*@ Attachments : @*<span style="color:#ff0000;">*</span>*@</label><br />
                                                            <span style="color:#E12F24;">
                                                                <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                            </span>

                                                            <span>
                                                                1) Attach Project related documents like PR, MR, Specifications and procedures etc. & <br />
                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Report formats approved by customer.<br />
                                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2) These attachments will be readily available to inspector on their call page.
                                                            </span>
                                                            <input type="file" class="filepond" name="FileUpload1" id="FileUpload1" multiple>
                                                            <input hidden="hidden" id="hdfFileUpload1" name="FileUpload1" class="hidden" />
                                                        </div>
                                                    </div>
                                                    @if (Model != null)
                                                    {
                                                        if (Model.FileDetailsFormat != null && Model.FileDetailsFormat.Count > 0)
                                                        {
                                                            <div class="col-xs-12">
                                                                <div class="form-group">
                                                                    <ul class="AttachmentFormat">
                                                                        @foreach (var item in Model.FileDetailsFormat)
                                                                        {
                                                                            <li>
                                                                                <a class="title1" href="~/JobMaster/Download2/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                                <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItemFormat">X</a>
                                                                            </li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                    }
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>

                                                @*added by nikita on 18062024*@
                                                <div class="col-xs-12" id="txtlegalreview">
                                                    <div class="form-group">

                                                        @if (ViewBag.JobExists == true)
                                                        {
                                                            <div class="col-xs-12">
                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(m => m.LegalReview, new { @onclick = "return false;", id = "LegalReview_" })


                                                                    <label for="InActive" style="color:black;margin-left: 13px;">Legal Related Clauses are reviewed in PO and Observations are mentioned in comment box.</label>
                                                                </div>
                                                            </div>
                                                        }

                                                        else
                                                        {
                                                            <div class="col-xs-12">
                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(m => m.LegalReview, new { id = "LegalReview_" })
                                                                    <label for="InActive" style="color:black;margin-left: 13px;">Legal Related Clauses are reviewed in PO and Observations are mentioned in comment box.</label>
                                                                </div>
                                                            </div>

                                                        }

                                                    </div>
                                                </div>
                                                <div class="col-xs-12" id="txtJobCreated">
                                                    <div class="form-group">

                                                        @if (ViewBag.JobExists == true)
                                                        {
                                                            <div class="col-xs-12">
                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(m => m.JobCreated, new { @onclick = "return false;", id = "JobCreated_" })

                                                                    <label for="InActive" style="color:black;margin-left: 11px;">Allowed To Execute Job:</label>
                                                                </div>
                                                            </div>
                                                        }

                                                        else
                                                        {
                                                            <div class="col-xs-12 col-sm-6">
                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(m => m.JobCreated, new { id = "JobCreated_" })
                                                                    <label for="InActive" style="color:black;margin-left:11px;">Allowed To Execute Job:</label>
                                                                </div>
                                                            </div>

                                                        }

                                                    </div>
                                                </div>
                                                <div class="row" id="txtcomment">
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Comments: <span style="color:#1CE325;">*</span></label>
                                                            @Html.TextAreaFor(model => model.Legalcomment, new { placeholder = "Enter Project Name", @class = "form-control form-control-custom", @rows = "3" })
                                                            @Html.ValidationMessageFor(model => model.Legalcomment, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>


                                                @*added by shrutika salve 08042024*@
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <span class="text-center" style="color:#ff0000;">Note:- </span>For sharing contact details with inspector & IVR/IRN <br />
                                                <div class="col-xs-12 text-center">
                                                    <button type="button" class="btn btn-default news-btn" id="btnShowproject">Communication Matrix</button>
                                                </div>


                                                <div id="btnshowdataproject">


                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-6">
                                                            <div>

                                                                @*<a id="lnkNewContact" href="@Url.Action("ContactDetails","EnquiryMaster")" style="float:left;"
                                                       data-toggle="modal" data-target="#AddNewContactDetails">
                                                        <i class="fa fa-plus-circle"></i>Add New Contact Person
                                                    </a>*@
                                                                <a id="lnkNewContact"
                                                                   data-toggle="modal" data-target="#AddNewContactDetails">
                                                                    <i class="fa fa-plus-circle"></i>Add New Contact Person
                                                                </a>
                                                                <label style="margin-left: 10px">Customer Contact Details:</label>

                                                                @if (ViewData["ContactTypeItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Client_Contact, (IEnumerable<SelectListItem>)ViewData["ContactTypeItems"], new { @id = "ddlClientContact", @class = "form-control form-multiselect-city", @multiple = "multiple" })
                                                                }
                                                            </div>

                                                        </div>

                                                        <div class="col-xs-12 col-sm-5">
                                                            <div>
                                                                <label>TUVI Contact Details:</label>

                                                                @Html.TextBoxFor(model => model.Tuv_Email, new { @placeholder = "TUV Email ", @class = "form-control TuvEmailData", @id = "ddlTuvEmail" })
                                                            </div>
                                                        </div>

                                                        @*<div class="col-xs-12 col-sm-1">
                                                <button type="button" class="btn btn-default news-btn" id="btnSaveData" onclick="SaveData();" style="margin-top: 25px;">Save</button>
                                            </div>*@


                                                    </div>

                                                    <div colspan="12">
                                                        <div class="form-group">
                                                            <table id="tbl" class="table table-striped" style="width:100%;border:1px solid">
                                                                <thead>
                                                                    <tr style="border:1px solid; background:#001ED2;">
                                                                        <th>Customer Contact Details</th>
                                                                        <th>Customer Email ID</th>
                                                                        <th>TUVI Name</th>
                                                                        <th>Email ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody id="tbldataBody"></tbody>

                                                            </table>
                                                        </div>
                                                    </div>

                                                </div>

                                                @if (Model.PK_JOB_ID != 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>


                                                    if (ViewBag.Role == "1" || ViewBag.Role == "36" || ViewBag.Role == "30" || ViewBag.Role == "34" || ViewBag.Role == "37" || ViewBag.Role == "38" || ViewBag.Role == "43" || ViewBag.Role == "46" || ViewBag.Role == "47" || ViewBag.Role == "48" || ViewBag.Role == "49" || ViewBag.Role == "50" || ViewBag.Role == "51" || ViewBag.Role == "53" || ViewBag.Role == "57")
                                                    {
                                                        <div class="col-xs-12 text-center">

                                                            <button type="button" class="btn btn-default news-btn" id="btnclick">Collect Customer Feedback</button>
                                                        </div>


                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <hr class="custom-hr1">
                                                            </div>
                                                        </div>

                                                        <div id="btnshow">
                                                            <div class="row">

                                                                <a id="lnkNewContact"
                                                                   data-toggle="modal" data-target="#AddNewContactDetails">
                                                                    <i class="fa fa-plus-circle"></i>Add New Contact Person
                                                                </a>
                                                            </div>
                                                            <div class="row">
                                                                <table id="tbl" class="table table-striped" style="width:100%;border:1px solid">
                                                                    <thead>
                                                                        <tr style="border:1px solid; background:#001ED2;">
                                                                            <th style="width: 13%;">
                                                                                <input type="checkbox" id="chkChkAll" /> &nbsp; &nbsp; <label> Check All</label>
                                                                            </th>
                                                                            <th>Name</th>
                                                                            <th>EmailID</th>
                                                                            <th>Designations</th>
                                                                            @*//added by shrutika salve 20122023*@
                                                                            <th class="hidden" id="pk_uderiduser">id</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="tblBody">
                                                                        @*<tr>
                                                                <td style="text-align: center;"><input type="checkbox" /></td>
                                                                <td>1</td>
                                                                <td>John Hammond</td>

                                                            </tr>*@
                                                                    </tbody>
                                                                </table>
                                                                <div class="col-xs-12 text-center">
                                                                    <input id="btnGet" type="button" value="Send Email" class="btn btn-default news-btn" />


                                                                </div>
                                                                <div class="col-xs-12 text-center">

                                                                    <label id="lblEmailSendOn" style="color:#E12F24;"></label>
                                                                </div>


                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="row" style="display:none">
                                                        <a id="lnkNewContact"
                                                           data-toggle="modal" data-target="#AddNewContactDetails">
                                                            <i class="fa fa-plus-circle"></i>Add New Contact Person
                                                        </a>
                                                    </div>
                                                    <div class="row" style="display:none">
                                                        <table id="tbl" class="table table-striped" style="width:100%;border:1px solid">
                                                            <thead>
                                                                <tr style="border:1px solid; background:#001ED2;">
                                                                    <th style="width: 13%;">
                                                                        <input type="checkbox" id="chkChkAll" /> &nbsp; &nbsp; <label> Check All</label>
                                                                    </th>
                                                                    <th>Name</th>
                                                                    <th>EmailID</th>
                                                                    <th>Designations</th>
                                                                    @*//added by shrutika salve 20122023*@
                                                                    <th class="hidden" id="pk_uderiduser">id</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tblBody">
                                                                @*<tr>
                                                        <td style="text-align: center;"><input type="checkbox" /></td>
                                                        <td>1</td>
                                                        <td>John Hammond</td>

                                                    </tr>*@
                                                            </tbody>
                                                        </table>



                                                    </div>
                                                }





                                                <div class="row">

                                                    @if (Model.PK_JOB_ID == 0)
                                                    {

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label>Order Status:</label>
                                                                @*</div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">*@

                                                                @Html.RadioButtonFor(m => m.OrderStatus, "Complete", new { id = "Complete" })
                                                                <label for="Active">Complete</label>
                                                                @Html.RadioButtonFor(m => m.OrderStatus, "Incomplete", new { id = "Incomplete", @checked = "true" })
                                                                <label for="InActive">Incomplete</label>

                                                                @Html.ValidationMessageFor(m => m.OrderStatus, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label style="color:red">Sales Order Blocked in SAP?:</label>
                                                                @Html.RadioButtonFor(m => m.JObBlock, "YES", new { id = "YES", disabled = "disabled" })
                                                                <label for="Active">YES</label>
                                                                @Html.RadioButtonFor(m => m.JObBlock, "Incomplete", new { id = "NO", disabled = "disabled" })
                                                                <label for="InActive">NO</label>

                                                                @Html.ValidationMessageFor(m => m.JObBlock, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    }
                                                    else
                                                    {

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label>Order Status:</label>
                                                                @*</div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">*@
                                                                @Html.RadioButtonFor(m => m.OrderStatus, "Complete", new { id = "Complete" })
                                                                <label for="Active">Complete</label>

                                                                @Html.RadioButtonFor(m => m.OrderStatus, "Incomplete", new { id = "Incomplete" })
                                                                <label for="InActive">Incomplete</label>
                                                                @Html.ValidationMessageFor(m => m.OrderStatus, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label style="color:red">Sales Order Blocked in SAP?:</label>
                                                                @Html.RadioButtonFor(m => m.JObBlock, "YES", new { id = "YES", disabled = "disabled" })
                                                                <label for="Active">YES</label>

                                                                @Html.RadioButtonFor(m => m.JObBlock, "NO", new { id = "NO", disabled = "disabled" })
                                                                <label for="InActive">NO</label>
                                                                @Html.ValidationMessageFor(m => m.JObBlock, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    }
                                                </div>



                                               





                                                @*Added By Satish Pawar on 10 May 2023
                                    Link To add a Contact Details*@
                                                @Html.Hidden("hidCompany")


                                                @*added by shrutika salve*@


                                                


                                                @*End Code*@

                                                <div class="col-xs-12 text-center">
                                                    @*<button type="reset" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModal">Contract Review CheckList</button>*@
                                                    @if (Model != null)
                                                    {
                                                        @*<button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE" onclick="doFunction();" data-status1="@Model.CheckListDescription">Enquiry Review CheckList</button>*@
                                                        <button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModal" data-status1="@Model.CheckListDescription">Contract Review CheckList</button>
                                                    }
                                                    else
                                                    {
                                                        @*<button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE" onclick="doFunction();">Enquiry Review CheckList</button>*@
                                                        <button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModal">Contract Review CheckList</button>
                                                    }

                                                    <a href="@Url.Action("InvoiceInstructionDetails", "InvoiceInstruction" , new {@PK_JOB_ID=Model.PK_JOB_ID })" class="btn btn-default news-btn">Invoice Instructions</a>
                                                    <a href="@Url.Action("IRNReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.Job_Number, @JobId=Model.PK_JOB_ID,@Type="JobMaster" })" class="btn btn-default news-btn"> IRN List</a>
                                                    <a href="@Url.Action("IVRReportsBySubjob","SubJobMaster",new {@SubJob_No=Model.SubJob_No, @JobId=Model.PK_JOB_ID,@Type="JobMaster"  })" class="btn btn-default news-btn"> IVR List</a>

                                                </div>
                                                <div class="col-xs-12 text-center">
                                                    @*<button type="reset" class="btn btn-default news-btn">Reset</button>*@

                                                    @if (Model.Job_Number == null || Model.Job_Number == "")
                                                    {
                                                        if (Model.JObBlock != "YES")
                                                        {


                                                        @*<button type="reset" class="btn btn-default news-btn">Reset</button>*@
                                                        <button type="submit" id="btnjc" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i>  Save </button>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (Model.JObBlock != "YES")
                                                        {
                                                        <button type="submit" id="btnjc" class="btn btn-default insert-form-btn">  Update </button>
                                                        }


                                                    }



                                                </div>



                                                @*Added by shrutika salve 12012023*@

                                                @if (Model.PK_JOB_ID != 0 && Model.checkIFExpeditingReport == true)
                                                {
                                                    <div class="col-xs-12 text-center">


                                                        <button type="button" class="btn btn-default insert-form-btn" id="btnid" style="margin-top:24px;" onclick="GetItem('@Model.PK_JOB_ID')">
                                                            Status Management
                                                        </button>
                                                    </div>

                                                }
                                                else
                                                {
                                                    <div class="col-xs-12 text-center" style="display:none;">

                                                        <button type="button" class="btn btn-default insert-form-btn" id="btnid" style="margin-top:24px;" onclick="GetItem('@Model.PK_JOB_ID')">
                                                            Status Management
                                                        </button>
                                                    </div>
                                                }

                                                @if (Model.lstAddMandays != null)
                                                {
                                                    <div id="DivWOSummaryTable">
                                                        <table class="display dataTable no-footer" style="overflow-y:auto" id="WOSummaryTable">
                                                            <tr style="background-color:#001ED2;color:white">
                                                                <td colspan="12" style="text-align:center"><b>Work Order</b></td>
                                                            </tr>
                                                            <tr style="background-color:lightgray">
                                                                <td colspan="12" style="text-align:center"><b>Summary</b></td>
                                                            </tr>
                                                            <tr style="background-color:#f0f0f0">
                                                                <td style="text-align:center;width:20px;font-size:smaller;">Order Type</td>
                                                                <td style="text-align:center;width:30px;font-size:smaller;">Reason</td>
                                                                <td style="text-align:center;width:45px;font-size:smaller;">Description</td>




                                                                @if (Model.OrderType == "ManDays")
                                                                {
                                                                    <td style="text-align:center;width:10px;font-size:smaller;">Mandays</td>
                                                                }
                                                                else if (Model.OrderType == "ManMonth")
                                                                {
                                                                    <td style="text-align:center;width:10px;font-size:smaller;">Manmonth</td>
                                                                }
                                                                else if (Model.OrderType == "ManHR")
                                                                {
                                                                    <td style="text-align:center;width:10px;font-size:smaller;">Manhrs</td>
                                                                }
                                                                else if (Model.OrderType == "LumSum")
                                                                {
                                                                    <td style="text-align:center;width:10px;font-size:smaller;">LumSum</td>
                                                                }
                                                                else if (Model.OrderType == "Perc")
                                                                {
                                                                    <td style="text-align:center;width:10px;font-size:smaller;">Percentage</td>
                                                                }
                                                                <td style="text-align:center;width:10px;font-size:smaller;">PO No.</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">PO Date</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">PO Validity</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">PO Amount</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">SAP No</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">SAP Eff.Date</td>
                                                                <td style="text-align:center;width:10px;font-size:smaller;">&nbsp;</td>
                                                            </tr>


                                                            @foreach (var item in Model.lstAddMandays)
                                                            {

                                                                <tr style="background-color:white">
                                                                    <input type="hidden" id="PK_ADDPOID" name="PK_ADDPOID" value="@item.PK_ADDPOID" />
                                                                    <td style="text-align:center;width:20px;font-size:smaller;">@Model.OrderType</td>
                                                                    <td style="text-align:center;width:35px;font-size:smaller;">@item.Add_PoReason</td>
                                                                    <td style="text-align:center;width:40px;font-size:smaller;">@item.Add_MandayDesc</td>


                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_Mandays</span>
                                                                        <input type="text" value="@item.Add_Mandays" id="Add_Mandays" name="Add_Mandays" style="display:none;text-align:center;width:100%;font-size:smaller;" />
                                                                    </td>

                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_PoNumber</span>
                                                                        <input type="text" value="@item.Add_PoNumber" id="Add_PoNumber" name="Add_PoNumber" style="display:none;text-align:center;width:100%;font-size:smaller;" />
                                                                    </td>

                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_PoDate</span>
                                                                        <input type="text" value="@item.Add_PoDate" id="@("Add_PoDate"+@item.PK_ADDPOID)" name="Add_PoDate" style="display:none;text-align:center;width:100%;font-size:smaller;" class="PoDate" />
                                                                    </td>

                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_PoValidity</span>
                                                                        <input type="text" value="@item.Add_PoValidity" id="@("Add_PoValidity"+@item.PK_ADDPOID)" name="Add_PoValidity" style="display:none;text-align:center;width:100%;font-size:smaller;" class="PoDate" />
                                                                    </td>


                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_POAmt</span>
                                                                        <input type="text" value="@item.Add_POAmt" id="Add_POAmt" name="Add_POAmt" style="display:none;text-align:center;width:100%;font-size:smaller;" />
                                                                    </td>
                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_SAPNumber</span>
                                                                        <input type="text" value="@item.Add_SAPNumber" id="Add_SAPNumber" name="Add_SAPNumber" style="display:none;text-align:center;width:100%;font-size:smaller;" ,maxlength="10" onkeypress="return isNumberKey(event);" />
                                                                    </td>
                                                                    <td style="text-align:center;width:20px;font-size:smaller;">
                                                                        <span>@item.Add_SAPDate</span>
                                                                        <input type="text" value="@item.Add_SAPDate" id="@("Add_SAPDate"+@item.PK_ADDPOID)" name="Add_SAPDate" style="display:none;text-align:center;width:100%;font-size:small;" class="PoDate" />
                                                                    </td>
                                                                    @if ((Convert.ToDateTime(@item.CreatedDate).AddDays(7) >= DateTime.Now) && (cntAddMandays == Model.lstAddMandays.Count - 1))
                                                                    {
                                                                        <td style="text-align:center;width:10px;font-size:smaller;">
                                                                            <a class="Edit" href="javascript:;">Edit</a>
                                                                            <a class="Update" href="javascript:;" style="display:none">Update</a>
                                                                            <a class="Cancel" href="javascript:;" style="display:none">Cancel</a>
                                                                            @*<a class="Delete" href="javascript:;">Delete</a>*@
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td>&nbsp;</td>
                                                                    }
                                                                </tr>
                                                                cntAddMandays = cntAddMandays + 1;
                                                            }

                                                            <tr>
                                                                @if (Model.JObBlock != "YES")
                                                                {

                                                                    <td style="text-align:center;font-size:smaller;" colspan="12">

                                                                        @*<button type="button" id="btnAddMandays" onclick="javascript:DisplayTable();" class="btn btn-default insert-form-btn">Modify</button>*@
                                                                        <input type="button" onclick="javascript:DisplayTable();" value="Revise WorkOrder" id="btnAddMandays">
                                                                    </td>

                                                                }
                                                                else
                                                                {
                                                                    if (Session["RoleID"].ToString() == "36")
                                                                    {
                                                                        <td style="text-align:center;font-size:smaller;" colspan="12">

                                                                            @*<button type="button" id="btnAddMandays" onclick="javascript:DisplayTable();" class="btn btn-default insert-form-btn">Modify</button>*@
                                                                            <input type="button" onclick="javascript:DisplayTable();" value="Revise WorkOrder" id="btnAddMandays">
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td style="text-align:center;font-size:smaller;" colspan="12"></td>
                                                                    }
                                                                }
                                                            </tr>
                                                        </table><br /> <br />
                                                    </div>
                                                        <div id="divdisplaytable" style="display:none">
                                                            <table id="displaytable" cellspacing="0" cellpadding="3" border="1" style="width: 100%;overflow-y:auto;margin-left: auto;margin-right: auto;">
                                                                <tr style="background-color:lightgray">
                                                                    <td width="10%" style="text-align:center;">
                                                                        Type Of Order
                                                                    </td>
                                                                    <td width="20%" style="text-align:center;">
                                                                        Reason
                                                                    </td>
                                                                    <td width="35%" style="text-align:center;">
                                                                        Description of Reason
                                                                    </td>
                                                                    <td width="10%" style="text-align:center;">
                                                                        Mandays/Manmonth/ManHrs
                                                                    </td>

                                                                </tr>

                                                                <tr>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.OrderType, new { @placeholder = Model.OrderType, @class = "form-control  Add_Mandays", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @if (Model.POAwaited == true)
                                                                        {
                                                                            @Html.DropDownListFor(m => m.Add_PoReason, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="Select Type of Reason", Value = "" },

                                                                                    new SelectListItem{ Text="Receipt of PO", Value = "PORECT"} ,
                                                                                },
                                                                                new { @class = "form-control COrderType", @id = "ddlTypeofReason", @onchange = "onchangeddlStatus(this.value,document.getElementById('OrderType').value);" })
                                                                        }
                                                                        else
                                                                        {
                                                                            if (Model.OrderType.ToUpper() == "MANMONTH")
                                                                            {
                                                                                @Html.DropDownListFor(m => m.Add_PoReason, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="Select Type of Reason", Value = "" },
                                                                                    new SelectListItem{ Text="PO Ammendment", Value = "POAMD"} ,
                                                                                    new SelectListItem{ Text="PO Validity Extension", Value = "POVALID"},
                                                                                    new SelectListItem{ Text="Manmonth Correction", Value = "MANDAYCOR"},
                                                                                    new SelectListItem{ Text="Sales Order Update", Value = "SAPUPDATE"},

                                                                                },
                                                                                new { @class = "form-control COrderType", @id = "ddlTypeofReason", @onchange = "onchangeddlStatus(this.value,document.getElementById('OrderType').value);" })
                                                                            }
                                                                            else if (Model.OrderType.ToUpper() == "MANHR")
                                                                            {
                                                                                @Html.DropDownListFor(m => m.Add_PoReason, new List<SelectListItem>
                                                                                            {
                                                                                                new SelectListItem{ Text="Select Type of Reason", Value = "" },
                                                                                                new SelectListItem{ Text="PO Ammendment", Value = "POAMD"} ,
                                                                                                new SelectListItem{ Text="PO Validity Extension", Value = "POVALID"},
                                                                                                new SelectListItem{ Text="ManHours Correction", Value = "MANDAYCOR"},
                                                                                                new SelectListItem{ Text="Sales Order Update", Value = "SAPUPDATE"},/*vaibhav*/

                                                                                            },
                                                                                            new { @class = "form-control COrderType", @id = "ddlTypeofReason", @onchange = "onchangeddlStatus(this.value,document.getElementById('OrderType').value);" })
                                                                            }
                                                                            else
                                                                            {

                                                                                @Html.DropDownListFor(m => m.Add_PoReason, new List<SelectListItem>
                                                                                            {
                                                                                                new SelectListItem{ Text="Select Type of Reason", Value = "" },
                                                                                                new SelectListItem{ Text="PO Ammendment", Value = "POAMD"} ,
                                                                                                new SelectListItem{ Text="PO Validity Extension", Value = "POVALID"},
                                                                                                new SelectListItem{ Text="Mandays Correction", Value = "MANDAYCOR"},
                                                                                                new SelectListItem{ Text="Sales Order Update", Value = "SAPUPDATE"},

                                                                                            },
                                                                                                     new { @class = "form-control COrderType", @id = "ddlTypeofReason", @onchange = "onchangeddlStatus(this.value,document.getElementById('OrderType').value);" })
                                                                            }
                                                                        }

                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Add_MandayDesc, new { @placeholder = "Description", @class = "form-control Description", autocomplete = "off", @id = "UAddDescription" })
                                                                        @Html.ValidationMessageFor(model => model.Add_MandayDesc, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Add_Mandays, new { @placeholder = Model.OrderType, @class = "form-control PO Number", autocomplete = "off", @id = "UAdd_Mandays", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Add_Mandays, "", new { @class = "text-danger validation-msg" })
                                                                    </td>


                                                                </tr>


                                                            </table>

                                                        </div><br /><br />
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <div class="form-group" id="divPOAttach" style="display:none;">
                                                                    <label><i class="fa fa-paperclip" style="color:black;"></i>Additional PO Attachments: </label><br />
                                                                    <span style="color:#E12F24;">
                                                                        <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                                    </span>
                                                                    <span>
                                                                        1) Attach Purchase order copies, order acceptance communications in PDF format.<br />
                                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2) These attachments will not be visible to Inspector on their call page.
                                                                    </span>
                                                                    <input type="file" class="filepond" name="FileUpload2" id="FileUpload2" multiple>
                                                                    <input hidden="hidden" id="FileUpload2" name="FileUpload2" class="hidden" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div id="divPOtable" style="display:none;width:150%">
                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label>PO Number:</label>
                                                                        @Html.TextBoxFor(model => model.Add_PoNumber, new { @placeholder = "PO Number", @class = "form-control  Add_PoNumbers", @id = "UAdd_PoNumber" })
                                                                        @Html.ValidationMessageFor(model => model.Add_PoNumber, "", new { @class = "text-danger validation-msg" })
                                                                    </div>
                                                                </div>


                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label>PO Date:</label>
                                                                        @Html.TextBoxFor(model => model.Add_PoDate, "{0:dd MMM yyyy}", htmlAttributes: new { @placeholder = "Add Po Date", @class = "form-control PoDate ", autocomplete = "off", @id = "UAdd_PoDate", @name = "UAdd_PoDate" })
                                                                        @*@Html.ValidationMessageFor(model => model.Add_PoDate, "", new { @class = "text-danger validation-msg" })*@
                                                                    </div>
                                                                </div>


                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label>PO Validity:</label>
                                                                        @Html.TextBoxFor(model => model.Add_PoValidity, "{0:dd MMM yyyy}", htmlAttributes: new { @placeholder = "Add PO Validity", @class = "form-control PoDate ", autocomplete = "off", @id = "UAdd_PoValidity", @name = "UAdd_PoValidity" })
                                                                        @*@Html.ValidationMessageFor(model => model.Add_PoValidity, "", new { @class = "text-danger validation-msg" })*@
                                                                    </div>
                                                                </div>


                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label> PO Amount:</label>
                                                                        @Html.TextBoxFor(model => model.Add_POAmt, new { @placeholder = "PO Amount", @class = "form-control PO Amount", autocomplete = "off", @id = "UAdd_POAmt" })
                                                                        @Html.ValidationMessageFor(model => model.Add_POAmt, "", new { @class = "text-danger validation-msg" })
                                                                    </div>
                                                                </div>


                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div id="divSAPtable" style="display:none;width:150%">
                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label>SAP Number:</label>
                                                                        @Html.TextBoxFor(model => model.Add_SAPNumber, new { @placeholder = "SAP Number", @class = "form-control  Add_SAPNumber", @id = "UAdd_SAPNumber", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Add_SAPNumber, "", new { @class = "text-danger validation-msg" })
                                                                    </div>
                                                                </div>


                                                                <div class="col-xs-12 col-sm-2">
                                                                    <div class="form-group">
                                                                        <label>Date Applicable from:</label>
                                                                        @Html.TextBoxFor(model => model.Add_SAPDate, "{0:dd MMM yyyy}", htmlAttributes: new { @placeholder = "Add SAP Date", @class = "form-control PoDate ", autocomplete = "off", @id = "UAdd_SAPDate", @name = "UAdd_SAPDate" })

                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div id="divPOSave" style="display:none;">
                                                                <div class="col-xs-12 col-sm-12">
                                                                    <div class="form-group">
                                                                        <input type="button" id="btnSubmit" value="Save">
                                                                    </div>
                                                                </div>
                                                            </div>


                                                        </div>
                                                }
                                                @if (Model.PK_JOB_ID != 0)
                                                {
                                                    <table width="105%" align="center">
                                                        <tr>
                                                            <td width="42%">
                                                                <table class="display dataTable no-footer" style="overflow-y:auto;" id="MandaySummaryTable">
                                                                    <tr style="background-color:lightgray">
                                                                        <td colspan="4" style="text-align:center"><b>Mandays Summary</b></td>
                                                                    </tr>
                                                                    <tr style="background-color:#f0f0f0">
                                                                        <td style="text-align:center;width:50px;">PO</td>
                                                                        <td style="text-align:center;width:50px;">Estimated</td>
                                                                        <td style="text-align:center;width:50px;">Consumed</td>
                                                                        <td style="text-align:center;width:50px;">Remaining</td>
                                                                    </tr>

                                                                    <tr style="background-color:white">
                                                                        <td style="text-align:center;width:50px;">@Model.POMandays</td>
                                                                        <td style="text-align:center;width:50px;">@Model.ProposedCall</td>
                                                                        <td style="text-align:center;width:50px;">@Model.Consume</td>
                                                                        <td style="text-align:center;width:50px;">@Model.Remaining</td>
                                                                    </tr>

                                                                    @Html.HiddenFor(m => m.Consume)
                                                                    @Html.HiddenFor(m => m.Remaining)
                                                                    @Html.HiddenFor(m => m.ProposedCall)


                                                                </table>
                                                            </td>
                                                            <td width="2%">&nbsp;</td>
                                                            <td width="70%">
                                                                @if (Model.lstCallSummary != null)
                                                                {
                                                                    <table class="display dataTable no-footer" style="overflow-y:auto" id="CallSummaryTable">
                                                                        <tr style="background-color:lightgray">
                                                                            <td colspan="6" style="text-align:center"><b>Call Summary</b></td>
                                                                        </tr>
                                                                        <tr style="background-color:#f0f0f0">
                                                                            <td style="text-align:center;width:20px;">Assigned</td>
                                                                            <td style="text-align:center;width:20px;">Open</td>
                                                                            <td style="text-align:center;width:20px;">Closed</td>
                                                                            <td style="text-align:center;width:20px;">Not Done</td>
                                                                            <td style="text-align:center;width:22px;">Cancelled</td>
                                                                            <td style="text-align:center;width:20px;">Total</td>
                                                                        </tr>
                                                                        @foreach (var item in Model.lstCallSummary)
                                                                        {
                                                                            <tr style="background-color:white">
                                                                                <td style="text-align:center;width:20px;">@item.AssignedCalls</td>
                                                                                <td style="text-align:center;width:20px;">@item.OpenCalls</td>
                                                                                <td style="text-align:center;width:20px;">@item.ClosedCalls</td>
                                                                                <td style="text-align:center;width:20px;">@item.NotDoneCalls</td>
                                                                                <td style="text-align:center;width:20px;">@item.CancelledCalls</td>
                                                                                <td style="text-align:center;width:20px;">@item.TotalCalls</td>
                                                                            </tr>
                                                                        }
                                                                    </table>
                                                                }
                                                            </td>

                                                        </tr>

                                                    </table>


                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <hr class="custom-hr1">
                                                            </div>
                                                        </div>
                                                }



                                            </form>

                                        </div>
                                    </div>
                                </div><!-- /.row -->

                                <div class="row">
                                    <hr>
                                    <!-- /.row -->

                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <h2 class="dynamic-page-title dynamic-page-title-2"><i class="fa fa-address-book"></i>List of Sub-Job</h2>

                                        @if (Model != null)
                                        {

                                            if (Model.JObBlock != "YES")
                                            {


                                                <button type="button" class="btn btn-info classAdd" style="margin-top:0px;margin-left: 492px;" id="btnsubjobbulk">Add Bulk Sub-job</button>
                                                <a href="@Url.Action("CreatSubJob", "SubJobMaster", new { @PK_JOB_ID = Model.PK_JOB_ID })" class="btn btn-info dynamic-function-btn dynamic-function-btn-2"><i class="fa fa-plus-circle"></i> Add New Sub-Job</a>
                                            }
                                            else
                                            {

                                            }
                                        }


                                    </div>



                                    <div class="col-xs-12">
                                        <div class="row">

                                            <div id="excelDataModal" style="overflow-x:auto; margin-left: 125px;margin-right: 116px; height: 500px">
                                                <span style="color:#E12F24;">
                                                    <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                </span>
                                                <span>
                                                    1) <span style="color:#ff0000;">*</span> - <b>Mandatory</b>

                                                </span>

                                                <br>

                                                <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 350%;">
                                                    <thead>
                                                        <tr style="background-color:#104193;color:white;">
                                                            <td style="border: 1px solid black;">Action</td>
                                                            <td style="border: 1px solid black;width:200px;" class="hidden"></td>
                                                            <td style="border: 1px solid black;width:200px;">Vendor Name<span style="color:#ff0000;">*</span></td>
                                                            <td style="border: 1px solid black;width:200px;">PO No. (Client PO on Vendor) :<span style="color:#ff0000;">*</span></td>
                                                            <td style="border: 1px solid black;width:200px;">PO Date<span style="color:#ff0000;">*</span></td>
                                                            <td style="border: 1px solid black;width:200px;">Attachment</td>
                                                            <td style="border: 1px solid black;width:200px;">Vendor Address<span style="color:#ff0000;">*</span></td>
                                                            <td style="border: 1px solid black;width:900px;">Vendor Contact Details</td>
                                                            <td style="border: 1px solid black;width:200px;">All Vendor Contact Details</td>
                                                            <td style="border: 1px solid black;width:200px;">Vendor Email Id</td>




                                                            <td style="border: 1px solid black;width:200px;">End_User</td>
                                                            <td style="border: 1px solid black;width:200px;">Project_Name</td>
                                                            <td style="border: 1px solid black;width:200px;">DECName</td>
                                                            <td style="border: 1px solid black;width:200px;">DECNumber</td>
                                                            <td style="border: 1px solid black;width:200px;">PO Amount (INR) - Mandatory for % Job:</td>
                                                            @*<td style="border: 1px solid black;width:200px;">Type</td>*@
                                                            @*<td style="border: 1px solid black;width:200px;">Control Number</td>*@


                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>




                                                </table>



                                            </div>
                                            <div class="col-xs-12 text-center">
                                                <button type="button" class="btn btn-primary" id="saveButton" onclick="SaveUploadFileData()">Save</button>




                                            </div>

                                        </div>



                                    </div>

                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">



                                        <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                                            <tr>
                                                <td>
                                                    @(Html
                                .Grid(Model.lstSubJob)
                                .Build(columns =>
                                {


                                    columns.Add(c => c.Type).Titled("Sub-Job No").RenderedAs(c => CustomRenderingOfColumn1(c)).Sortable(true);
                                    //columns.Add(c => c.SubSubJob_No).Titled("Sub-SubJob No");
                                    columns.Add(c => c.V1).Titled("Vendor Name");
                                    columns.Add(c => c.V2).Titled("Sub Vendor Name");
                                    columns.Add(c => c.V3).Titled("Sub Sub Vendor Name");
                                    columns.Add(c => c.Company_Name).Titled("Customer Name");
                                    //columns.Add(c => c.Vendor_Po_No).Titled("Vendor Po No");
                                    columns.Add(c => c.P1).Titled("Customer PO No on Vendor");
                                    columns.Add(c => c.P2).Titled("Vendor PO No on Sub Vendor");
                                    columns.Add(c => c.P3).Titled("Vendor PO No on Sub Sub Vendor");
                                    //columns.Add(c => c.Date_of_Po).Titled("Po Date");
                                    columns.Add(c => c.Status).Titled("Order Status");


                                    columns.Add(c => c.PK_JOB_ID).Titled("Control Number").RenderedAs(c => CustomRenderingOfColumn2(c)).Sortable(true);

                                })
                                .Pageable(pager =>
                                {

                                    pager.ShowPageSizes = true;
                                    pager.PagesToDisplay = 3;
                                    pager.CurrentPage = 1;
                                    pager.RowsPerPage = 2;
                                })
                                .UsingFilterMode(GridFilterMode.Row)
                                .Empty("No Data Found")
                                .Filterable()
                                .Sortable()

                                                    )


                                                </td>
                                            </tr>
                                        </table>

                                        <hr>
                                    </div><!-- /.data table col -->
                                </div>

                            </div><!-- /.box-shadow -->
                        </div><!-- /.col -->

                    </div><!-- /.row -->
            </div><!-- /.col -->



        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
    <!--End of header-->

</div>
<!--End of main content 3-->
<!-- Modal -->
<div class="modal fade bs-example-modal-lg modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Contract Review List</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">
                                @*<label>Contact Name:</label>*@
                                <ul type="checkbox" id="checkAll">
                                    @foreach (var item in ViewBag.CostSheet as IEnumerable<TuvVision.Models.JobMasters>)
                                    {


                                        @*<li>*@
                                        <p style="margin:0">
                                            @Html.CheckBoxFor(model => model.LCheckList[j].chkbox, new { @placeholder = "Heading", @class = "chkCheckBoxId", id = "myCheckbox1", @value = item.CheckListId, name = "programming" })

                                            @item.CheckListName
                                        </p>
                                        @*</li>*@

                                        j++;
                                    }
                                    <p style="margin:0">
                                        <input type="checkbox" id="selectAll" onclick="toggleCheckboxes(this)" />
                                        <label for="selectAll">Select All</label>
                                    </p>
                                </ul>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">
                                @*<textarea rows="3" style="color:red;" class="form-control" placeholder="Type your Comments..."></textarea>*@
                                @Html.TextAreaFor(model => model.CheckListDescription, new { placeholder = "Comment", @class = "form-control form-control-custom", id = "EnqCheckListDescription", @rows = 3 })
                            </div>
                        </div>
                    </div>



                    <div class="row">
                        <div class="col-xs-12 text-center">
                            @*<button type="button" class="btn btn-default insert-form-btn" id="btnAddNewContact" title="Add New Contact"><i class="fa fa-plus-circle"></i> Save</button>*@
                            <button type="button" class="btn btn-default insert-form-btn" onclick="fncModalSave();" title="Add New Contact"><i class="fa fa-plus-circle"></i> Save</button>

                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>


    </div>
</div>
<!-- Modal -->

<!--added by shrutika salve 18112023 -->
<!-- Modal -->
<div class="modal fade bs-example-modal-lg modal fade" id="AddNewContactDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #3677e6;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>



            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12">

                            <span style="color:#E12F24;">
                                <strong>Notes </strong> :
                            </span> 1) <span style="color:#ff0000;">*</span> - Mandatory.<br /><br />

                        </div>

                        <div class="col-xs-12">
                            <hr class="custom-hr1">
                        </div>

                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Contact Person name:<span style="color:#ff0000;">*</span></label>
                                @Html.TextBoxFor(model => model.ContactNames, new { @placeholder = "Contact Name Here", @class = "form-control" })
                                @*@Html.ValidationMessageFor(model => model.ContactNames, "", new { @class = "text-danger" })*@

                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4 hidden">

                            <div class="form-group">
                                <label>Company name:</label>

                                @if (Model != null)
                                {
                                    if (ViewBag.ContactCompanyName != null)
                                    {
                                        @Html.DropDownListFor(model => model.ContactCompanyName, new SelectList(@ViewBag.ContactCompanyName, "Code", "Name"), "---Select Company---", new { @id = "ddlContactCompanyname", @class = "form-control" })
                                    }
                                }
                                else
                                {
                                    if (ViewBag.ContactCompanyName != null)
                                    {
                                        @Html.DropDownListFor(model => model.ContactCompanyName, new SelectList(@ViewBag.ContactCompanyName, "Code", "Name"), new { @id = "ddlContactCompanyname", @class = "form-control" })
                                    }

                                }
                            </div>
                            @Html.Hidden("hidCompany")
                        </div>

                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Designation:<span style="color:#ff0000;">*</span></label>

                                @Html.TextBoxFor(model => model.TitleName, new { @placeholder = "Designation", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TitleName, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Email Id:<span style="color:#ff0000;">*</span></label>

                                @Html.TextBoxFor(model => model.Email, new { @placeholder = "Email Here", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Landline number:</label>
                                @*<input type="text" class="form-control" placeholder="Home Phone Here">*@
                                @Html.TextBoxFor(model => model.HomePhone, new { @placeholder = "Landline Number Here", @class = "form-control" })
                                @*@Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Mobile number:<span style="color:#ff0000;">*</span></label>
                                @*<input type="text" class="form-control" placeholder="Mobile Here">*@
                                @Html.TextBoxFor(model => model.Mobile, new { @placeholder = "Mobile Number Here", @class = "form-control" })
                                @*@Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Fax number:</label>
                                @Html.TextBoxFor(model => model.Fax_No, new { @placeholder = "Enter Fax Number", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Fax_No, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                @*<label>Primary Contact :</label>*@
                                @if (Model != null)
                                {
                                    if (Model.IsMainContact == true)
                                    {
                                        <div>
                                            <label>
                                                <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" checked="checked" />Primary Contact
                                            </label>
                                        </div>
                                    }
                                    else if (Model.IsMainContact == false)
                                    {
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" />Primary Contact
                                            </label>
                                        </div>
                                    }

                                }
                                else
                                {
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" /> Primary Contact
                                            <input name="IsMainContact" type="hidden" value="false" />
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>


                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Status:<span style="color:#ff0000;">*</span></label>

                                @Html.DropDownListFor(m => m.ContactStatus, new List<SelectListItem>
                                                                                     {
                                                                                         new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                         new SelectListItem{ Text="Active", Value = "Active" },
                                                                                         new SelectListItem{ Text="In-Active", Value = "In-Active" },



                                                                                        }, new { @class = "form-control", @id = "PT" })

                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-4">

                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <label>Address:<span style="color:#ff0000;">*</span></label>
                                @Html.DropDownListFor(model => model.Address, new SelectList(Enumerable.Empty<SelectListItem>(), "--Select Company Address--", "--Select Company Address--"), "--Select Company Address--", new { @id = "ddlCaddr", @class = "form-control" })

                            </div>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col-xs-12 text-center">
                            <button type="button" class="btn btn-default insert-form-btn " id="btnAddNewContact" title="Add New Contact"><i class="fa fa-plus-circle"></i> Add Contact</button>
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal" id="btncosenew">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>


    </div>
</div>
<!-- END Modal -->

<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Subjob Creation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="confirmationMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmButton">Yes</button>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        debugger;
        Bind_EmailID();
        $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });




        var CheckListId = $("#CheckListId").val();
        //  var CheckListDescription = $("#CheckListDescription").val();



        var taskAssignTo = CheckListId;
        var userArray = new Array();
        userArray = taskAssignTo.split(",");
        debugger;
        $('.chkCheckBoxId').each(function (index, obj) {
            var val1 = $(this).val();
            if (userArray.includes(val1)) {

                var b = $(this).attr('name');
                var c = $("input[name='" + b + "']").prop('checked', true);
                $("input[name='" + b + "']").prop('checked', true);


            }
        });
    });
    //Added By Satish Pawar on 10 May 2023


    $('#chkChkAll').click(function (e) {
        var table = $(e.target).closest('table');
        $('td input:checkbox', table).prop('checked', this.checked);
    });

    //$("#btnGet").click(function () {
    //    var message = "";
    //    var Email_IDs = "";
    //    var i = 0;
    //    //Loop through all checked CheckBoxes in GridView.
    //    $("#tblBody input[type=checkbox]:checked").each(function () {
    //        i++;
    //        var row = $(this).closest("tr")[0];
    //        //message += row.cells[1].innerHTML;
    //        message += i + "_" + row.cells[2].innerHTML;
    //        message += " ";
    //        Email_IDs += "; " + row.cells[2].innerHTML;

    //    });

    //    var splittedString = message.split(" ");
    //    //=====================================================
    //    const swalWithBootstrapButtons = Swal.mixin({
    //        customClass: {
    //            confirmButton: 'btn btn-success',
    //            cancelButton: 'btn btn-danger'
    //        },
    //        buttonsStyling: false
    //    })

    //    swalWithBootstrapButtons.fire({
    //        title: 'Do you want to Send Email To',
    //        text: splittedString,
    //        icon: 'warning',
    //        showCancelButton: true,
    //        confirmButtonText: 'Yes, Send it!',
    //        cancelButtonText: 'No, cancel!',
    //        reverseButtons: true
    //    }).then((result) => {
    //        if (result.isConfirmed) {
    //            SaveFeedbackEmail(Email_IDs.substring(1));
    //            swalWithBootstrapButtons.fire(
    //              'Send!',
    //              'Feedback Link has been Send.',
    //              'success'
    //            )
    //            Bind_EmailID();
    //        } else if (
    //            /* Read more about handling dismissals below */
    //          result.dismiss === Swal.DismissReason.cancel
    //        ) {
    //            swalWithBootstrapButtons.fire(
    //              'Cancelled',
    //              '',
    //              'error'
    //            )
    //        }
    //    })


    //});

    $("#btnGet").click(function () {
        debugger;
        var message = "";
        var Email_IDs = "";
        var pk_userid = "";
        var i = 0;
        //Loop through all checked CheckBoxes in GridView.
        $("#tblBody input[type=checkbox]:checked").each(function () {
            i++;
            var row = $(this).closest("tr")[0];
            //message += row.cells[1].innerHTML;
            message += i + "_" + row.cells[2].innerHTML;
            message += " ";
            Email_IDs += "; " + row.cells[2].innerHTML;
            //added by shrutika salve 20122023
            pk_userid += ";" + row.cells[4].innerHTML;
        });

        var splittedString = message.split(" ");
        //=====================================================
        if (confirm('Do you want to send email to ' + splittedString.join(', ') + '?')) {
            SaveFeedbackEmail(Email_IDs.substring(1), pk_userid.substring(1));
            alert('Feedback Link has been sent.');
            Bind_EmailID();
        } else {
            alert('Cancelled');
        }
    });



    $("#lnkNewContact").click(function () {
        debugger;
        //Bind_EmailID();
        if ($("#Client_Name").val() != "") {
            var Address = {};
            var cmp_id='@Model.CMP_ID';
            //var Company_Name = $("#Client_Name").val();
            var Company_Name = $("#CMP_ID").val();

            $("#hidCompany").val(Company_Name);
            Address.url = '@Url.Action("GetAddressOfCompany", "CompanyMasters")';
            Address.type = "Get";
            Address.data = { Company_Name: Company_Name };
            Address.datatype = "json";
            Address.ContentType = "application/json";
            Address.success = function (response) {
                $('#ddlCaddr').empty();

                var s = '<option value="-1">--Select Address--</option>';
                for (var i = 0; i < response.length; i++) {
                    s += '<option value="' + response[i].Name + '">' + response[i].Name + '</option>';

                }
                $("#ddlCaddr").html(s);
            };
            Address.error = function () {
                alert("Error in Getting Address !");
            };
            $.ajax(Address);
        }
        else {
            $("#ddlCaddr").empty();
            $("#ddlCaddr").prop("disabled", true);
        }
    });

    $("#btnAddNewContact").on('click', function () {
        debugger
        var testcompanynameparam = $('#Client_Name').val();

        var ContactNames = $("#ContactNames").val();
        var ddlContactCompanyName = ContactNames;
        var ddlCompanyName = testcompanynameparam;

        var HomePhoneNo = $("#HomePhone").val();
        var MobileNo = $("#Mobile").val();

        var MainContact = $('#IsMainContact').is(':checked');
        var CompanyName = $('#hidCompany').val();
        var Address = $("#ddlCaddr option:selected").val();
        var Email = $("#Email").val();
        var Fax_No = $("#Fax_No").val();
        var TitleName = $("#TitleName").val();
        var ContactStatus = $("#PT").val();


        //**************************************************************************
        if ($("#ContactNames").val() == "" || $("#ContactNames").val() == null) {
            alert("Please Enter Contact Name!!!");
            $("#ContactNames").focus()
            return false;
        }
        else if (ddlCompanyName == 0 || ddlCompanyName == null) {
            alert("Please Select Company Name !!!");
            $("#ContactCompanyName").focus()
            return false;
        }
        else if (TitleName == "" || TitleName == null) {
            alert("Enter Designation !!!");
            $("#TitleName").focus()
            return false;
        }
        else if (Email == "" || Email == null) {
            alert("Enter Email !!!");
            $("#Email").focus()
            return false;
        }
        else if (MobileNo == "" || MobileNo == null) {
            alert("Enter Mobile !!!");
            $("#Mobile").focus()
            return false;
        }
        else if (ContactStatus == "" || ContactStatus == null) {
            alert("Enter Status !!!");
            $("#PT").focus()
            return false;
        }
        else {
            var ContactDetails =
                {
                    ContactNames: ContactNames,
                    ContactCompanyName: ddlContactCompanyName,
                    CompanyName: testcompanynameparam,
                    HomePhone: HomePhoneNo,
                    Mobile: MobileNo,
                    IsMainContact: MainContact,
                    Address: Address,
                    Email: Email,
                    Fax_No: Fax_No,
                    TitleName: TitleName,
                    ContactStatus: ContactStatus
                }
            $.ajax({
                type: 'POST',
                data: JSON.stringify({ ECM: ContactDetails }),
                url: '@Url.Action("ContactDetails", "EnquiryMaster")',
                dataType: 'json',
                Async: false,
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {

                    if (response.success == 1) {
                        alert("Contact Saved Successfully!!!")

                        $('#AddNewContactDetails').modal('hide');
                        //Bind_EmailID();
                        //showMessage();

                    }
                    else if (response.success == 2) {

                        alert("Duplicate Contact detail Or !!Failed!!! Something Went Wrong!!! Please Try Again....")
                        //Bind_EmailID();
                        $('#AddNewContactDetails').modal('hide');
                        //showMessage();

                    }
                    Bind_EmailID();

                }
            });
        }
    });

    function SaveFeedbackEmail(Email_IDs, pk_userid) {
        var JobNo = $("#Job_Number").val();
        var Company_Name = $("#Client_Name").val();
        var Data = [];
        var item = {};
        item["JobNo"] = JobNo;
        item["Email_IDs"] = Email_IDs;
        item["Company_Name"] = Company_Name;
        //added by shrutika salve 20122023
        item["pk_userid"] = pk_userid;

        Data.push(item);
        var Data1 = JSON.stringify(Data);
        $.ajax({
            type: "GET",
            //url: "../JobMaster/Save_EmailIdOfFeedback",
            url: '@Url.Action("Save_EmailIdOfFeedback", "JobMaster")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            traditional: true,
            //data: {
            //    JobNo: JobNo,
            //    Email_IDs: Email_IDs,
            //    Company_Name: Company_Name
            //},
            data: { myArray: Data1 },
            success: function (response) {
                var result = JSON.parse(response);

                if (result == "Error") {
                    Swal.fire({
                        icon: 'error',
                        //title: 'Oops...',
                        text: 'Something Went Wrong....'
                    });
                }
                else {
                    // window.sessionStorage.setItem('StageQuestionData', result);
                }

            },
            error: function (xhr, status, error) {
                // Code to handle errors goes here
            }
        });

    }


    function Bind_EmailID() {
        var Company_Name = $("#Client_Name").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetEmailIdOfCompany", "CompanyMasters")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            traditional: true,
            //data: { Company_Name: "SECAN INVESTCAST (INDIA) PVT LTD(13649)" },
            data: { Company_Name: Company_Name },
            success: function (response) {
                $('#tblBody').empty();
                var result = JSON.parse(response);
                if (result == "Error") {
                    Swal.fire({
                        icon: 'error',
                        //title: 'Oops...',
                        text: 'Something Went Wrong....'
                    });
                }
                else {
                    //alert(result.Table[0].Email);
                    $("#lblEmailSendOn").text(result.Table1[0].Column1);


                    debugger;

                    //tr = $('<tr style="border:1px solid; background:#001ED2;">');
                    //tr.append("<th style='width: 13%;'><input type='checkbox' id='chkChkAll' /> &nbsp; &nbsp; <label> Check All</label></th>");
                    //tr.append("<th>Name</th>");
                    //tr.append("<th>EmailID</th>");
                    //tr.append("</tr>");
                    //$('#tbl').append(tr);

                    for (var i = 0; i < result.Table.length; i++) {
                        if (checkEmail($.trim(result.Table[i].Email))) {
                            tr = $('<tr/>');
                            tr.append("<td style='text-align: center;'><input type='checkbox' /></td>");
                            tr.append("<td>" + result.Table[i].ContactName + "</td>");
                            tr.append("<td>" + result.Table[i].Email + "</td>");
                            tr.append("<td>" + result.Table[i].Title + "</td>");
                            //added by shrutika salve 20122023
                            tr.append("<td class='hide'>" + result.Table[i].ID + "</td>");
                            $('#tblBody').append(tr);
                        }
                    }
                }
            },
            error: function (xhr, status, error) {
                // Code to handle errors goes here
            }
        });
    }


</script>
<script type="text/javascript">

    function checkEmail(email) {
        var emailRegex = /^[^\s]+[^\s]+\.[^\s]+$/;
        return emailRegex.test(email);
    }
</script>

<!--Added By Satish Pawar -->
<script>

    $('#HomePhone').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#HomePhone').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });

    $('#Mobile').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#Mobile').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });


</script>



<script type="text/javascript">
    $(function () {


        $('#myModal').on('show.bs.modal', function (e) {
            debugger;
            var button = $(e.relatedTarget)
            var PK = button.data('status1')
            //$(e.currentTarget).find('#EnqCheckListDescription').val(PK);


            if (PK != undefined) {
                $(e.currentTarget).find('#EnqCheckListDescription').val(PK);
            }
            else {

            }

            var CheckListId = $("#CheckListId").val();
            var CheckListDescription = $("#CheckListDescription").val();



            var taskAssignTo = CheckListId;
            var userArray = new Array();
            userArray = taskAssignTo.split(",");

            $('.chkCheckBoxId').each(function (index, obj) {



                var val1 = $(this).val();

                if (userArray.includes(val1)) {

                    var b = $(this).attr('name');

                    var c = $("input[name='" + b + "']").prop('checked', true);
                    $("input[name='" + b + "']").prop('checked', true);








                }
            });

        });



    });
</script>

<script>
    //$("#btnjc").click(function myfunction() {
    //    if (validateform() == false) {
    //        return false;
    //    }
    //    else {
    //        $("#formjc").submit();
    //    }
    //});

    $("#btnjc").click(function myfunction(event) {
        event.preventDefault(); 
    
        if (validateform() == false) {
            return false;
        } 

        var SAP_No = $('#SAP_No').val();
    
        if (SAP_No != "") {
            SapCutomerValidation(SAP_No).then(function(isValid) {
                if (isValid == false) {
                    return false;  
                } else {
                    $("#formjc").submit(); 
                }
            }).catch(function(error) {
                //console.error("Error during SAP customer validation:", error);
                //alert("An error occurred during the validation process.");
            });
        } else {
            $("#formjc").submit();
        }
    });


    function validateform() {
        debugger;
        var DV = "1";
        var IV = "1";
        var PODate = $("#Customer_PoDate").val();
        var POAmount = $("#Customer_PO_Amount").val();
        var ValDate = $("#Po_Validity").val();
        var OrderType = $("#ddlOrderType").val();
        var Estimate_ManMonth = $("#Estimate_ManMonth").val();
        var Estimate_ManDays = $("#Estimate_ManDays").val();
        var SAP_No = $("#SAP_No").val();
        var PONo = $("#Customer_PoNo_PoDate").val();
        var PKJobNo = $("#PK_JOB_ID").val();
        var checkboxes = $('input.DCheckBox:checked').length;
        var filePath = $("[name='FileUpload']").val();
        var TermsCondition = $("#ddlTermsCondition").val(); //added by nikita on 19062024
        var Legalcomment = $("#Legalcomment").val(); //added by nikita on 19062024
        var JobCreated = $("#JobCreated_").prop("checked"); //added by nikita on 19062024
        //  alert(123);
        //  var varEnqCheckList = @Model.CheckListId; // $("#CheckListID").val();

        var varEnqCheckList = $("input[id='myCheckbox1']:checked").map(function () {
            return this.value;
        }).get().join(',');


        //    alert(varEnqCheckList);

        $("#CommaSeparatedCheckListId").val(varEnqCheckList);

        var varEnqCheckListD = $("#EnqCheckListDescription").val();
        $("#CheckListDescriptionN").val(varEnqCheckListD);


        if (PKJobNo == "0") {
            $('.trDomestic').each(function () {
                var trD = {};
                var OrderType = $(this).find('.COrderType').val();
                var OrderRate = $(this).find('.COrderRate').val();
                var Estimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth').val();
                var distance = $(this).find('.CDistance').val();

                var Dcurrency = $(this).find('.CDcurrency').val();
                var DExchangeRate = $(this).find('.CDExchangeRate').val();
                var DTotalAmount = $(this).find('.CDTotalAmount').val();


                if (OrderType == '') {
                    return DV = "2";
                }
                if (OrderRate == '') {
                    return DV = "2";
                }
                if (Estimate_ManDays_ManMonth == '') {
                    return DV = "2";
                }
                if (Dcurrency == '') {
                    return DV = "2";
                }
                if (DExchangeRate == '') {
                    return DV = "2";
                }
            })



            $('.trInternational').each(function () {

                var trI = {};



                if ($('.DCheckBox:checkbox:checked')) {
                    var IOrderType = $(this).find('.CIOrderType').val();
                    var IOrderRate = $(this).find('.CIOrderRate').val();
                    var IEstimate_ManDays_ManMonth = $(this).find('.CIEstimate_ManDays_ManMonth').val();
                    var Idistance = $(this).find('.CIDistance').val();
                    var Icurrency = $(this).find('.CIcurrency').val();
                    var IExchangeRate = $(this).find('.CIExchangeRate').val();
                    var ITotalAmount = $(this).find('.CITotalAmount').val();

                    if (IOrderType == '') {

                        return IV = "2";
                    }
                    if (IOrderRate == '') {
                        return IV = "2";
                    }
                    if (IEstimate_ManDays_ManMonth == '') {
                        return IV = "2";
                    }

                    if (Icurrency == '') {
                        return IV = "2";
                    }
                    if (IExchangeRate == '') {
                        return IV = "2";
                    }
                }

            })
        }






        var checkbox = "";
        if ($('#chkArc').prop('checked')) {
            checkbox = "1"
        }
        else {
            checkbox = "0"
        }

        var POAwaited = "";

        if ($('#chkAwaited').prop('checked')) {
            POAwaited = "1"
        }
        else {
            POAwaited = "0"
        }





        if (PKJobNo == "0") {
            if (POAwaited == "0") {
                if (filePath == "" || filePath == null) {
                    alert("Please attach file for the Purchase Order");
                    $("#FileUpload").focus();
                    return false;
                }

                if (!filePath.toUpperCase().includes(".PDF")) {
                    alert("Please attach PDF copy for the Purchase Order");
                    $("#FileUpload").focus();
                    return false;
                }
            }
            else {
                if (filePath == "" || filePath == null) {
                    alert("Attach Offer acceptance communication in PDF Format");
                    $("#FileUpload").focus();
                    return false;
                }

                if (!filePath.toUpperCase().includes(".PDF")) {
                    alert("Please attach Offer acceptance in PDF Format");
                    $("#FileUpload").focus();
                    return false;
                }
            }
        }

        if (PKJobNo == "0") {
            if (checkboxes == "0") {
                alert("Please Select Order Type Check Box !!!");
                $("#Quotation_Of_Order").focus()
                return false;
            }
        }


        if (DV == "2") {
            alert("Please Fill details in Domestic !!!");
            $("#Quotation_Of_Order").focus()
            return false;
        }

        if (IV == "2") {
            alert("Please Fill details in International !!!");
            $("#Quotation_Of_Order").focus()
            return false;
        }
        //added by nikita on 19062024

        var role = @Session["RoleID"];
        if(TermsCondition==""||TermsCondition==null){
            alert("Please select Terms & Condition !");
            //("#TermsCondition").focus();
            return false;
        }

        if((Legalcomment==""||Legalcomment==null) && role=="60")
        {
            alert("Please Enter Comment !");
            //("#Legalcomment").focus();
            return false;
        }
        if (($("#LegalReview_").prop("checked") == false || $("#LegalReview_").val()  == null) && role=="60") 
        {
            alert("Please Select LegalReview !!!");
            return false;
        }

        //end



        if (POAwaited == "0") {
            if (PONo == "" || PONo == null) {
                alert("Please Enter Purchase Order Number !");
                $("#Customer_PoNo_PoDate").focus()
                return false;
            }

            if (PODate == "" || PODate == null) {
                alert("Please select PO Date !");
                $("#Customer_PoDate").focus()
                return false;
            }

            if (ValDate == "" || ValDate == null) {
                alert("Please select PO Validity Date !");
                $("#Po_Validity").focus()
                return false;
            }

            /* if (POAmount == "" || POAmount == null) {
                 alert("Please select PO Amount !");
                 $("#POAmount").focus()
                 return false;
             }*/
        }


        if (SAP_No == "" || SAP_No == null) {
            alert("Please Enter SAP Number !");
            $("#SAP_No").focus()
            return false;
        }

        if (SAP_No == "8888888888" || SAP_No == "1111111111" || SAP_No == "8111111111" || SAP_No == "0000000000" || SAP_No.charAt(0) != "8") {
            alert("Incorrect SAP Number !");
            $("#SAP_No").focus()
            return false;
        }

        if (SAP_No.length < 10) {
            alert("SAP No has incorrect length !");
            $("#SAP_No").focus()
            return false;
        }

        if (varEnqCheckList == "" || varEnqCheckList == null) {
            alert("Fill Contract Review List !!!");

            return false;
        }

        return true;


    }
</script>

<!--filepond-->
<!-- Load FilePond library -->
<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>


<script>
    FilePond.setOptions({
        server: '@Url.Action("TemporaryFilePathDocumentAttachment", "JobMaster")'
    });
</script>

@*<script>
        FilePond1.parse(document.body);
    </script>


    <script>
        FilePond1.setOptions({
            server: '@Url.Action("TemporaryFilePathDocumentAttachment1", "JobMaster")'
        });
    </script>

    <script>
        FilePond1.setOptions({
            server: '@Url.Action("TemporaryFilePathDocumentAttachment1", "JobMaster")'
        });
    </script>*@




<input type="hidden" value="" name="testing" id="testing" />



<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

@*Delete Uploaded File Code added by manoj Sharma 13 March 2020*@

<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>

@*Delete Uploaded File Code added by manoj Sharma 13 March 2020 Format Report*@

<script>
    $(document).ready(function () {
        $('.deleteItemFormat').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFileFormat")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>


<script type="text/javascript">
    $(".CDExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    //$(".CEstimatedAmount").on("keyup change", function (e) {
    $(".COrderRate").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    $(".CEstimate_ManDays_ManMonth").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var Total = two * one * three;

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })
</script>

<script type="text/javascript">
    $(".CIExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CIEstimatedAmount").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIOrderRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        var Total = two * one * three;
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })
</script>




<script type="text/javascript">

    $('.DCheckBox').change(function () {
        debugger;

        var checkboxes = $('input.DCheckBox:checked').length;

        if (checkboxes >= 2) {
            alert("You Can select only one row at a Time")
            $('.DCheckBox').prop('checked', false);
            return false;
        }

    });

    $('.trDomestic').each(function () {
        var trD = {};

        var CostSheetApproved = $("#CostSheetApproved").val();        //// Auto Approval Flag
        var vCOrderRate = $(this).find('.COrderRate')
        var vCEstimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth')


        if (CostSheetApproved == "2") {
            /////Auto Approved with PCH Approval

            vCOrderRate.attr("readonly", "readonly");
            vCEstimate_ManDays_ManMonth.attr("readonly", "readonly");
        }
        else {
            vCOrderRate.removeAttr("readonly");
            vCEstimate_ManDays_ManMonth.removeAttr("readonly");
        }



    });
</script>

<script type="text/javascript">

    $('#btnSubmit').click(function (e) {

        var isValid = true;

        var ddlvalue = $('#divdisplaytable').find('#ddlTypeofReason').val();

        $('#divPOtable').find('input[type="text"]').each(function () 
        {

            if (ddlvalue == 'POAMD' || ddlvalue == 'PORECT')
            {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red",
                        "background": "#ffffcc"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            }
            else if (ddlvalue == 'POVALID') {
                if ($.trim($(this).attr('name')) == 'Add_MandayDesc' || $.trim($(this).attr('name')) == 'Add_PoValidity') {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }
            else if (ddlvalue == 'MANDAYCOR') {
                if ($.trim($(this).attr('name')) == 'Add_MandayDesc' || $.trim($(this).attr('name')) == 'Add_Mandays') {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }
        });

        $('#divdisplaytable').find('input[type="text"]').each(function ()
        {
            if (ddlvalue == 'POAMD' || ddlvalue == 'PORECT')
            {

                if ($.trim($(this).attr('name')) != 'OrderType') {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }
            else if (ddlvalue == 'POVALID')
            {
                if ($.trim($(this).attr('name')) == 'Add_MandayDesc' || $.trim($(this).attr('name')) == 'Add_PoValidity' || $.trim($(this).attr('name')) == 'Add_Mandays')
                {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }
            else if (ddlvalue == 'SAPUPDATE')
            {
                if ($.trim($(this).attr('name')) == 'Add_SAPNumber' || $.trim($(this).attr('name')) == 'Add_SAPDate')
                {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }
            else if (ddlvalue == 'MANDAYCOR') {
                if ($.trim($(this).attr('name')) == 'Add_MandayDesc' || $.trim($(this).attr('name')) == 'Add_Mandays') {
                    if ($.trim($(this).val()) == '') {
                        isValid = false;
                        $(this).css({
                            "border": "1px solid red",
                            "background": "#ffffcc"
                        });
                    }
                    else {
                        $(this).css({
                            "border": "",
                            "background": ""
                        });
                    }
                }
            }

        });

        if (ddlvalue == 'POAMD' || ddlvalue == 'PORECT')
        {
            var POFile = $("[name='FileUpload2']").val();

            if (POFile == "") {
                alert("Please attach file for the Purchase Order");
                $("#FileUpload2").focus();
                return false;
            }

            if (!POFile.toUpperCase().includes(".PDF")) {
                alert("Please attach PDF copy for the Purchase Order");
                $("#FileUpload2").focus();
                return false;
            }
        }

        if (isValid == false) {
            e.preventDefault();
        }
        else
        {
            var ddlTypeofReason = $("#ddlTypeofReason").val();

            var AddDescription = $("#UAddDescription").val();

            var Add_Mandays = $("#UAdd_Mandays").val();

            var Add_PoNumber = $("#UAdd_PoNumber").val();

            var Add_PoDate = $("#UAdd_PoDate").val();

            var Add_PoValidity = $("#UAdd_PoValidity").val();

            var Add_POAmt = $("#UAdd_POAmt").val();

            var PK_JOB_ID = $("#PK_JOB_ID").val();

            var Add_SAPNumber = $("#UAdd_SAPNumber").val();

            var Add_SAPDate = $("#UAdd_SAPDate").val();

            if (ddlvalue == 'SAPUPDATE')
            {
                if (Add_SAPNumber == "" || Add_SAPNumber == null) {
                    alert("Please Enter SAP Number !");
                    $("#SAP_No").focus()
                    return false;
                }

                if (Add_SAPNumber == "8888888888" || Add_SAPNumber == "1111111111" || Add_SAPNumber == "8111111111" || Add_SAPNumber == "0000000000" || Add_SAPNumber.charAt(0) != "8") {
                    alert("Incorrect SAP Number !");
                    $("#UAdd_SAPNumber").focus()
                    return false;
                }

                if (Add_SAPNumber.length < 10) {
                    alert("SAP No has incorrect length !");
                    $("#UAdd_SAPNumber").focus()
                    return false;
                }

                if(confirm("Are you sure to update SAP No for previous data from Applicable date ?")==false)
                {
                    return false;
                }

               
            }

           
           
           

            var MandaysDetails =
              {
                  PK_JOB_ID: PK_JOB_ID,
                  Add_PoReason: ddlTypeofReason,
                  Add_MandayDesc: AddDescription,
                  Add_Mandays: Add_Mandays,
                  Add_PoNumber: Add_PoNumber,
                  Add_PoDate: Add_PoDate,
                  Add_PoValidity: Add_PoValidity,
                  Add_POAmt: Add_POAmt,
                  Add_SAPNumber: Add_SAPNumber,
                  Add_SAPDate: Add_SAPDate
              }
            $.ajax(
                {
                    type: 'POST',
                    url: '@Url.Action("InsertAddMandays", "JobMaster")',
                    dataType: 'json',
                    Async: false,
                    data: JSON.stringify({ JM: MandaysDetails }),
                    enctype: "multipart/form-data",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        document.getElementById("divPOtable").style.display = "none";
                        document.getElementById("divSAPtable").style.display = "none";
                        document.getElementById("divPOSave").style.display = "none";
                        document.getElementById("divdisplaytable").style.display = "none";
                        location.reload();

                        // $("#DivWOSummaryTable").load(location.href + " #DivWOSummaryTable");


                    }
                });
        }


    });

    $("#chkAwaited").change(function () {
        if ($(this).is(':checked')) {
            var DL = document.getElementById("Po_Validity");
            DL.className += " addCSS";
        }
        else {
            var DL = document.getElementById("Po_Validity");
            DL.className = "form-control PoDate  hasDatepicker ";
        }

    });

</script>

<script>

    //function fncModalSave() {
    //    debugger;
    //    var link = document.getElementById('btnjc');
    //    link.click();
    //}

    function fncModalSave() {
        debugger;
        event.preventDefault(); 
        var SAP_No = $('#SAP_No').val(); 
        SapCutomerValidation(SAP_No).then(function(isValid) {            
            if (isValid == false) {
                return false;
            } else {
                var link = document.getElementById('btnjc');
                link.click();
                
            }
        }).catch(function(error) {
            
        });
    }

</script>

<!--added by shrutika salve 17112023-->
<script type="text/javascript">
                $(function () {
                    debugger;
                    $('#AddNewContactDetails').on('show.bs.modal', function (e) {
                var button = $(e.relatedTarget) // Button that triggered the modal
                var ST = button.data('status') // Extract info from data-* attributes data-PK_QTID
                $(e.currentTarget).find('#Address').val(ST);
                //$(e.currentTarget).find('.ST').val(ST);
            });
        });
</script>
<!--END--->


<script type="text/javascript">
    $(document).ready(function () {
        $("#btnshow").hide();
        $("#btnclick").click(function () {

            $("#btnshow").toggle();
        });
    });
</script>


<script>
    $(document).ready(function () {
        debugger;
        var chcekboxvalue = $("#checkIFExpeditingReport").is(":checked");
        //console.log(chcekboxvalue);
        $("#btnshowStatus").hide();
        if (chcekboxvalue == true) {
            $("#btnshowStatus").show();
        };
    });

</script>


@*<script>
    $(document).ready(function () {
        $("#btnid").click();
        function GetItem(Pk_JobId) {
            debugger;
            var url = '@Url.Action("JobPageActionValue", "Expediting")';
            const Pk_Job_id = Pk_JobId;
            url += '?Pk_Job_id=' + Pk_Job_id;
            //window.location.href = url;
            //window.open(response.msg, "_blank");
            window.open(url, "_blank");
        }
    });
</script>*@

<script>
  function GetItem(Pk_JobId) {
        debugger;
        var url = '@Url.Action("JobPageActionValue", "Expediting")';
        const Pk_Job_id = Pk_JobId;
        url += '?Pk_Job_id=' + Pk_Job_id;
        //window.location.href = url;
        //window.open(response.msg, "_blank");
        window.open(url, "_blank");
  }

    // JavaScript code
    $(document).ready(function () {
        debugger;
        var chcekboxexpediting = $("#checkIFExpeditingReport").is(":checked");
        if (chcekboxexpediting == true) {
            var PK_JOB_ID = $('#PK_JOB_ID').val();
            $('#btnid').trigger('click');
        }
        });
  

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnshowdataproject").hide();
        $("#btnShowproject").click(function () {

            $("#btnshowdataproject").toggle();
        });
    });
</script>


    <!--multiselect-->
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>


<script>
        $('.form-multiselect-city').multiselect({
            enableFiltering: true,
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true
        });
</script>


<script>
    $(function () {
        debugger
        $(".TuvEmailData").autocomplete({
            source: function (request, response) {
                debugger
                $.ajax({
                    url: '@Url.Action("GetLeadByName", "JobMaster")',
                    data: "{ 'prefix': '" + GetCurrentSearchTerm(request.term) + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {

                            //$("#pkuserId").val("");
                            //$("#pkuserId").val(item.PkUserID);
                            var value = item.CompanyName;



                            return { label: item.CompanyName, value: value };

                        }));
                    },
                    error: function (response) {

                    },
                    failure: function (response) {

                    }
                });
            },
            select: function (event, ui) {
                var LastValue = splitCurrentText(this.value);
                LastValue.pop();
                LastValue.push(ui.item.value);
                LastValue.push("");
                this.value = LastValue.join(",");
                return false;
            },
            focus: function () {
                return false;
            }
        });

        function splitCurrentText(LastTerm) {
            return LastTerm.split(/,\s*/);
        }

        function GetCurrentSearchTerm(LastTerm) {
            return splitCurrentText(LastTerm).pop();
        }

    });

</script>


<script>
    function SaveData() {
        debugger;
        var Data = [];
        var PK_JOB_ID = $("#PK_JOB_ID").val();
        var ClientContact = $("#ddlClientContact").val();
        var TUVEmailNo = $("#ddlTuvEmail").val();

        Data.push(ClientContact);
        var Data1 = JSON.stringify(Data);

        // Store selected values in local storage
        localStorage.setItem('selectedClientContact', ClientContact);
        localStorage.setItem('selectedTUVEmailNo', TUVEmailNo);

        $.ajax({
            url: '@Url.Action("DataSave", "JobMaster")',
            data: JSON.stringify({ PK_JOB_ID: PK_JOB_ID, Data1: Data1, TUVEmailNo: TUVEmailNo }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            success: function (data) {
                alert("Data saved successfully");
                window.location.reload(); // Reload the page
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                alert("Something went wrong!");
            }
        });
    }

    // Function to retrieve selected values from local storage and display them
    $(document).ready(function () {
        var selectedClientContact = localStorage.getItem('selectedClientContact');
        var selectedTUVEmailNo = localStorage.getItem('selectedTUVEmailNo');

        if (selectedClientContact !== null) {
            $("#ddlClientContact").val(selectedClientContact);
        }

        if (selectedTUVEmailNo !== null) {
            $("#ddlTuvEmail").val(selectedTUVEmailNo);
        }
    });
</script>

<script>
    // Function to retrieve selected values from local storage and display them
    $(document).ready(function () {
        debugger;
        Showdata();

        ShowDataTUVUser();

        debugger
        var CustomerName = $("#Client_Name").val();
        var EndCustomerName = $("#End_User").val();
        var ProjectName = $("#Description").val();
        var DECPMCEPCName = $("#DECName").val();
        var DECNO = $("#DECNumber").val();

        $('#IdCompanyName').val(CustomerName);
        $('#IdEndUser').val(EndCustomerName);
        $('#IDProjectName').val(ProjectName);
        $('#ddlDECName').val(DECPMCEPCName);
        $('#IDDECNumber').val(DECNO);



    });

    function Showdata() {
        debugger;
        var PK_JOB_ID = $('#PK_JOB_ID').val();
        $.ajax({
            url: '@Url.Action("GetData", "JobMaster")',
            method: 'GET',
            dataType: 'json',
            data: {
                PK_JOB_ID: PK_JOB_ID
            },
            success: function (data) {
                var table1Data = JSON.parse(data.Table1Data);
                var table2Data = JSON.parse(data.Table2Data);

                $('#tbldataBody').empty();

                var maxRows = Math.max(table1Data.length, table2Data.length);

                for (var i = 0; i < maxRows; i++) {
                    var table1Item = table1Data[i];
                    var table2Item = table2Data[i];

                    // Check if the data exists in both tables

                    var contactName1 = table1Item ? table1Item.contactName : '';
                    var email1 = table1Item ? table1Item.Email : '';
                    var TUVUserName2 = table2Item ? table2Item.TUVUserName : '';
                    var Tuv_Email_Id2 = table2Item ? table2Item.Tuv_Email_Id : '';

                    $('#tbldataBody').append('<tr><td>' + contactName1 + '</td><td>' + email1 + '</td><td>' + TUVUserName2 + '</td><td>' + Tuv_Email_Id2 + '</td></tr>');

                    // Set selected values in dropdowns




                    var selectedClientContact = table1Item ? table1Item.item : '';

                    if (selectedClientContact) {
                        // Ensure that selectedClientContact is an array
                        var selectedClientContactArray = Array.isArray(selectedClientContact) ? selectedClientContact : [selectedClientContact];

                        // Set selected values in the multiselect dropdown
                        $("#ddlClientContact").multiselect('select', selectedClientContactArray);
                    }


                    //if (TUVUserName2 != null && TUVUserName2 !== undefined && TUVUserName2 !== '' && TUVUserName2.length > 0) {
                    //    $('#ddlTuvEmail').val(TUVUserName2.join(', '));
                    //} else {
                    //    $('#ddlTuvEmail').val('');
                    //}



                    debugger
                    //console.log(SelectdTUVEmailNO);

                    //$("#ddlTuvEmail").val(TUVUserName2);



                }



            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                alert("Failed to fetch data!");
            }
        });
    }


    function ShowDataTUVUser() {
        debugger;
        var PK_JOB_ID = $('#PK_JOB_ID').val();
        $.ajax({
            url: '@Url.Action("GetDataTUVUser", "JobMaster")',
            method: 'GET',
            dataType: 'json',
            data: {
                PK_JOB_ID: PK_JOB_ID
            },
            success: function (data) {
                debugger;
                var table1Data = JSON.parse(data.Table1Data);

                if (table1Data != null && table1Data.length > 0) {
                    var tuvEmailJ = table1Data[0].Tuv_EmailJ;
                    $('#ddlTuvEmail').val(tuvEmailJ);
                } else {
                    $('#ddlTuvEmail').val('');
                }
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                alert("Failed to fetch data!");
            }
        });
    }


</script>

@*added by shrutika salve 10052024*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#excelDataModal").hide();
        $("#btnsubjobbulk").click(function () {
            $("#excelDataModal").show();
        });
    });
</script>



<script>
function SaveUploadFileData() {
    debugger;
    var DArray = [];
    var fileData = new FormData();

    // Loop over each data object in excelDataList
    $('.trDomestic1').each(function () {
        debugger;
        var rowId = $(this).attr('id');
        //var id = rowId.substr(3);
        var Control_Number = $('#Job_Number').val();
        var vendor_name = $('#IdVendorName' + rowId).val();
        var Vendor_Po_No = $('#IdPONumber' + rowId).val();
        var Date_Of_PoDateTime = $('#IdPODate' + rowId).val();
        var VendorPO_Amount = $('#IdPOAmount' + rowId).val();
        var VendorAddress = $('#IDAddress' + rowId).val();
        var Vendor_Contact = $('#VendorContact' + rowId).val();
        var Vendor_Email = $('#IDCVendorEmail' + rowId).val();
        var PK_JOB_ID = $("#PK_JOB_ID").val();
        var SAP_No = $("#SAP_No").val();
        var Company_Name = $('#Client_Name').val();
        var End_User = $('#IdEndUser' + rowId).val();
        var Project_Name = $('#IDProjectName' + rowId).val();
        var DECName = $('#ddlDECName' + rowId).val();
        var DECNumber = $('#IDDECNumber' + rowId).val();
        var VendorAllDetails = $('#IDVendorContactAll' + rowId).val();
        // var PK_QTID = $("#PK_QT_ID").val();
        var service_type = $("#subserviceType").val();

        // Create an object to store other form fields
        var trD = {
            'Rowid': rowId,
            'Control_Number': Control_Number,
            'vendor_name': vendor_name,
            'VendorPO_Amount': VendorPO_Amount,
            'Date_Of_PoDateTime': Date_Of_PoDateTime,
            'Vendor_Po_No': Vendor_Po_No,
            'VendorAddress': VendorAddress,
            'Vendor_ContactDetails': Vendor_Contact,
            'PK_JOB_ID': PK_JOB_ID,
            'SAP_No': SAP_No,
            'Company_Name': Company_Name,
            'End_User': End_User,
            'Project_Name': Project_Name,
            'DECName': DECName,
            'DECNumber': DECNumber,
            'Vendor_Email': Vendor_Email,
            'Vendor_ContactAll': VendorAllDetails,
            'service_type': service_type,
        };

        DArray.push(trD);
    });

    // Count the number of rows
    var rowCount = DArray.length;

    // Show the confirmation modal
    $('#confirmationMessage').text(rowCount + " subjob(s) will be created. Kindly confirm. Do you want to proceed?");
    $('#confirmationModal').modal('show');

    // Handle confirmation
    $('#confirmButton').off('click').on('click', function() {
        $('#confirmationModal').modal('hide');

        $('[id^="attachment_"]').each(function (index, filesInput) {
            var rowId = $(this).closest('tr').attr('id');
            //var id = rowId.substr(3);
            if (filesInput && filesInput.files.length > 0) {
                for (var i = 0; i < filesInput.files.length; i++) {
                    var file = filesInput.files[i];
                    var fileNameWithRowId = rowId + '_' + file.name; // Concatenate row ID and file name

                    fileData.append(fileNameWithRowId, file);
                }
            }
        });

        // Append DArray as form data
        fileData.append("DArray", JSON.stringify(DArray));

        // Send formData to the server via AJAX
        $.ajax({
            url: '@Url.Action("CreatSubJobExceldata", "SubJobMaster")',
            type: 'POST',
            data: fileData,
            processData: false,
            contentType: false,
            success: function (response) {
                console.log(response);
                if (response.success) {
                    alert("Subjob(s) created successfully.");
                    window.location.reload(true);
                } else {
                    alert(response.message); // Display error message as alert
                }
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                alert("Error: " + xhr.responseText); // Display error message as alert
            }
        });
    });
}

function getFileExtension(filename) {
    return filename.split('.').pop();
}
</script>


<script>
    var rowCount = 1;
    $(document).ready(function () {

    debugger


    $(document).ready(function () {

        $(document).on("click", ".classAdd", function () {
            debugger

            //var DTestTable = $('#DTestTable');
            //var excelDataModal = $("#excelDataModal");





            setTimeout(function () {
                initializeVendorAddressAutocomplete(rowId);
            }, 100);

            setTimeout(function () {
                initializeVendorNameAutocomplete(rowId);
            }, 100);
            //setTimeout(function () {
            //    initializevendorContactDetails(rowId);
            //}, 100);




            debugger
            var rowId = 'row_' + rowCount;
            var newRowHtml = '<tr class="trDomestic1" id="' + rowId + '">' +
                  '<td>' + '<button type="button" class="btn btn-xs btn-primary classAdd" style="width:46px;" data-rowid="row_' + rowCount + '"><i class="fa fa-plus-circle"></i></button><button type="button" class="fa fa-trash-o btn-danger btnRemove" style="width:46px;" data-rowid="row_' + rowCount + '"></button></td>' +
        // Append your table row HTML here
      '<td>' + '<input type="text" class="form-control Cvendorname" style="width: 200px;" placeholder="vendor name" id="IdVendorName' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CPONumber" style="width: 220px;" name="PO Number" placeholder="PO Number" id="IdPONumber' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control PoDate" style="width: 160px;" name="PO Date" placeholder="PO Date"  id="IdPODate' + rowId + '"></td>' +
'<td>' + '<input type="file" class="filepond" style="width: 290px;" placeholder="Attchments" name="filepond" multiple  id="attachment_' + rowId + '"></td>' +

//'<td>' + '<select class="form-control CAddress" style="width: 180px;" name="Vendor Address" id="IDAddress' + rowId + '"><option value=""></option></select></td>' +
'<td>' +
'<select class="form-control CAddress" style="width: 180px;" id="IDAddress' + rowId + '" name="Vendor Address" placeholder="Vendor Address"><option value=""></option></select>' +
'<a id="lnkNewaddress" style="display:inline-block; margin-left:35px;" data-toggle="modal" data-target="#AddNewaddressDetails">' +
'<i class="fa fa-plus-circle"></i> Add New address ' +
'</a>' +
'</td>' +
'<td>' +
    '<select class="form-control form-multiselect-city"  style="width:400px;" id="VendorContact' + rowId + '" name="Vendor Contact" placeholder="Vendor Contact" multiple="multiple"><option value=""></option></select>' +
    '<a id="lnkNewvendor' + rowId + '" style="display:inline-block; margin-left: 17px;"' +
    ' data-toggle="modal" data-target="#AddNewvendorDetails" title="+">' +
    '<i class="fa fa-plus-circle"></i>Add New Contact Person' +
    '</a>' +
'</td>' +
'<td>' + '<input type="text" class="form-control CVendorContactAll" style="width: 240px;" name="Vendor Contact all Details" placeholder="Vendor Contact all Details" id="IDVendorContactAll' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CVendorEmail" style="width: 240px;" name="Vendor Email" placeholder="Vendor Email" id="IDCVendorEmail' + rowId + '"></td>' +

//'<td>' + '<input type="text" class="form-control CCompanyName" style="width: 290px;display: none;" placeholder="Company Name" name="Company Name" id="IdCompanyName' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CEndUser" style="width: 290px;" name="End User Name" placeholder="End User Name" id="IdEndUser' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CProjectName" style="width: 290px;" name="Project Name" placeholder="Project Name" id="IDProjectName' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CDECName" style="width: 290px;" name="DEC Name" placeholder="DEC Name" id="ddlDECName' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CDECNumber" style="width: 290px;" name="DEC Number" placeholder="DEC Number" id="IDDECNumber' + rowId + '"></td>' +
'<td>' + '<input type="text" class="form-control CPOAmount" style="width: 290px;" name="PO Amount"  placeholder="PO Amount" id="IdPOAmount' + rowId + '"></td>' +


        // Append more cells as needed




       '</tr>';

            // Increment row count for the next row
            //DTestTable.append(newRowHtml);
            $('#DTestTable tbody').append(newRowHtml);


            rowCount++;







            initializeVendorNameAutocomplete(rowId);
            initializeVendorAddressAutocomplete(rowId);

            //var CustomerName = $("#Client_Name").val();
            var EndCustomerName = $("#End_User").val();
            var ProjectName = $("#Description").val();
            var DECPMCEPCName = $("#DECName").val();
            var DECNO = $("#DECNumber").val();

           // $(".CCompanyName").val(CustomerName);
            $('.CEndUser').val(EndCustomerName);
            $('.CProjectName').val(ProjectName);
            $('.CDECName').val(DECPMCEPCName);
            $('.CDECNumber').val(DECNO);

            debugger
            var chcekboxvalueArc = $("#chkARC").is(":checked");


            if (chcekboxvalueArc === false) {
                $('#IdEndUser' + rowId).attr('readonly', true);
                $('#IDProjectName' + rowId).attr('readonly', true);
                $('#ddlDECName' + rowId).attr('readonly', true);
                $('#IDDECNumber' + rowId).attr('readonly', true);
                //$('#IDVendorContactAll' + rowId).attr('readonly', true);
                //$('#IDCVendorEmail' + rowId).attr('readonly', true);
            }


            $(function () {
                $(".PoDate").datepicker({
                    dateFormat: 'dd/mm/yy', //check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",
                    //minDate: "-90d",
                    //maxDate: 0,
                });
            });



                        $('.form-multiselect-city').multiselect({
                            enableFiltering: true,
                            includeSelectAllOption: true,
                            enableCaseInsensitiveFiltering: true,


                        });
                    });

            // Remove button click event (delegated to dynamically added buttons)
            $(document).on("click", ".btnRemove", function () {
    debugger
    var rowId = $(this).attr('data-rowid');
    //var rowId = $(this).attr('id');
                // Remove the row with the corresponding ID
                $("#" + rowId).remove();
            });
        });

    });



</script>


<script type="text/javascript">
        debugger;
        function initializeVendorAddressAutocomplete(rowId) {
            $(".Cvendorname").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url: '@Url.Action("GetCompanyName", "subJobMaster")',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {

                            response($.map(data, function (item) {
                                debugger
                                return { label: item.vendor_name, value: item.vendor_name };


                            }));
                        },
                        error: function (response) {
                            // alert(response.responseText);
                        },
                        failure: function (response) {
                            //   alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    //if (u.item.val == -1) {
                    //    return false;
                    //}
                    //$("#hfCompanyName").val(i.item.val);
                },
                minLength: 2
            });
        }


    function initializeVendorNameAutocomplete(rowId) {
        debugger


        debugger
        $("#IdVendorName" + rowId).blur(function () {
            debugger
            //  alert(this.value);
            //$('#EndCustomer').val($('#CompanyName').val())
            $.ajax({
                url: '@Url.Action("GetCompanyAddress", "subJobMaster")',
                data: "{ 'Prefix': '" + this.value + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    //  alert(response);
                    $("#IDAddress" + rowCount).empty();

                    var s = '<option value="-1">--Select Vendor Address--</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].pkID + '">' + response[i].Company_Name + '</option>';
                    }
                    $("#IDAddress" + rowId).html(s);
                    $('#ddlvendoraddress').html(s);
                    $('#hiddenRowId').val(rowId);
                    $('#hiddenRowIdaddress').val(rowId);

                },
                error: function (response) {
                    // alert(response.responseText);
                },
                failure: function (response) {
                    //   alert(response.responseText);
                }
            });
        })




            debugger

            $("#IdVendorName" + rowId).blur(function () {
                var vendorName = $("#IdVendorName" + rowId).val();
                $.ajax({
                    url: '@Url.Action("Getvendordetails", "subJobMaster")',
                    data: JSON.stringify({ 'Pre': vendorName }),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        // Clear existing options
                        $("#VendorContact" + rowId).empty();

                        var selectedContacts = $("#VendorContact" + rowId).data('selected-contacts') || [];

                        var options = '';
                        for (var i = 0; i < response.length; i++) {
                            var selected = selectedContacts.includes(response[i].Vendor_Contact.toString()) ? ' selected' : '';
                            options += '<option value="' + response[i].Vendor_Contact + '"' + selected + '>' + response[i].vendor_name + '</option>';
                        }
                        $("#VendorContact" + rowId).html(options);

                        // Destroy the previous instance of the multi-select plugin
                        $("#VendorContact" + rowId).multiselect('destroy');

                        // Re-initialize the multi-select plugin
                        $("#VendorContact" + rowId).multiselect({
                            includeSelectAllOption: true,
                            selectAllText: 'Select All',
                            enableFiltering: true,
                            enableCaseInsensitiveFiltering: true,
                            maxHeight: 300
                        });
                    },
                    error: function (response) {
                        console.error(response.responseText);
                    },
                    failure: function (response) {
                        console.error(response.responseText);
                    }
                });


                $("#VendorContact" + rowId).on('change', function () {
                    debugger
                    var selectedContacts = $(this).val() || [];
                    var vendorCompany = $("#IdVendorName" + rowId).val();


                    if (selectedContacts.length === 0) {
                        // If no option is selected, clear the email field
                        $('#IDVendorContactAll' + rowId).val('');
                        return;
                    }

                    // Create a JSON object with vendorid
                    var dataToSend = JSON.stringify({ vendorid: selectedContacts });

                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetvendorDetailsall", "subJobMaster")',
                        data: { myArray: dataToSend, vendorComapny: vendorCompany },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            debugger;
                            var vendorDetails = [];

                            if (Array.isArray(response)) {
                                $.each(response, function (index, value) {
                                    vendorDetails.push(value.ContactNames);
                                });
                                // Join email addresses with a comma and set to the input
                                $('#IDVendorContactAll' + rowId).val(vendorDetails.join(','));
                                //console.log($('#Vendor_ContactAll').val(vendorDetails.join('-')));
                            } else {
                                console.error("Invalid response format");
                            }
                        },
                        error: function (response) {
                            console.error("Error: ", response.responseText);
                        }
                    });
                });


                $("#VendorContact" + rowId).on('change', function () {
                    var selectedContacts = $(this).val() || [];
                    var vendorCompany = $("#IdVendorName" + rowId).val();

                    if (selectedContacts.length === 0) {
                        // If no option is selected, clear the email field
                        $('#IDCVendorEmail' + rowId).val('');
                        return;
                    }

                    // Create a JSON object with vendorid
                    var dataToSend = JSON.stringify({ vendorid: selectedContacts });

                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetvendorEmailId", "subJobMaster")',
                        data: { myArray: dataToSend, vendorComapny: vendorCompany },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            var emailAddresses = [];

                            if (Array.isArray(response)) {
                                $.each(response, function (index, value) {
                                    emailAddresses.push(value.Vendor_Email);
                                });
                                // Join email addresses with a comma and set to the input
                                $('#IDCVendorEmail' + rowId).val(emailAddresses.join(', '));
                                console.log($('#IDCVendorEmail' + rowId).val(emailAddresses.join(', ')));
                            } else {
                                console.error("Invalid response format");
                            }
                        },
                        error: function (response) {
                            console.error("Error: ", response.responseText);
                        }
                    });
                });

                // Initial call to initialize the multi-select plugin



            })





            debugger
            var a = $(".Cvendorname").val();
            $.ajax({
                url: '@Url.Action("GetCompanyAddress", "subJobMaster")',
                data: "{ 'Prefix': '" + a + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    //  alert(response);
                    $("#IDAddress" + rowCount).empty();

                    var s = '<option value="-1">--Select Vendor Address--</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].pkID + '">' + response[i].Company_Name + '</option>';
                    }
                    $("#IDAddress" + rowId).html(s);
                    $('#ddlvendoraddress').html(s);
                    $('#hiddenRowId').val(rowId);
                    $('#hiddenRowIdaddress').val(rowId);

                },
                error: function (response) {
                    // alert(response.responseText);
                },
                failure: function (response) {
                    //   alert(response.responseText);
                }
            })


        }





</script>



<script>
    $(document).ready(function () {
        $('#saveButton').hide();
        $('.classAdd').click(function () {
            $('#saveButton').show();
        });
    });
</script>



<script>
    $(document).ready(function () {
        $(function () {
            $("#btnAddSiteAdd").click(function () {
                debugger;
                var vendorName = $('#vendor_name').val();
                var match = vendorName.match(/\((\d+)\)/);

                if (match) {

                    var CMP_ID = match[1];


                    CMP_ID = parseInt(CMP_ID, 10);


                    console.log(CMP_ID);
                } else {

                    console.log('No match found');
                }
                var SiteAdd = $("#Address_Account").val();
                var SiteAddrPin = $("#SiteAddrPin").val();
                //var CMP_ID = $("#CMP_ID").val();
                var AddressType = $("#IdAddrType").val();


                if (AddressType == '') {
                    alert("Select Address Type")
                    return false;
                }
                else if (SiteAdd == '') {
                    alert("Enter Address")
                    return false;
                }
                else {


                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("InsertSiteAddress", "CompanyMasters")',
                        dataType: 'json',
                        Async: false,
                        data: JSON.stringify({ "CMP_ID": CMP_ID, "SiteAdd": SiteAdd, "SiteAddrPin": SiteAddrPin, "AddressType": AddressType }),
                        enctype: "multipart/form-data",
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            if (response == "SUCCESS") {
                                location.reload();

                            }


                        }

                    });


                }
            });
        });
    });

</script>



<script>
        debugger
        $("#VendorID").autocomplete({
            source: function (request, response) {

                $.ajax({
                    url: '@Url.Action("GetCompanyName", "subJobMaster")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        response($.map(data, function (item) {
                            debugger
                            return { label: item.vendor_name, value: item.vendor_name };


                        }));
                    },
                    error: function (response) {
                        // alert(response.responseText);
                    },
                    failure: function (response) {
                        //   alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //if (u.item.val == -1) {
                //    return false;
                //}
                //$("#hfCompanyName").val(i.item.val);
            },
            minLength: 2
        });




        debugger
        $("#VendorID").blur(function () {
            debugger
            //  alert(this.value);
            //$('#EndCustomer').val($('#CompanyName').val())
            $.ajax({
                url: '@Url.Action("GetCompanyAddress", "subJobMaster")',
                data: "{ 'Prefix': '" + this.value + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    //  alert(response);
                    $("#ddlCaddr").empty();

                    var s = '<option value="-1">--Select Vendor Address--</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].pkID + '">' + response[i].Company_Name + '</option>';
                    }
                    $("#ddlCaddr").html(s);

                },
                error: function (response) {
                    // alert(response.responseText);
                },
                failure: function (response) {
                    //   alert(response.responseText);
                }
            });
        })




        debugger
        var a = $("#VendorID").val();
        $.ajax({
            url: '@Url.Action("GetCompanyAddress", "subJobMaster")',
            data: "{ 'Prefix': '" + a + "'}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                //  alert(response);
                $("#ddlCaddr").empty();

                var s = '<option value="-1">--Select Vendor Address--</option>';
                for (var i = 0; i < response.length; i++) {
                    s += '<option value="' + response[i].pkID + '">' + response[i].Company_Name + '</option>';
                }
                $("#ddlCaddr").html(s);

            },
            error: function (response) {
                // alert(response.responseText);
            },
            failure: function (response) {
                //   alert(response.responseText);
            }
        })





</script>



<script>
    $(document).ready(function () {
        

        $("#btnAddVendorDetails").on('click', function () {
            debugger
            var rowId = $('#hiddenRowId').val();
            alert(rowId)
            //alert(rowId);
            var testcompanynameparam = $('#IdVendorName' + rowId).val();
            //alert(testcompanynameparam);

            var ContactNames = $("#VendorContactNames").val();
            var ddlContactCompanyName = ContactNames;
            var ddlCompanyName = testcompanynameparam;

            var HomePhoneNo = $("#idHomePhone").val();
            var MobileNo = $("#idMobile").val();

            var MainContact = $('#IsMainContact').is(':checked');
            var CompanyName = $('#hidCompany').val();
            var Address = $("#ddlvendoraddress option:selected").val();
            var Email = $("#idEmail").val();
            var Fax_No = $("#idFax_No").val();
            var TitleName = $("#idTitleName").val();
            var ContactStatus = $("#IdContactStatus").val();


            //**************************************************************************
            if ($("#VendorContactNames").val() == "" || $("#VendorContactNames").val() == null) {
                alert("Please Enter Contact Name!!!");
                $("#VendorContactNames").focus()
                return false;
            }

            else if (TitleName == "" || TitleName == null) {
                alert("Enter Designation !!!");
                $("#idTitleName").focus()
                return false;
            }
            else if (Email == "" || Email == null) {
                alert("Enter Email !!!");
                $("#idEmail").focus()
                return false;
            }
            else if (MobileNo == "" || MobileNo == null) {
                alert("Enter Mobile !!!");
                $("#idMobile").focus()
                return false;
            }
            else if (ContactStatus == "" || ContactStatus == null) {
                alert("Enter Status !!!");
                $("#IdContactStatus").focus()
                return false;
            }
            else {
                var ContactDetails =
                    {
                        ContactNames: ContactNames,
                        ContactCompanyName: ddlContactCompanyName,
                        CompanyName: testcompanynameparam,
                        HomePhone: HomePhoneNo,
                        Mobile: MobileNo,
                        IsMainContact: MainContact,
                        Address: Address,
                        Email: Email,
                        Fax_No: Fax_No,
                        TitleName: TitleName,
                        ContactStatus: ContactStatus
                    }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify({ ECM: ContactDetails }),
                    url: '@Url.Action("ContactDetails", "EnquiryMaster")',
                    dataType: 'json',
                    Async: false,
                    enctype: "multipart/form-data",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {

                        if (response.success == 1) {
                            //vendordetails();
                            var rowId = $('#hiddenRowId').val();
                            VendorDetails(rowId)
                            alert("Contact Saved Successfully!!!")
                            $("#addmodalCloseButton").click();
                            //$('#AddNewContactDetails').modal('hide');
                            //Bind_EmailID();
                            //showMessage();


                        }
                        else if (response.success == 2) {

                            alert("Duplicate Contact detail Or !!Failed!!! Something Went Wrong!!! Please Try Again....")
                            //Bind_EmailID();
                            $('#AddNewContactDetails').modal('hide');
                            //showMessage();

                        }
                        //Bind_EmailID();

                    }
                });
            }
        });
    });
</script>

<script>
    function VendorDetails(rowId) {
        var vendorName = $("#IdVendorName" + rowId).val();
        $.ajax({
            url: '@Url.Action("Getvendordetails", "subJobMaster")',
            data: JSON.stringify({ 'Pre': vendorName }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                // Clear existing options
                $("#VendorContact" + rowId).empty();

                var selectedContacts = $("#VendorContact" + rowId).data('selected-contacts') || [];

                var options = '';
                for (var i = 0; i < response.length; i++) {
                    var selected = selectedContacts.includes(response[i].Vendor_Contact.toString()) ? ' selected' : '';
                    options += '<option value="' + response[i].Vendor_Contact + '"' + selected + '>' + response[i].vendor_name + '</option>';
                }
                $("#VendorContact" + rowId).html(options);

                // Destroy the previous instance of the multi-select plugin
                $("#VendorContact" + rowId).multiselect('destroy');

                // Re-initialize the multi-select plugin
                $("#VendorContact" + rowId).multiselect({
                    includeSelectAllOption: true,
                    selectAllText: 'Select All',
                    enableFiltering: true,
                    enableCaseInsensitiveFiltering: true,
                    maxHeight: 300
                });
            },
            error: function (response) {
                console.error(response.responseText);
            },
            failure: function (response) {
                console.error(response.responseText);
            }
        });
    }
</script>

<script>
    $(document).ready(function () {
        $(function () {
            $("#btnAddSiteAddvendor").click(function () {
                debugger;
                var rowid = $('#hiddenRowIdaddress').val();
               // alert(rowid);
                var vendorName = $('#IdVendorName' + rowid).val();

                var match = vendorName.match(/\((\d+)\)/);

                if (match) {

                    var CMP_ID = match[1];


                    CMP_ID = parseInt(CMP_ID, 10);


                    console.log(CMP_ID);
                } else {

                    console.log('No match found');
                }


                var SiteAdd = $("#IdAddress_Account").val();
                var SiteAddrPin = $("#idSiteAddrPin").val();
                //var CMP_ID = $("#CMP_ID").val();
                var AddressType = $("#IdAddrType").val();


                if (AddressType == '') {
                    alert("Select Address Type")
                    return false;
                }
                else if (SiteAdd == '') {
                    alert("Enter Address")
                    return false;
                }
                else {


                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("InsertSiteAddress", "CompanyMasters")',
                        dataType: 'json',
                        Async: false,
                        data: JSON.stringify({ "CMP_ID": CMP_ID, "SiteAdd": SiteAdd, "SiteAddrPin": SiteAddrPin, "AddressType": AddressType }),
                        enctype: "multipart/form-data",
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            if (response == "SUCCESS") {
                                //location.reload();
                                VendorAddress(rowid);
                                alert("Address Saved Successfully!!!");
                                $("#addmodalButton").click();


                            }


                        }

                    });


                }
            });
        });
    });
</script>

<script>

    function VendorAddress(rowId) {
            debugger
            var VendorName = $("#IdVendorName" + rowId).val()
            $('#EndCustomer').val($('#CompanyName').val())
            $.ajax({
                url: '@Url.Action("GetCompanyAddress", "subJobMaster")',
                data: "{ 'Prefix': '" + VendorName + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    //  alert(response);
                    $("#IDAddress" + rowCount).empty();

                    var s = '<option value="-1">--Select Vendor Address--</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].pkID + '">' + response[i].Company_Name + '</option>';
                    }
                    $("#IDAddress" + rowId).html(s);


                },
                error: function (response) {
                    // alert(response.responseText);
                },
                failure: function (response) {
                    //   alert(response.responseText);
                }
            });
        }

</script>

<script>
    $(document).ready(function () {
        debugger;
        var ddlSource = $("#ddlTermsCondition").val();
        var inspectionlocation=$("#InspectionLocation").val();
        var Roleid = @Session["RoleID"];
        if ((ddlSource === "NO" ||inspectionlocation==='International') && Roleid === 60 ) {
            $("#txtlegalreview").show();
            $("#txtcomment").show();
            $("#txtJobCreated").show();
            $("#Legalcomment").removeAttr('readonly');
            $("#LegalReview_").removeAttr('disabled');
            $("#JobCreated_").removeAttr('disabled');

        }
        else if (ddlSource === "NO"||inspectionlocation==='International') {
            $("#txtlegalreview").show();
            $("#txtcomment").show();
            $("#txtJobCreated").show();
            $("#Legalcomment").attr('readonly', 'readonly');
            $("#LegalReview_").attr('disabled', 'disabled');
            $("#JobCreated_").attr('disabled', 'disabled');



        }
        else{
            $("#txtlegalreview").hide();
            $("#txtcomment").hide();
            $("#txtJobCreated").hide();
        }


        $('#ddlTermsCondition').on("change", function () {
            debugger;
            toggleLegalAttachment();
        });

        function toggleLegalAttachment() {
            debugger;
            var ddlSource = $("#ddlTermsCondition").val();
            var Roleid = @Session["RoleID"];

            if (ddlSource === "NO" ||inspectionlocation ==="International") {
                $("#txtlegalreview").show();
                $("#txtcomment").show();
                $("#LegalReview_").show();
                $("#txtJobCreated").show();

                $("#Legalcomment").attr('readonly', 'readonly');
                $("#LegalReview_").attr('disabled', 'disabled');
                $("#JobCreated_").attr('disabled', 'disabled');

            } else {
                $("#LegalReview_").hide();
                $("#txtcomment").hide();
                $("#txtlegalreview").hide();
                $("#txtJobCreated").hide();
            }

            if ((ddlSource === "NO" ||inspectionlocation==='International') && Roleid === 60) {
                //$("#txtattach").show();
                $("#Legalcomment").removeAttr('readonly');
                $("#LegalReview_").removeAttr('disabled');
                $("#JobCreated_").removeAttr('disabled');

            } else {
                $("#Legalcomment").attr('readonly', 'readonly');
                $("#LegalReview_").attr('disabled', 'disabled');
                $("#JobCreated_").attr('disabled', 'disabled');

            }
        }
    });
</script>



<script>

    function updatesapdata(SAP_No) {
        debugger
        return new Promise((resolve, reject) => {
            var PK_QT_ID = $("#PK_QT_ID").val();
            var pk_jobid = $("#PK_JOB_ID").val();
            $.ajax({
                url: '@Url.Action("UpdateCustomerWithSap", "JobMaster")',
                type: "POST",
                data: JSON.stringify({ Sap_No: SAP_No, pk_QT: PK_QT_ID, PK_JOB_ID: pk_jobid }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function () {
                    resolve();
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error during update: " + status + ": " + error);
                    reject(error);
                }
            });
        });
    }

    function SapCutomerValidation(SAP_No) { 
        debugger
    return new Promise((resolve, reject) => {
        var PK_QT_ID = $("#PK_QT_ID").val();
        var PK_JOB_ID = $("#PK_JOB_ID").val();

        $.ajax({
            url: '@Url.Action("CheckCustomerWithSap", "JobMaster")',
            type: "POST",
            data: JSON.stringify({ Sap_No: SAP_No, pk_QT: PK_QT_ID, PK_JOB_ID: PK_JOB_ID }),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                debugger
                //Note(response value "1" means true value "0" means false and value '2' means alredy update job
                if (response.ValueCount === "0") {
                    
                   // showCustomAlertsap(`AS PER SAP ENTERED SAP NUMBER\n Customer Name: ${response.SapCustomerName}\n HOWEVER Enquiry Customer Name: ${response.EnquiryCustomerName}\n`, response)
                    showCustomAlertsap(`According to SAP, the customer name for the entered SO number is ${response.SapCustomerName}${response.State}\n However, while generating the enquiry, the customer name was specified as : ${response.EnquiryCustomerName}Upon confirmation, the customer name specified in the enquiry and quotation will be updated to match the SAP record.`,response)
                        .then(() => {
                            
                            const confirmationMessage = `Do you want to replace the SAP Customer "${response.SapCustomerName}" with Enquiry Customer "${response.EnquiryCustomerName}"?`;
                            const userConfirmed = confirm(confirmationMessage);                           
                            if (userConfirmed) {
                                const finalConfirmation = confirm("Are you sure you want to update the customer data?");
                                if (finalConfirmation) {
                                    updatesapdata(SAP_No).then(() => {
                                        alert("Customer data updated successfully.");
                                        //$('#Client_Name').val(response.SapCustomerName);
                                        $('#CMP_ID').val(response.pk_cmpid);
                                        $('#Client_Name').val(response.SapCustomerName + ' (' + response.pk_cmpid + ')');
                                        $('#SAP_No').val(SAP_No);
                                        resolve(true);
                                    }).catch(error => {
                                        console.error("Error during update:", error);
                                        reject(error);
                                    });
                                } else {
                                    $('#SAP_No').val("");
                                    resolve(false);
                                }
                            } else {
                                $('#SAP_No').val("");
                                resolve(false);
                            }
                        }).catch(error => {
                            reject(error);
                        });
                } 
                else if(response.ValueCount === "2") {
                   //a `Not Allow: This SAP number Customer"${response.SapCustomerName}" has already been updated and a job cannot be created.`;
                    alert('Customer Code is not matching with Job number available in system. Not allowed to take further action.');
                    $('#SAP_No').val("");
                    resolve(false);
                }
                else if(response.ValueCount === "3") {
                    //a `Not Allow: This SAP number Customer"${response.SapCustomerName}" has already been updated and a job cannot be created.`;
                    alert('This Sales Order number is blocked in System.');
                    $('#SAP_No').val("");
                    resolve(false);
                }
                else if (response.ValueCount === "4") {
                    //showCustomAlert("Sales order number doesn't exist in System. Please try after some time.");
                    showCustomAlert("This Sap Number is not Valid Please Enter Valid Sap Number,");
                    resolve(false);
                    $("#SAP_No").val("");
                }
                else if (response.ValueCount === "5") {
                    const Message = `This SAP number belongs to a cost center:"${response.CostCenter}" and therefore does not allow further actions.`; 
                    alert(Message);
                    resolve(false);
                    $("#SAP_No").val("");
                }
                else if(response.ValueCount === "6") {
                    //a `Not Allow: This SAP number Customer"${response.SapCustomerName}" has already been updated and a job cannot be created.`;
                    alert('Please Contact Tiimes Team .');
                    $('#SAP_No').val("");
                    resolve(false);
                }
                else {
                    resolve(true);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX error: " + status + ": " + error);
                reject(error);
            }
        });
    });
}

function showCustomAlertsap(message, response) {
    return new Promise((resolve) => {
        const alertDiv = document.createElement("div");
        alertDiv.style.position = "fixed";
        alertDiv.style.top = "20px";
        alertDiv.style.left = "50%";
        alertDiv.style.transform = "translateX(-50%)";
        alertDiv.style.backgroundColor = "#f8d7da";
        alertDiv.style.color = "#721c24";
        alertDiv.style.padding = "15px";
        alertDiv.style.border = "1px solid #f5c6cb";
        alertDiv.style.borderRadius = "5px";
        alertDiv.style.fontWeight = "bold";
        alertDiv.style.textAlign = "center";
        alertDiv.style.zIndex = "9999";
        const attentionMessage = document.createElement("div");
        attentionMessage.innerHTML = "<strong>ATTENTION!</strong>";
        attentionMessage.style.color = "Black";
        alertDiv.appendChild(attentionMessage);

        const detailsMessage = document.createElement("div");
        //detailsMessage.innerHTML = `As Per SAP Entered SAP NUMBER<br> Customer Name: <strong style="color: red;">${response.SapCustomerName}</strong><br> However, Enquiry Customer Name: <strong style="color: red;">${response.EnquiryCustomerName}</strong>`;
        detailsMessage.innerHTML = `According to SAP, the customer name for the entered SO number is <br><strong style="color: red;">${response.SapCustomerName}${response.State}</strong><br> However, while generating the enquiry, the customer name was specified as : <strong style="color: red;">${response.EnquiryCustomerName}</strong>Upon confirmation, the customer name specified in the enquiry and quotation will be updated to match the SAP record.`;
        alertDiv.appendChild(detailsMessage);

        const okButton = document.createElement("button");
        okButton.innerHTML = "OK";
        okButton.style.marginTop = "10px";
        okButton.style.padding = "10px 20px";
        okButton.style.backgroundColor = "#4CAF50";
        okButton.style.color = "white";
        okButton.style.border = "none";
        okButton.style.borderRadius = "5px";
        okButton.style.cursor = "pointer";

        okButton.addEventListener("click", function () {
            alertDiv.remove();
            resolve();  // Resolve the promise after clicking OK
        });

        alertDiv.appendChild(okButton);
        document.body.appendChild(alertDiv);
    });
}


    $("#SAP_No").change(function () {
        debugger
        var SAP_No = $("#SAP_No").val();
        if (SAP_No !== "") {
            SapCutomerValidation(SAP_No).then(isValid => {
                if (isValid) {
                    //console.log("Customer data validated and updated if necessary.");
                    //getnewcompany();
                } else {
                    //console.log("No action taken.");
                }
            }).catch(error => {
                console.error("Error during validation:", error);
            });
        }
    });


    $("#UAdd_SAPNumber").change(function () {
        debugger
        var SAP_No = $("#UAdd_SAPNumber").val();
        if (SAP_No !== "") {
            NextTimeSapCutomerValidation(SAP_No).then(isValid => {
                if (isValid) {
                    //console.log("Customer data validated and updated if necessary.");
                } else {
                    //console.log("No action taken.");
                }
            }).catch(error => {
                //console.error("Error during validation:", error);
            });
        }
    });

   function NextTimeSapCutomerValidation(SAP_No) {
    return new Promise((resolve, reject) => {
        var PK_QT_ID = $("#PK_QT_ID").val();
        var PK_JOB_ID = $("#PK_JOB_ID").val();

        $.ajax({
            url: '@Url.Action("CheckCustomerWithSap", "JobMaster")',
            type: "POST",
            data: JSON.stringify({ Sap_No: SAP_No, pk_QT: PK_QT_ID, PK_JOB_ID: PK_JOB_ID }),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                if (response.ValueCount === "2") {
                    showCustomAlert("Cannot add this SAP number to this job because this SAP number cannot be mapped to the job's enquiry customer name.");
                    resolve(false);
                    $("#UAdd_SAPNumber").val("");
                }
               else if (response.ValueCount === "3") {
                   showCustomAlert("This SAP number has Blocked'.");
                    resolve(false);
                    $("#UAdd_SAPNumber").val("");
               }
               else if (response.ValueCount === "4") {
                    showCustomAlert("This Sap Number is not Valid Please Enter Valid Sap Number.");
                    resolve(false);
                    $("#UAdd_SAPNumber").val("");
               }
               else if (response.ValueCount === "5") {
                   const Message = `This SAP number belongs to a cost center:"${response.CostCenter}" and therefore does not allow further actions.`; 
                   alert(Message);
                   resolve(false);
                   $("#UAdd_SAPNumber").val("");
               }
               else if(response.ValueCount === "6") {
                   //a `Not Allow: This SAP number Customer"${response.SapCustomerName}" has already been updated and a job cannot be created.`;
                   alert('Please Contact Tiimes Team.');
                   $('#SAP_No').val("");
                   resolve(false);
               }
               else if (response.ValueCount === "0") {
                   alert("Make sure you're entering the correct SAP number that corresponds to the customer or job.");
                   $('#SAP_No').val("");
                   resolve(false);
               }

               else {
                   resolve(true);
               }
            },
            error: function (xhr, status, error) {
                console.error("AJAX error: " + status + ": " + error);
                reject(error);
            }
        });
    });
}


    function showCustomAlert(message) {

        const alertDiv = document.createElement("div");
        alertDiv.style.position = "fixed";
        alertDiv.style.top = "20px";
        alertDiv.style.left = "50%";
        alertDiv.style.transform = "translateX(-50%)";
        alertDiv.style.backgroundColor = "#f8d7da";
        alertDiv.style.color = "#721c24";
        alertDiv.style.padding = "15px";
        alertDiv.style.border = "1px solid #f5c6cb";
        alertDiv.style.borderRadius = "5px";
        alertDiv.style.fontWeight = "bold";
        alertDiv.style.textAlign = "center";
        alertDiv.style.zIndex = "9999";


        alertDiv.innerHTML = message;


        const okButton = document.createElement("button");
        okButton.innerHTML = "OK";
        okButton.style.marginTop = "10px";
        okButton.style.padding = "10px 20px";
        okButton.style.backgroundColor = "#4CAF50";
        okButton.style.color = "white";
        okButton.style.border = "none";
        okButton.style.borderRadius = "5px";
        okButton.style.cursor = "pointer";


        okButton.addEventListener("click", function () {
            alertDiv.remove();
        });


        alertDiv.appendChild(okButton);


        document.body.appendChild(alertDiv);
    }


   




    </script>

<script>
    function getnewcompany(){
        var pk_QTid=$('#PK_QT_ID').val();
        $.ajax({
            url: '@Url.Action("getCompanyName", "JobMaster")',
            type: "POST",
            data: JSON.stringify({pk_QT: PK_QT_ID}),
            dataType: "json",
            async:false,
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                var result = JSON.parse(response);
                var CompanyName = result[0].ReportNo;
            },
            error: function (xhr, status, error) {
                console.error("AJAX error during update: " + status + ": " + error);
                reject(error);
            }

        })
    }
</script>

<script type="text/javascript">

    function toggleCheckboxes(source) {
        var checkboxes = document.querySelectorAll('.chkCheckBoxId');
        checkboxes.forEach(function(checkbox) {
            checkbox.checked = source.checked;
        });
    }
</script>

<script>
    $(document).ready(function () {
        var PK_job_id =$("#PK_JOB_ID").val();

        $.ajax
         ({
         url: '@Url.Action("GetSapBlock", "JobMaster")',
         type: "POST",
         data: '{Name:' + JSON.stringify(PK_job_id) + '}',
         datatype: "json",
         contentType: "application/json; charset=utf-8",
         async: false,
         success: function (response) {
             //  alert(response);

             if (response == "YES") {
                 
                 $("#textvalue").show();
                
             }
             else if (response == "NO") {

                 $("#textvalue").hide();
                
             }
             else {

             }
         }

         });
        
    
    })

</script>

<script>
    $(document).ready(function () {
        debugger
        var PK_job_id =$("#PK_JOB_ID").val();

        $.ajax
         ({
             url: '@Url.Action("getSapData", "JobMaster")',
             type: "POST",
             data: '{Name:' + JSON.stringify(PK_job_id) + '}',
             datatype: "json",
             contentType: "application/json; charset=utf-8",
             async: false,
             success: function (response) {
                 //  alert(response);
                 debugger
                 if(response !=""){

                     var displayText = 
                       "SapCustomerName: " + response.SapCustomerName + "," +
                       "ClientCode: " + response.ClientCode + "," +
                       "MaterialName: " + response.MaterialName + "," +
                       "State: " + response.State;

                     //$("#Showvalue").val(displayText);
                     $("#Showvalue").html(displayText);
                 }

             }

         });
        
    
    })

    $(document).ready(function ()
    {
        
        if (@ViewBag.Role != "36")
        {
            $('#ddlTypeofReason option[value="SAPUPDATE"]').remove();
        }
    })
</script>