@model TuvVision.Models.JobMasters
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "JobList";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
@*Ashwini Scripts here for datatable starts here*@
@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>


<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>*@
@*Ashwini Scripts here for datatable ends here*@

@using (Html.BeginForm("", null, FormMethod.Get))
{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Job List</h3>
                    @*<button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateBranch", "Branch")'">Add New Branch</button>*@
                    <button type="button"  value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","JobMaster")'"
                            >
                        Export To Excel
                    </button>

                 </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->

            <div class="col-xs-12">
               
            </div><!-- /.data table col -->

            @Html.HiddenFor(x => x.Job_Number, new { id = "Job_Number" })
        <div class="col-xs-12">
            <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lstCompanyDashBoard1)
                            .Build(columns =>
                            {

                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "DeleteJobData",
                                    new { PK_JOB_ID = o.PK_JOB_ID }, new
                                    {
                                        @class = "fa fa-trash-o",
                                        title = "Delete",
                                        onclick = "return confirm('Are you sure you wish to delete ?');"
                                    }));

                                columns.Add(c => c.Job_Number).Titled("Job Number").Encoded(false).RenderedAs(o => Html.ActionLink(o.Job_Number, "JobCreation",  new { PK_JOB_ID = o.PK_JOB_ID }, new { title = "Job Number" })).Filterable(true).FilteredAs("custom").Sortable(true);
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.Job_type).Titled("Job Type");
                                columns.Add(c => c.chkARCType).Titled("ARC/Non ARC");
                                columns.Add(c => c.Client_Name).Titled("Customer Name");
                                columns.Add(c => c.End_User).Titled("End Customer Name");
                                columns.Add(c => c.Service_type).Titled("Service type");
                                columns.Add(c => c.Enquiry_Of_Order).Titled("Enquiry Number");
                                columns.Add(c => c.Quotation_Of_Order).Titled("Quotation Number");
                                columns.Add(c => c.Description).Titled("Project Name");
                                
                                columns.Add(c => c.SAP_No).Titled("Sales Order No");
                                columns.Add(c => c.Customer_PoNo_PoDate).Titled("PO Number");
                                columns.Add(c => c.Customer_PoDate).Titled("PO Date");
                                columns.Add(c => c.Po_Validity).Titled("PO Validity");
                                columns.Add(c => c.Customer_PO_Amount).Titled("PO Amount (INR)");
                                

                                columns.Add(c => c.CreatedBy).Titled("Created By");



                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>


        </div>

        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
    <!--End of Ashwini Code-->


                                        }

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>

@*<script>
    document.getElementById("Job_Number"), function (element) {
               new MvcGrid(element);
           };
</script>*@

<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>




