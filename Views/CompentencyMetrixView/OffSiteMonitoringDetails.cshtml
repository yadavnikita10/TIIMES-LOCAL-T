@model TuvVision.Models.ModelOffSiteMonitoring
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;

@{
    ViewBag.Title = "OffSiteMonitoringDetails";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    List<string> EditCompCategory = ViewBag.EditCompCategory as List<string>;
    List<string> EditProdName = ViewBag.lstScope as List<string>;
    List<string> EditScopeName = ViewBag.EditproductName as List<string>;
    List<string> EditProdName1 = ViewBag.EditproductName1 as List<string>;
}
@helper CustomRenderingOfReport1(TuvVision.Models.ModelOffSiteMonitoring Report)
        {
    <a href="~/IVRReport/@Report.Report" download="download">
        @Report.Report

    </a>
}






@*<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
    <link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />*@
@*<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>*@
@*@*<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
    @*calender control*@


@*<script src="~/AllJsAndCss/jquery-1.10.2.js"></script>
    <script src="~/AllJsAndCss/jquery-ui.js"></script>
    <link href="~/AllJsAndCss/jquery-ui.css" rel="stylesheet" />*@



@*<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    @*<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@
@*<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
    <link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />*@*@*@*@

    <script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
    <link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />




    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }

            table th, td {
                padding: 10px;
            }

        th {
            background-color: #001ED2;
        }

        colgroup {
            width: 250px;
        }

        .addCSS {
            pointer-events: none;
        }
         ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }
      ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    </style>

    @using (Html.BeginForm("OffMonitoringDetails", "CompentencyMetrixView", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
    {
        <input type="hidden" id="hdnDateValidation" />
        <div class="main-content3 xs-max-height grey-bg-f3">
            <div class="grey-bg-f3">
                <!--Start of header-->
                <div class="container-fluid">
                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                        @Html.HiddenFor(m => m.id)
                        <div class="col-xs-12 form-col">
                            <div class="row">
                                <div class="col-xs-12 text-right">
                                    <div class="col-sm-12">

                                        <a href="@Url.Action("MonitoringList", "CompentencyMetrixView")" class="btn btn-default insert-form-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                                    </div>
                                </div>
                                <div class="col-xs-12">
                                    <div class="white-bg section-box-shadow">

                                        <h3 class="form-page-title">DOCUMENT  MONITORING/COMPLETED WORK REVIEW REPORT:F/MR/18 B Rev. 1 Dated 01.04.2023</h3>


                                        @*<h3 class="dynamic-page-title dynamic-page-title-2  ">DOCUMENT  MONITORING/COMPLETED WORK REVIEW REPORT:</h3><br>
                                            <h3 class="dynamic-page-title dynamic-page-title-2  ">F/MR/18 B Rev. 1 Dated 01.04.2023</h3>*@
                                        @*<a href="@Url.Action("IRNReports","InspectionReleaseNote")" class="btn btn-default news-btn" style="float:right;"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                                            <br />*@


                                        <br>


                                        @*<div class="col-xs-12 text-center">*@


                                        <div class="col-xs-12">
                                            <div class="row" id="showvalue">

                                                <div class="col-xs-12 col-sm-2">
                                                    <div class="form-group">
                                                        <label>UIN :</label>
                                                        @Html.TextBoxFor(model => model.UIN, htmlAttributes: new { placeholder = "UIN Number", @class = "form-control ", autocomplete = "off", @readonly = "readonly" })
                                                        @*@Html.TextBoxFor(model => model.Date_Of_Inspection, new { @placeholder = "Date Of Inspection", @class = "form-control" })*@
                                                        @Html.ValidationMessageFor(model => model.UIN, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-2">

                                                    <div class="form-group" style="margin-bottom:8;">
                                                        <label>IVR/IRN :</label>


                                                        @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                                {
                                new SelectListItem{ Text="---SELECT---", Value = "" ,Selected =true},
                                new SelectListItem{ Text="IVR", Value = "IVR" },
                                new SelectListItem{ Text="IRN", Value = "IRN" },



                                }, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })

                                                    </div>


                                                    @Html.HiddenFor(m => m.PK_CALL_ID)


                                                </div>

                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group" style="margin-bottom:8;">
                                                        <label>TUVI Control Number :</label>
                                                        @if (Session["UIDNO"].ToString() == "True")
                                                        {
                                                            @Html.TextBoxFor(model => model.TUVIcontrolnumber, htmlAttributes: new { placeholder = "TUVI Number", @class = "form-control  ", autocomplete = "off", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.TUVIcontrolnumber, "", new { @class = "text-danger validation-msg" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBoxFor(model => model.TUVIcontrolnumber, htmlAttributes: new { placeholder = "TUVI Number", @class = "form-control  ", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.TUVIcontrolnumber, "", new { @class = "text-danger validation-msg" })
                                                        }

                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-1">
                                                    <div class="form-group"  style="margin-bottom:8;">


                                                        @*<button type="Search" id="SearchNew" class="btn btn-default insert-form-btn" style="margin-top: 0px; margin-bottom: -56px;"><i class="fa disabled "></i> Search</button>*@
                                                        @*}
                    else
                    {*@
                                                        @*<input type="search" value="Search" class="btn btn-default insert-form-btn" id="SearchNew" style="margin-top:25px;" />*@

                                                        <button type="button" id="SearchNew" class="btn btn-default insert-form-btn" style="margin-top: 0px; margin-bottom: -56px;"><i class="fa "></i> Search</button>
                                                        @*}*@
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-2">
                                                    <div class="form-group"  style="margin-bottom:8;">

                                                        <label>IVR/IRN List:</label>
                                                        @Html.HiddenFor(m => m.PK_IVR_ID)

                                                        @Html.DropDownListFor(m => m.ReportName, new List<SelectListItem>
                                {
                                new SelectListItem{ Text="---SELECT---", Value = "" ,Selected =true},



                                }, new { @class = "form-control", @id = "ddlReport" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-1">
                                                    <div class="form-group"  style="margin-bottom:8;">
                                                        @if (Session["UIDNO"].ToString() == "True")
                                                        {
                                                           
                                                                    <button type="button" value="Search" id="filter1" class="btn btn-default insert-form-btn hidden" style="margin-top: 0px; margin-bottom: -56px;"><i class="fa "></i> Search</button>
                                                                
                                                            @*<button type="Search" id="btnCopyNew" class="btn btn-default insert-form-btn" style="margin-top:0px;"><i class="fa "></i> Copy </button>*@
                                                            @*<input type="submit" value="search" class="btn btn-default insert-form-btn" id="btnCopyNew" style="margin-top:0px;"/>*@

                                                            @*<input type="search" value="Search" class="btn btn-default insert-form-btn hidden" id="filter1" />*@
                                                            @*<button type="Search" id="filter1" style="margin-top:0;margin-bottom: -59px;" class="btn btn-default insert-form-btn hidden"><i class="fa "></i> Search</button>*@
                                                        }
                                                        else
                                                        {
                                                            <button type="button" value="Search" id="filter1" class="btn btn-default insert-form-btn " style="margin-top: 0px; margin-bottom: -56px;"><i class="fa "></i> Search</button>
                                                            @*<input type="search" value="Search" class="btn btn-default insert-form-btn" id="filter1" style="margin-top:25px;" />*@
                                                            @*<button type="Search" id="filter1" style="margin-top:0;margin-bottom: -59px;" class="btn btn-default insert-form-btn"><i class="fa "></i> Search</button>*@
                                                        }

                                                    </div>
                                                </div>


                                            </div>

                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <hr class="custom-hr1">
                                                </div>
                                            </div>

                                        </div>


                                        @* <label class="form-page-title"></label>*@




                                        @*Copy End*@


                                        <div class="row">
                                            <div class="col-xs-12 ">

                                                

                                                  
                                                            <span style="color:#E12F24;">
                                                                <strong>&nbsp;&nbsp;&nbsp;Notes </strong> :
                                                            </span>
                                                            <span>
                                                                1) <span style="color:#ff0000;">*</span> -<b>Mandatory</b>

                                                            </span>
                                                            <br>
                                                            <br>
                                                            
                                                        


                                                    <div class="col-xs-12">

                                                        @if (Model.Report == null || Model.Report == "")
                                                        {
                                                            <div class="form-group hidden">
                                                                <label>IVR/IRN No:- </label>
                                                                @Html.TextBoxFor(model => model.Report, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Report", @class = "form-control CallRecivedate ", autocomplete = "off", @readonly = "readonly" })


                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            @*<hr class="custom-hr1">*@
                                                            <div class="form-group">

                                                                <h1 class="dynamic-page-title dynamic-page-title-2" style="font-size: 14px;">IRN/IVR Number :       @Html.DisplayFor(m => m.Report)</h1>
                                                                <a id="btnAddToCart" class="btn btn-default insert-form-btn" href="@Url.Content("" + Model.Report)" role="button" download="@Url.Content("~/NCRPDF/")">
                                                                    <i class="fa fa-download"></i>
                                                                </a>
                                                            </div>
                                                        }
                                                    </div>


                                                <div class="form-box" id="textid">

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">

                                                            <div class="form-group">
                                                                <label>Date :</label>
                                                                @Html.TextBoxFor(model => model.Date, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Date", @class = "form-control CallRecivedate ", autocomplete = "off", @readonly = "readonly" })
                                                                @*@Html.TextBoxFor(model => model.Date, new { @placeholder = "Date Of Inspection", @class = "form-control" })*@
                                                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>


                                                        @Html.HiddenFor(m => m.inspectorId)


                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                @*//Rahul Code did not Bind SubJob_No*@
                                                                <label>Inspector Name:</label>

                                                                @Html.TextBoxFor(model => model.InspectorName, new { @placeholder = "Inspector Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.InspectorName, "", new { @class = "text-danger validation-msg" })
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 col-sm-4 ">
                                                            <div class="form-group">
                                                                <label>Inspectror Level of authorisation:<span style="color:#ff0000;">*</span></label>


                                                                @Html.DropDownListFor(m => m.InspectrorLevelofauthorisation, new List<SelectListItem>
                                {
                                //new SelectListItem{ Text="---SELECT---", Value = "" ,Selected =true},
                                new SelectListItem {Text="3",Value="3" },
                                new SelectListItem{ Text="1", Value = "1" },
                                new SelectListItem{ Text="2", Value = "2" },
                                new SelectListItem {Text="4",Value="4" },



                                }, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.InspectrorLevelofauthorisation, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Item Inspected:<span style="color:#ff0000;">*</span></label>
                                                                @if (ViewBag.Jobcheck == "JobCheck")
                                                                {

                                                                    <select id="BrAuditee1" class="form-control form-multiselect-city" multiple="multiple" name="BrAuditee1" placeholder="Select Option" required="required">
                                                                        @foreach (var item in ViewBag.ProjectTypeItems)
                                                                        {
                                                                            if (EditProdName1.Contains(item.Text))
                                                                            {
                                                                                <option value="@item.Value" selected> @item.Text </option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value"> @item.Text </option>
                                                                            }

                                                                        }
                                                                    </select>
                                                                }
                                                                else
                                                                {
                                                                    <select id="BrAuditee1" class="form-control form-multiselect-city" multiple="multiple" name="BrAuditee1" placeholder="Select Option" required="required">

                                                                        @{
                                                                            foreach (var item in ViewBag.ProjectTypeItems)
                                                                            {

                                                                                <option value="@item.Value"> @item.Value </option>


                                                                            }
                                                                        }
                                                                    </select>
                                                                            }
                                                            </div>
                                                        </div>



                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Monitor Name:</label>
                                                                @Html.TextBoxFor(model => model.MonitorName, new { @placeholder = "Monitor Name:", @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.MonitorName, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>




                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Monitor level of authorisation:<span style="color:#ff0000;">*</span></label>
                                                                @Html.DropDownListFor(m => m.Monitorlevelofauthorisation, new List<SelectListItem>
                                {
                                //new SelectListItem{ Text="---SELECT---", Value = "" ,Selected =true},
                                new SelectListItem{ Text="3", Value = "3" },
                                new SelectListItem{ Text="4", Value = "4" },



                                }, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Monitorlevelofauthorisation, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>TUVI control number:</label>
                                                                @*<input type="text" class="form-control" placeholder="Fax Here">*@
                                                                @Html.TextBoxFor(model => model.TUVIConrolNumber, new { @placeholder = "TUV control Number", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.TUVIConrolNumber, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>


                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label> Customer Name:</label>
                                                                @Html.TextBoxFor(model => model.CustomerName, new { @placeholder = "Customer Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>End Customer Name:</label>
                                                                @Html.TextBoxFor(model => model.EndCustomerName, new { @placeholder = "End Customer Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.EndCustomerName, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>



                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Project Name:</label>
                                                                @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                                @Html.TextBoxFor(model => model.ProjectName, new { @placeholder = "Project Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>





                                                    @* Added Shrutika salve 12/05/2022*@
                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label> DEC/PMC/EPC Name:</label>
                                                                @Html.TextBoxFor(model => model.DEC_PMC_EPC_Name, new { @placeholder = "DEC PMC EPC Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.DEC_PMC_EPC_Name, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label> DEC/PMC/EPC Assignment No:</label>
                                                                @Html.TextBoxFor(model => model.DEC_PMC_EPC_Assignment_No, new { @placeholder = "DEC PMC EPC Assignment No", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.DEC_PMC_EPC_Assignment_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Vendor Name:</label>
                                                                @Html.TextBoxFor(model => model.VendorName, new { placeholder = "Vendor Name", @class = "form-control form-control-custom dateofjoinings", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                                                            </div>

                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>PO No.(Client PO on Vendor) :</label>
                                                                @Html.TextBoxFor(model => model.Po_No, new { @placeholder = "PO No", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Po_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>PO Date(Vendor):</label>
                                                                @Html.TextBoxFor(model => model.Date_of_PO, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Po Date", @class = "form-control Date_of_PO1", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Date_of_PO, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                    </div>


                                                    <div class="row">


                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Sub Vendor Name:</label>
                                                                @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                                @Html.TextBoxFor(model => model.Sub_Vendor_Name, new { @placeholder = "Sub Vendor Name", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Sub_Vendor_Name, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>PO No.(Vendor PO on Sub-vendor):</label>
                                                                @*<textarea rows="3" class="form-control" placeholder="Type your address here..."></textarea>*@
                                                                @Html.TextBoxFor(model => model.Po_No_SubVendor, new { @placeholder = "Sub Vendor PO No", @class = "form-control", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Po_No_SubVendor, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>PO Date (Sub Vendor):</label>
                                                                @Html.TextBoxFor(model => model.SubSubVendorDate_of_PO, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Po Date", @class = "form-control SubSubVendorDate_of_PO", autocomplete = "off", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.SubSubVendorDate_of_PO, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                    </div>



                                                    <div class="row">

                                                        <div class="col-xs-12 col-sm-6">
                                                            <div class="form-group">
                                                                <label>Vendor Location:<span style="color:#ff0000;">*</span></label>
                                                                @Html.TextBoxFor(model => model.VendorLocation, htmlAttributes: new { placeholder = "Enter Vendor Location", @class = "form-control Date_of_PO1", autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.VendorLocation, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>


                                                     


                                                    </div>


                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>

                                                    <div class="row">


                                                        <div class="col-xs-12 col-sm-4">

                                                            <div class="form-group">
                                                                <label>Outdoor / On-Site Time (Hrs.):<span style="color:#ff0000;">*</span></label>

                                                                @Html.TextBoxFor(model => model.on_site_time, htmlAttributes: new { placeholder = "Outdoor / On-Site Time (Hrs.)", @class = "form-control", autocomplete = "off", @OnKeyPress = "return isNumber(event)", @readonly = "readonly", @Value = "0" })
                                                                @Html.ValidationMessageFor(model => model.on_site_time, "", new { @class = "text-danger validation-msg" })

                                                            </div>


                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">

                                                            <div class="form-group">
                                                                <label>Office / Off-Site Time (Hrs.):<span style="color:#ff0000;">*</span></label>
                                                                @Html.TextBoxFor(model => model.off_site_time, htmlAttributes: new { placeholder = "Office / Off-Site Time (Hrs.)", @class = "form-control", autocomplete = "off", @OnKeyPress = "return isNumber(event)" })
                                                                @Html.ValidationMessageFor(model => model.off_site_time, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4">

                                                            <div class="form-group">
                                                                <label>Travel Time (Hrs.):<span style="color:#ff0000;">*</span></label>
                                                                @Html.TextBoxFor(model => model.travel_time, htmlAttributes: new { placeholder = "Travel Time (Hrs.)", @class = "form-control", autocomplete = "off", @OnKeyPress = "return isNumber(event)" })
                                                                @Html.ValidationMessageFor(model => model.travel_time, "", new { @class = "text-danger validation-msg" })
                                                            </div>

                                                        </div>

                                                    </div>

                                                    
                                                        <div class="row">

                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    <label>Scope:<span style="color:#ff0000;">*</span></label>

                                                                    @if (ViewBag.check == "productcheck")
                                                                    {
                                                                        <select id="BrScope" class="form-control form-multiselect-city" multiple="multiple" name="BrScope" placeholder="Select Option" required="required">

                                                                            @foreach (var item in ViewBag.Scope)
                                                                            {
                                                                                if (EditScopeName.Contains(item.Name))
                                                                                {
                                                                                    <option value="@item.Code" selected> @item.Name </option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Code"> @item.Name </option>
                                                                                }

                                                                            }
                                                                        </select>

                                                                    }
                                                                    else
                                                                    {



                                                                        //  foreach (var item in ViewData["Scopes"] as IEnumerable<TuvVision.Models.monitors>)
                                                                        <select id="BrScope" class="form-control form-multiselect-city" multiple="multiple" name="BrScope" placeholder="Select Option" required="required">
                                                                            @foreach (var item in ViewBag.Scope)
                                                                            {

                                                                                <option value="@item.Code"> @item.Name </option>


                                                                            }

                                                                        </select>
                                                                    }
                                                                </div>


                                                            </div>

                                                            @*//added by shrutika salve 23042024*@
                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    @Html.CheckBoxFor(model => model.chkMan, new { @onclick = "return false;" })
                                                                    <label for="InActive" style="color:black;padding-top:24px;">Man-Month asgmt.</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-6">
                                                                <div class="form-group">
                                                                    <label>Type Of Assignments:</label>
                                                                    @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                                    @Html.DropDownListFor(m => m.CurrentAssignment, new List<SelectListItem>
                                                {
                                                    new SelectListItem{ Text="---SELECT---", Value = "" },

                                                    new SelectListItem{ Text="Regional - Daily inspection at different location.", Value = "Regional - Daily inspection at different location." },
                                                    new SelectListItem{ Text="Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.", Value = "Site/fixed location Deputed at single vendor/customer location for inspection/QA activity." },
                                                    new SelectListItem{ Text="Office - Major work performed from office (Coodinators/Managers/PCH)", Value = "Office - Major work performed from office (Coodinators/Managers/PCH)" },
                                                    new SelectListItem{ Text="Marketing - Marketing On-Site/off-Site", Value = "Marketing - Marketing On-Site/off-Site" },
                                                    new SelectListItem{ Text="QA - Quality Assurance", Value = "QA - Quality Assurance" },
                                                    new SelectListItem{ Text="ASME/PED/Special assignments", Value = "ASME/PED/Special assignments" },
                                                },

                                                                     new { @class = "form-control", @id = "CA" })
                                                                </div>
                                                            </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">

                                                            <div class="col-xs-12">
                                                                <h5 style="margin-top:10px;margin-bottom:8px; color:blue;">Upload Template:</h5>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-2">


                                                                @*<a class="btn btn-default insert-form-btn" href="~/Excel/template.xlsx" role="button" download="IVRIRNTemplate.xlsx" style="margin-top:0px;">*@
                                                                <a class="btn btn-default insert-form-btn" href="~/Excel/Offsite_Monitoring.xlsx" role="button" download="Offsite_Monitoring.xlsx" style="margin-top:0px;">
                                                                    <i class="fa fa-download"></i>Download Format
                                                                </a>
                                                            </div>

                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    <input type="file" name="FileUpload1" class="form-control" id="FileUpload1">
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-3">
                                                                <button type="button" class="btn btn-default insert-form-btn" style="margin-top:0px;" onclick="uploadFile()"> Upload </button>
                                                            </div>


                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12">
                                                            <div class="form-group">

                                                                <label>Item Description:<span style="color:#ff0000;">*</span></label>
                                                                @Html.TextAreaFor(model => model.itemDescription, new { placeholder = "Enter item Description", @class = "form-control form-control-custom CPIN", @rows = "3", style = "height: 109px;" })
                                                                @Html.ValidationMessageFor(model => model.itemDescription, "", new { @class = "text-danger", @required = "required" })
                                                            </div>
                                                        </div>


                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-12">
                                                            <div class="form-group">

                                                                <label>Reference Document:<span style="color:#ff0000;">*</span></label>
                                                                @Html.TextAreaFor(model => model.Reference_Document, new { placeholder = "Enter Reference Document", @class = "form-control form-control-custom CPIN", @rows = "3", style = "height: 109px;" })
                                                                @Html.ValidationMessageFor(model => model.Reference_Document, "", new { @class = "text-danger", @required = "required" })


                                                            </div>
                                                        </div>


                                                    </div>





                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>






                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="col-xs-12">
                                                                <table id="example" class="display table table-bordered table-striped" cellspacing="0">
                                                                    <thead>
                                                                        <tr class="hidden">

                                                                            <th width="3%"></th>
                                                                            <th width="67%">question</th>
                                                                            <th width="40%"></th>



                                                                        </tr>
                                                                    </thead>
                                                                    @{
                                                                        int j = 0;
                                                                    }

                                                                    @if (ViewBag.QuestionNo != null)
                                                                    {
                                                                        <tbody>
                                                                            <tr class="hidden">
                                                                                <td id="QuestionNO">Question No</td>
                                                                                <td class="question">question</td>
                                                                                <td class="ans"></td>

                                                                            </tr>
                                                                            <tr>
                                                                                <td width="5%" class="form-page-title">Sr.No</td>
                                                                                <td width="67%" class="form-page-title">Parameters</td>
                                                                                <td width="40%" class="form-page-title">Finding</td>

                                                                            </tr>


                                                                            @foreach (var b in ViewData["QuestionNo2"] as IEnumerable<TuvVision.Models.ModelOffSiteMonitoring>)
                                                                            {

                                                                                <tr class="trQuestion">

                                                                                    <td style="text-align: center;">@b.QuestionNo</td>
                                                                                    @Html.HiddenFor(m => m.lstCallDashBoard1[j].QuestionNo, new { Value = b.QuestionNo })
                                                                                    <td>@b.Question <span style="color:#ff0000;">*</span></td>


                                                                                    @if (b.OptButton == "1")
                                                                                    {

                                                                                        <td>
                                                                                            <div id="myRadioGroup">
                                                                                                @if (!String.IsNullOrEmpty(b.Ans))
                                                                                                {
                                                                                                    @*<label>@Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "YES", b.Ans == "YES" ? new { id = "AuthLevel1" + j, Checked = "checked" } : null)YES</label>
                                                            <span> @b.Ans &nbsp;&nbsp;</span>


                                                            <label>@Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "NO", b.Ans == "NO" ? new { id = "AuthLevel2" + j, Checked = "checked" } : null)NO</label>
                                                            <span> @b.Ans &nbsp;&nbsp;</span>

                                                            <label>@Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "NA", b.Ans == "NA" ? new { id = "AuthLevel3" + j, Checked = "checked" } : null)NA</label>
                                                            <span> @b.Ans &nbsp;&nbsp;</span>*@

                                                                                                    @*<label >
                                                              @Html.RadioButtonFor(m => m.Ans[j],"YES",new { @class="Yes"})YES</label>
                                                            <label> @Html.RadioButtonFor(m => m.Ans[j],"NO",new { @class="No"})NO</label>
                                                            <label> @Html.RadioButtonFor(m => m.Ans[j],"NA",new { @class="NA"})NA</label>*@


                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "YES", b.Ans == "YES" ? new { id = "AuthLevel1" + j, Checked = "checked" } : null)
                                                                                                    <label for="Active">YES&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "NO", b.Ans == "NO" ? new { id = "AuthLevel2" + j, Checked = "checked" } : null)
                                                                                                    <label for="InActive">NO&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "NA", b.Ans == "NA" ? new { id = "AuthLevel3" + j, Checked = "checked" } : null)
                                                                                                    <label for="InActive">NA&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                                                                                    @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].Ans, "", new { @class = "text-danger" })
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "Yes", new { id = "AuthLevel1_" + @b.QuestionNo, @class = "optionNo", @name = @b.QuestionNo })
                                                                                                    <label for="Active"> YES&nbsp;&nbsp;&nbsp;&nbsp;</label>

                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "No", new { id = "AuthLevel2_" + @b.QuestionNo, @class = "optionNo", @name = @b.QuestionNo })
                                                                                                    <label for="InActive"> NO&nbsp;&nbsp;&nbsp;&nbsp;</label>


                                                                                                    @Html.RadioButtonFor(m => m.lstCallDashBoard1[j].Ans, "NA", new { id = "AuthLevel3_" + @b.QuestionNo, @class = "optionNo", @name = @b.QuestionNo })
                                                                                                    <label for="InActive"> NA&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                                                                                    @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].Ans, "", new { @class = "text-danger" })
                                                                                                }
                                                                                            </div>

                                                                                        </td>

                                                                                    }

                                                                                    else if (b.checkbox == "1")
                                                                                    {


                                                                                        <td>
                                                                                            @if (Session["Operation"].ToString() == "I")
                                                                                            {
                                                                                                @Html.CheckBoxFor(m => m.Checkbox1, new { @class = "DCheckBox" })

                                                                                                @Html.HiddenFor(m => m.lstCallDashBoard1[j].Checkbox1)


                                                                                            }
                                                                                            else if (Session["Operation"].ToString() == "U")
                                                                                            {
                                                                                                if (Convert.ToString(b.cheboxans) == "1")
                                                                                                {
                                                                                                    bool Checkbox1 = true;
                                                                                                    @Html.CheckBoxFor(m => Checkbox1, new { @Checked = true, @class = "DCheckBox" })
                                                                                                    @Html.HiddenFor(m => m.Checkbox1)
                                                                                                }
                                                                                                else
                                                                                                {

                                                                                                    bool Checkbox1 = false;
                                                                                                    @Html.CheckBoxFor(m => Checkbox1, new { @Checked = true })
                                                                                                    @Html.HiddenFor(m => m.Checkbox1)
                                                                                                }

                                                                                            }


                                                                                        </td>

                                                                                    }
                                                                                    else if (b.FreeText == "1")
                                                                                    {
                                                                                        <td>
                                                                                            @if (b.QuestionNo == "19")
                                                                                            {
                                                                                                @Html.TextAreaFor(model => model.lstCallDashBoard1[j].FreeText1, new { @Value = b.FreeText1, @class = "form-control form-control-custom CPIN", @rows = "5", @columns = "30", @cols = "20", style = "width: 400px; height: 300px;" })
                                                                                                @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].FreeText1, "", new { @class = "text-danger", @required = "required" })
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                @*@Html.TextBoxFor(model => model.lstCallDashBoard1[j].FreeText1, new { @Value = b.FreeText1, style = "width: 350px; height: 50px;" })*@
                                                                                                @Html.TextAreaFor(model => model.lstCallDashBoard1[j].FreeText1, new { @Value = b.FreeText1, @class = "form-control form-control-custom CPIN", @rows = "4", @columns = "30", @cols = "20", style = "width: 400px; height: 180px;" })
                                                                                                @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].FreeText1, "", new { @class = "text-danger", @required = "required" })
                                                                                            }
                                                                                        </td>
                                                                                    }

                                                                                    else if (b.QuestionNo == "19a")
                                                                                    {
                                                                                        <td>
                                                                                            @if (b.Ans != "" || b.Ans != null)
                                                                                            {
                                                                                                // Dropdown for Question 33 with a specific height
                                                                                                @Html.DropDownListFor(model => model.lstCallDashBoard1[j].Ans,
                                                                                                     new SelectList(new[] { "Non-Conformity (NC)", "Concern (C)", "Opportunity for Improvement (OFI)", "Observations (OBS)", "Excellent Practices (EP)" }, b.Ans),
                                                                                                     "Select an option",
                                                                                                   new { @class = "form-control FreeTextBox1", style = "width: 400px; height: 40px;" })
                                                                                                @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].Ans, "", new { @class = "text-danger", @required = "required" })
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                // General Dropdown for other cases
                                                                                                @Html.DropDownListFor(model => model.lstCallDashBoard1[j].Ans,
                                                                                                     new SelectList(new[] { "Non-Conformity (NC)", "Concern (C)", "Opportunity for Improvement (OFI)", "Observations (OBS)", "Excellent Practices (EP)" }, b.Ans),
                                                                                                                                     "Select an option",
                                                                                                             new { @class = "form-control FreeTextBox1", style = "width: 400px; height: 150px;" })
                                                                                                @Html.ValidationMessageFor(model => model.lstCallDashBoard1[j].Ans, "", new { @class = "text-danger" })
                                                                                            }



                                                                                        </td>
                                                                                    }

                                                                                </tr>
                                                                                j++;
                                                                            }


                                                                        </tbody>
                                                                    }

                                                                </table>

                                                            </div>

                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="col-xs-12">
                                                                <table id="example" class="display table table-bordered table-striped" cellspacing="0">
                                                                    <thead>

                                                                        <tr style="color:#FFFFFF">
                                                                            <th class="hidden"></th>
                                                                            <th style="width:60%;">Rate Inspector</th>
                                                                            <th>1</th>
                                                                            <th>2</th>
                                                                            <th>3</th>
                                                                            <th>4</th>
                                                                            <th>5</th>

                                                                        </tr>

                                                                    </thead>
                                                                    @{
                                                                        int i = 0;
                                                                    }


                                                                    <tbody>

                                                                        @*<tr>
                                    @Html.Hidden(m => m.Qidrate, "1")
                                    <td>@Html.RadioButton(m => m.Status)</td>
                                </tr>*@
                                                                        @foreach (var c in ViewData["RateQuestionoff"] as IEnumerable<TuvVision.Models.ModelOffSiteMonitoring>)
                                                                        {
                                                                            <tr>

                                                                                @*<td class="hidden">@Html.HiddenFor(m => m.Qidrate, "1")</td>*@



                                                                                @*<td class="hidden">@c.Qidrate</td>*@
                                                                                @Html.HiddenFor(m => m.lstQuestionrate[i].Qidrate, new { Value = c.Qidrate, @class = "QuestionNo", })
                                                                                <td>@c.RateQuestion</td>
                                                                                @if (c.Status != null && c.Status != 0)
                                                                                {
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 1, c.Status == 1 ? new { id = "Auth1" + i, Checked = "checked", @class = "optionNo1" } : null)</td>
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 2, c.Status == 2 ? new { id = "Auth2" + i, Checked = "checked", @class = "optionNo2" } : null)</td>
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 3, c.Status == 3 ? new { id = "Auth3" + i, Checked = "checked", @class = "optionNo3" } : null)</td>
                                                                                                        <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 4, c.Status == 4 ? new { id = "Auth4" + i, Checked = "checked", @class = "optionNo4" } : null)</td>
                                                                                                        <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 5, c.Status == 5 ? new { id = "Auth5" + i, Checked = "checked", @class = "optionNo5" } : null)</td>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 1, new { id = "Auth1_" + @c.Qidrate, @class = "optionNo1", @name = @c.Qidrate })</td>
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 2, new { id = "Auth2_" + @c.Qidrate, @class = "optionNo2", @name = @c.Qidrate })</td>
                                                                                    <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 3, new { id = "Auth3_" + @c.Qidrate, @class = "optionNo3", @name = @c.Qidrate })</td>
                                                                                                        <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 4, new { id = "Auth4_" + @c.Qidrate, @class = "optionNo4", @name = @c.Qidrate })</td>
                                                                                                        <td>@Html.RadioButtonFor(m => m.lstQuestionrate[i].Status, 5, new { id = "Auth5_" + @c.Qidrate, @class = "optionNo5", @name = @c.Qidrate })</td>
                                                                                }

                                                                            </tr>

                                                                            i++;
                                                                        }

                                                                        <tr>

                                                                            <td><b>Rating scale:1-Poor, 2-Average, 3-Good, 4-Very Good, 5-Excellent</b></td>

                                                                        </tr>
                                                                        @if (Model.RatingAvg != null && Model.RatingAvg != 0)
                                                                        {
                                                                            <tr>
                                                                                <td style="border:none;"></td>
                                                                                <td>
                                                                                    <b>Scale:</b>
                                                                                </td>
                                                                                <td colspan="4">
                                                                                    @Html.TextBoxFor(model => model.RatingAvg)out 5
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                        else
                                                                        {

                                                                        }
                                                                    </tbody>

                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    @* Added By shrutika salve 07092023*@

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <label><i class="fa fa-paperclip" style="color:black;"></i> @*Related Documents*@ Attachements : </label> <br />
                                                                <input type="file" class="filepond" name="FileUpload" id="FileUpload" multiple>

                                                                <input hidden="hidden" id="FileUpload" name="FileUpload" class="hidden" />
                                                            </div>
                                                        </div>

                                                        @if (Model != null)
                                                        {
                                                            if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                            {
                                                                <input type="hidden" value="Yes" name="testing" id="testing" />
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        <ul class="Attachment">
                                                                            @foreach (var item in Model.FileDetails)
                                                                            {
                                                                                <li>
                                                                                    @*<a class="title" href="@Url.Action("Download1", "VisitReport", new { @p = item.IDS + item.Extension, @d= item.PK_ID })">@item.FileName</a>*@
                                                                                    @*<a class="title1" href="~/VisitReport/Download1/?d=@item.FileName">@item.FileName</a>*@
                                                                                    <a class="title1" href="~/CompentencyMetrixView/Download/?d=@item.PK_ID">@item.FileName</a>
                                                                                    <a href="javascript:void(0);" data-id="@item.PK_ID" class="deleteItem">X</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <input type="hidden" value="" name="testing" id="testing" />
                                                                <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                        }
                                                    </div>









                                                    @*added By shrutika salve 08-06-2023*@
                                                    @if (@Model.CreatedDate != null)
                                                    {
                                                        <label>CreatedBy:</label>
                                                        <label>@Model.MonitorName</label>
                                                        <br />
                                                        <label>CreatedDate</label>
                                                        <label>@Model.CreatedDate</label>
                                                    }
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <br />

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div class="form-group">

                                                            <div class="col-xs-12 col-sm-12">

                                                                <label for="sel-options">Comments by Inspector:</label>
                                                                <div>
                                                                    @if (Session["fullName"].ToString() == Model.InspectorName)
                                                                    {
                                                                        @Html.TextAreaFor(model => model.InspectorComment, new { placeholder = "Enter Comments by Inspector", @class = "form-control form-control-custom CPIN", @rows = "3", style = "height: 109px;" })
                                                                        
                                                                        @*@Html.TextBoxFor(model => model.InspectorComment, new { style = "width: 1300px; height: 60px;", placeholder = "Enter Comments by Inspector" })*@
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextAreaFor(model => model.InspectorComment, new { placeholder = "Enter Comments by Inspector", @class = "form-control form-control-custom CPIN", @rows = "3", @readonly = "readonly", style = "height: 109px;" })
                                                                        @*@Html.TextBoxFor(model => model.InspectorComment, new { style = "width: 1300px; height: 60px;", placeholder = "Enter Comments by Inspector" })*@
                                                                    }
                                                                    <div>
                                                                        @*added By shrutika salve 07-06-2023*@
                                                                        @if (@Model.inspectorCommetName != null && @Model.inspectorCommetName != "")
                                                                        {
                                                                            <label>InspectorName:</label>
                                                                            <label>@Model.inspectorCommetName</label>
                                                                            <br />
                                                                                <label>Inspector Comment Date:</label>
                                                                                <label>@Model.InspectorCommentDate</label>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="hidden">
                                                                                <label>InspectorName:</label>
                                                                                <label>@Model.inspectorCommetName</label>
                                                                                <br />
                                                                                <label>Inspector Comment Date:</label>
                                                                                <label>@Model.InspectorCommentDate</label>
                                                                            </div>
                                                                        }
                                                                    </div>

                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>


                                                <br />
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <div class="col-xs-12 col-sm-12">

                                                                <label for="sel-options">Reporting manager comments:</label>

                                                                @if (Session["Branch"].ToString() == "True")
                                                                {
                                                                    @Html.TextAreaFor(model => model.Reporting_manager_comments, new { placeholder = "Enter Reporting Manager Comments", @class = "form-control form-control-custom CPIN", @rows = "3", style = "height: 109px;" })
                                                                    @*@Html.TextBoxFor(model => model.Reporting_manager_comments, new { style = "width: 1300px; height: 60px;", placeholder = "Enter Reporting Manager Comments"})*@
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextAreaFor(model => model.Reporting_manager_comments, new { placeholder = "Enter Reporting Manager Comments", @class = "form-control form-control-custom CPIN", @rows = "3", @readonly = "readonly", style = "height: 109px;" })
                                                                    @*@Html.TextBoxFor(model => model.Reporting_manager_comments, new { style = "width: 1300px; height: 60px;", placeholder = "Enter Reporting Manager Comments", @readonly = "readonly" })*@
                                                                }
                                                                <div>
                                                                    @*added By shrutika salve 07-06-2023*@
                                                                    @if (@Model.ManagerCommentName != null && @Model.ManagerCommentName != "")
                                                                    {
                                                                        <label>Manager Name:</label>
                                                                        <label>@Model.ManagerCommentName</label>
                                                                        <br />
                                                                                    <label>manager comments Date:</label>
                                                                                    <label>@Model.ManagerCommentDate</label>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="hidden">
                                                                            <label>Manager Name:</label>
                                                                            <label>@Model.ManagerCommentName</label>
                                                                            <br />
                                                                            <label>manager comments Date:</label>
                                                                            <label>@Model.ManagerCommentDate</label>
                                                                        </div>
                                                                    }
                                                                </div>




                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>

                                                @*added By shrutika salve 07-06-2023*@
                                                @Html.HiddenFor(m => m.inspectorCommetName)
                                                @Html.HiddenFor(m => m.InspectorCommentDate)
                                                @Html.HiddenFor(m => m.ManagerCommentName)
                                                @Html.HiddenFor(m => m.ManagerCommentDate)

                                                @*<div class="form-group" style="padding-top:10px; width:100px;">
                                                        <label><span class="text-danger"></span></label>

                                                        <input type="submit" name="save" value="Save" id="btnUserSave1" class="btn btn-primary insert-form-btn" style="padding-top:10px; width:1300PX; margin-left: 19px;" />

                                                    </div>*@
                                                <div class="col-xs-12 text-center">


                                                    <button type="submit" id="btnUserSave1" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Save </button>

                                                </div>



                                                <br />
                                                <br />

                                                <div class="row">

                                                    <div id="dynamicTableContainer"></div>
                                                </div>


                                            </div>

                                        </div>
                                    </div>

                                </div>
                                <!--Contact Details By Manoj -->
                            </div><!-- /.box-shadow -->
                            <!-- /.col -->
                        </div><!-- /.row -->
                    </div><!-- /.col -->
                </div><!-- /.row -->
            </div><!-- /.container-fluid -->
            <!--End of header-->
        </div>


                                                                        }





    <script type="text/javascript">


        @*$('#SearchNew').click(function () {
            
            var SubJobNo = $('#TUVIcontrolnumber').val();
            var Type = $('#Type').val();
            $.ajax({
                type: "post",
                url: '@Url.Action("GetReportNoForCopy", "CompentencyMetrixView")',
                //data: { CompanyName: $('#CompanyName').val() },
                data: { SubJobNo: SubJobNo, Type: Type },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    // alert(data)
                    $("#Others").show();
                    $("#Systemhide").hide();
                    ///alert(data)

                    var district = "<select id='ddlReport'>";
                    district = district + '<option value="">--Select Report--</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].PK_CALL_ID + '>' + data[i].ReportName + '</option>';
                    }
                    district = district + '</select>';
                    $('#ddlReport').html(district);
                    alert("Report Search Successfully...!")
                }
            });
            //});
        });*@

        $('#SearchNew').click(function () {
            var SubJobNo = $('#TUVIcontrolnumber').val();
            var Type = $('#Type').val();

            $.ajax({
                type: "post",
                url: '@Url.Action("GetReportNoForCopy", "CompentencyMetrixView")',
                data: { SubJobNo: SubJobNo, Type: Type },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    console.log("AJAX Response: ", data); // Debug response

                    if (data && data.length > 0) {
                        $("#Others").show();
                        $("#Systemhide").hide();

                        var district = "<select id='ddlReport'>";
                        district += '<option value="">--Select Report--</option>';
                        for (var i = 0; i < data.length; i++) {
                            var value = data[i].PK_CALL_ID || '';
                            var name = data[i].ReportName || 'Unnamed Report';
                            district += `<option value="${value}">${name}</option>`;
                        }
                        district += '</select>';
                        $('#ddlReport').html(district);

                        alert("Report Search Successful!");
                    } else {
                        alert("No reports found for the given criteria.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error: ", error);
                    alert("An error occurred while fetching reports. Please try again.");
                }
            });
        });


    </script>

<script>

    function uploadFile() {
        debugger;
        var formData = new FormData();
        var fileInput = document.getElementById("FileUpload1");

        if (fileInput.files.length > 0) {
            formData.append("FileUpload1", fileInput.files[0]);

            $.ajax({
                url: '/CompentencyMetrixView/OffsiteExcelUpload',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        // Process the answers dictionary
                        $.each(response.answers, function (questionNumber, answer) {
                            // alert(questionNumber);
                            //alert(questionNumber , answer);
                            var id;
                            // Generate the radio button ID dynamically based on question number and answer
                            if (answer === 'Yes') {
                                id = "1";
                            }
                            else if (answer === 'No') {
                                id = "2";
                            }
                            else {
                                id = "3";
                            }
                            if (answer === 'Yes' || answer === 'No' || answer === 'NA') {

                                var radioId = 'AuthLevel' + id + '_' + questionNumber;
                                //alert(radioId + "-");
                                $("#" + radioId).prop('checked', true);

                            }
                            if (questionNumber === '20') {
                                //alert(questionNumber);
                                //if (answer === 'Yes') {
                                //alert(answer);
                                $("#Checkbox1").prop('checked', true)
                                //}
                            }



                            if (questionNumber === '22a') {
                                newQue = "1";

                                if (answer === '1') {

                                    radioIdNew = 'Auth' + answer + '_' + newQue;
                                    //alert(radioIdNew);
                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                            }

                            else if (questionNumber === '22b') {
                                newQue = "2";

                                if (answer === '1') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {

                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                // alert(radioIdNew);
                            }
                            else if (questionNumber === '22c') {
                                newQue = "3";
                                if (answer === '1') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                            }
                            else if (questionNumber === '22d') {
                                newQue = "4";
                                if (answer === '1') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                            }
                            else if (questionNumber === '22e') {
                                newQue = "5";
                                if (answer === '1') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                            }
                            else if (questionNumber === '22f') {
                                newQue = "6";
                                if (answer === '1') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '2') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '3') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '4') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                                else if (answer === '5') {
                                    radioIdNew = 'Auth' + answer + '_' + newQue;

                                    $("#" + radioIdNew).prop('checked', true);
                                }
                            }


                            if (response.values) {

                                $("#itemDescription").val(response.values.itemDescription);
                                $("#Reference_Document").val(response.values.Reference_Document);
                                $("#lstCallDashBoard1_4__QuestionNo").val(response.values.ifyes);
                                $("#lstCallDashBoard1_13__QuestionNo").val(response.values.ifIRN);
                                $("#lstCallDashBoard1_35__QuestionNo").val(response.values.rptprcs);
                                $("#lstCallDashBoard1_49__FreeText1").val(response.values.trngtpc);
                                $("#lstCallDashBoard1_51__FreeText1").val(response.values.observation);
                                $("#lstCallDashBoard1_52__Ans").val(response.values.obscat);
                            }


                        });

                        //alert(JSON.stringify(response.tablehtml));

                        if (response.tablehtml) {
                            // Parse the tablehtml JSON (it should be an array of arrays)
                            const tableData = JSON.parse(response.tablehtml);

                            // Create a <p> tag with the text "Observations Category" and add it above the table
                            const pTag = document.createElement('p');
                            pTag.textContent = 'Observations Category';  // Set the text of the <p> tag
                            pTag.style.fontWeight = 'bold';  // Optional: make the text bold
                            pTag.style.textAlign = 'left';
                            pTag.style.marginLeft = '20px'; // Optional: center the text

                            // Create a new HTML table element
                            const table = document.createElement('table');
                            table.style.border = '1px solid black';
                            table.style.borderCollapse = 'collapse';
                            table.style.marginLeft = '20px';
                            table.style.width = '80%';

                            // Populate the table rows and cells
                            tableData.forEach(row => {
                                const tr = document.createElement('tr');

                                row.forEach(cellText => {
                                    const td = document.createElement('td');
                                    td.textContent = cellText; // Add cell text
                                    td.style.border = '1px solid black'; // Add cell border
                                    td.style.padding = '5px'; // Add padding for better readability
                                    tr.appendChild(td); // Add cell to row
                                });

                                table.appendChild(tr); // Add row to table
                            });

                            // Append the table to a container on the page
                            const container = document.getElementById('dynamicTableContainer'); // Ensure this element exists in your HTML
                            container.innerHTML = ''; // Clear existing content
                            container.appendChild(pTag);
                            container.appendChild(table); // Add the new table
                        }

                        // Process other fields (e.g., itemDescription, Reference_Document)

                    } else {
                        alert("Error: " + response.message);
                    }
                },

                error: function (xhr, status, error) {
                    alert("An error occurred: " + xhr.responseText);
                }
            });
        } else {
            alert("Please select a file to upload.");
        }
    }
</script>


    <script>
        $(document).ready(function () {
            $('#Type').on('change', function () {
                
                var multipleValues = $("#Type").val();
                if (multipleValues == 'IVR') {
                    $("#visible").show();

                }
                else if (multipleValues == 'IRN') {
                    $("#visible").show();
                }
                else {
                    $("#visible").hide();
                }
            })
        });
    </script>

    <script>

        $('.form-multiselect-city').multiselect({
            enableFiltering: true,
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true
        });
    </script>





    <script>
        $(function () {
            debugger;
            $("#TUVIcontrolnumber").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetMentoringTUVControll", "CompentencyMetrixView")',
                        data: JSON.stringify({ "input": request.term }),
                        datatype: "json",
                        type: "POST",
                        contentType: "application/json;charset-utf-8",
                        success: function (data) {

                            response($.map(data, function (item) {
                                //alert(JSON.stringify(data))
                                return { label: item.TUVIcontrolnumber, value: item.TUVIcontrolnumber };

                            })
                        )
                        },
                        error: function (req, status, err) {
                            console.log('Something went wrong', status, err);
                        },
                        minlength: 3
                    });
                }
            });
        });
    </script>


    <script>
        $("#btnCopyNew").click(function () {
            debugger;

            if ($("#TUVIcontrolnumber").val() != "") {
                debugger;


                var Address = {};

                Address.url = '@Url.Action("getAutoTuvControll", "CompentencyMetrixView")';

                Address.type = "Get";
                Address.data = { Call_No: $("#TUVIcontrolnumber").val() };
                Address.datatype = "json";
                Address.ContentType = "application/json";
                Address.success = function (address) {
                    $("#Date").val(address.Date).val();
                    $("#InspectorName").val(address.InspectorName).val();
                    $("#TUVIcontrolnumber").val(address.TUVIcontrolnumber).val();
                    $("#CustomerName").val(address.CustomerName).val();
                    $("#EndCustomerName").val(address.EndCustomerName).val();
                    $("#ProjectName").val(address.ProjectName).val();
                    $("#VendorName").val(address.VendorName).val();
                    $("#VendorLocation").val(address.VendorLocation).val();



                };
                Address.error = function () { alert("Error in Getting Address !"); };
                $.ajax(Address);
            }
            else {
                //$("#Vendor_Name").empty();
                //$("#Vendor_Location").empty();
                //$("#TUVI_control_number").empty();
                //$("#Address").prop("disabled", true);
            }
        });

    </script>

    <script>
        $('#filter1').click(function () {

            debugger;

            var ReportName = $('ReportName option:selected').text();

            var PK_CALL_ID = $("#ddlReport option:selected").val();

            var Type = $("#Type").val();
            // var ReportName = $("#ddlReport").val();




            debugger;

            $.ajax({
                url: '@Url.Action("GetdataCopy", "CompentencyMetrixView")',
                type: "post",
                datatype: 'json',
                data: { Type: Type, PK_CALL_ID: PK_CALL_ID },
                success: function (address) {
                    //alert(address.TUVIConrolNumber);
                    // $('#CNNO').val(ObjModelQuotationMast.Sap_And_Controle_No).val()
                    debugger;
                    $("#Date").val(address.Date).val();
                    $("#InspectorName").val(address.InspectorName).val();
                    $("#TUVIcontrolnumber").val(address.TUVIcontrolnumber).val();
                    $("#CustomerName").val(address.CustomerName).val();
                    $("#EndCustomerName").val(address.EndCustomerName).val();
                    $("#ProjectName").val(address.ProjectName).val();
                    $("#VendorName").val(address.VendorName).val();
                    $("#VendorLocation").val(address.VendorLocation).val();
                    $("#TUVIConrolNumber").val(address.TUVIConrolNumber).val();
                    $("#PK_CALL_ID").val(address.PK_CALL_ID).val();
                    $("#DEC_PMC_EPC_Name").val(address.DEC_PMC_EPC_Name).val();
                    $("#Po_No").val(address.Po_No).val();
                    $("#inspectorId").val(address.inspectorId).val();
                    $("#DEC_PMC_EPC_Assignment_No").val(address.DEC_PMC_EPC_Assignment_No).val();
                    $("#Date_of_PO").val(address.Date_of_PO).val();
                    $("#Sub_Vendor_Name").val(address.Sub_Vendor_Name).val();
                    $("#Po_No_SubVendor").val(address.Po_No_SubVendor).val();
                    $("#SubSubVendorDate_of_PO").val(address.SubSubVendorDate_of_PO).val();
                    //$("#BrAuditee1").val(address.Item_Inspected).val();
                    var myArray = address.Item_Inspected.split(",");
                    for (var i = 0; i < myArray.length; i++) {
                        if (address.Item_Inspected.indexOf(myArray[i]) >= 0) {
                            //multi.options[i].selected = true;
                            $("#BrAuditee1").multiselect('select', myArray[i])
                        }
                    }
                    if (address.chkMan === true) {
                        $("#chkMan").prop("checked", true);
                    } else {
                        $("#chkMan").prop("checked", false);
                    }
                    alert("Insert Data Successfully!");

                }
            });



        });
    </script>

    <script>
        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            //  alert(evt.keyCode);
            var charCode = (evt.which) ? evt.which : evt.keyCode;


            if ((charCode > 31 && (charCode < 48 || charCode > 57)) && (charcode != 46)) {
                return false;
            }
            return true;
        }
    </script>

    <script>
        function DateValidation() {
            debugger;
            var Date = $("#Date").val();
            var Onsite = $("#on_site_time").val();
            var Offsite = $("#off_site_time").val();
            var TravelTime = $("#travel_time").val();
            var monitor = $("#Monitor_Name").val();
            debugger;
            $.ajax({
                url: '@Url.Action("validation", "CompentencyMetrixView")',
                type: "POST",
                dataType: 'json',
                async: false,
                data: JSON.stringify({ "Onsite": Onsite, "Offsite": Offsite, "TravelTime": TravelTime, "monitor": monitor, "Date": Date }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    debugger;
                    //alert(response);
                    var Result = response.split('_');
                    if (Result[0] == 'Failed') {
                        alert(Result);
                        $("#hdnDateValidation").val("1");
                    }
                    else {
                        // Validation passed, submit the form
                        $("#hdnDateValidation").val("0");
                    }
                },
                error: function () {
                    alert("Error in getting data!");
                    $("#hdnDateValidation").val("1");
                    return false;
                }
            });

            // Prevent the form from being submitted immediately
        }
    </script>


    <script>

        function AllValidation() {
            if (validateform()) {
                //alert("Form Validation True");
                DateValidation();
                debugger;
                if ($("#hdnDateValidation").val() == '0') {
                    //alert("DateValidation True");
                    if (validation()) {
                        //alert("Validation True");
                        return true;
                    }
                    else {
                        //alert("Validation False");
                        return false;
                    }

                }
                else {
                    //alert("Date Validation False");
                    return false;
                }
            }
            else {
                // alert("Form Validation False");
                return false;
            }
        }
        $("#btnUserSave1").click(function myfunction() {

            if (AllValidation()) {
                // alert("all Validation Are True");
                $("#form1").submit();
            }
            else {
                //alert("all Validation False");
                return false;
            }

        });



        function validation() {
            debugger;
            if (!$("#example").valid()) {
                return false;
            }
        }



        function validateform() {
            debugger

            var Scope = $("#BrScope").val();
            var ItemName = $("#BrAuditee1").val();
            var InspectrorLevelofauthorisation = $("#InspectrorLevelofauthorisation").val();
            var VendorLocation = $("#VendorLocation").val();
            var Reference_Document = $("#Reference_Document").val();
            var Monitorlevelofauthorisation = $("#Monitorlevelofauthorisation").val();
            var itemDescription = $("#itemDescription").val();
            var TT = parseInt($("#travel_time").val());// $("#TravelTime").val();
            var ODT = $("#on_site_time").val();
            var ET = $("#off_site_time").val();
            var checkboxes = $('input.DCheckBox:checked').length;



            //var a;
            //comment added By shrutika salve 26/05/20213

            //$("#example tr").each(function (index, row) {
            //    $(row).find("td").each(function (cellIndex, cell) {

            //        var value = $(cell).text();
            //        if (value == "21") {
            //            debugger;
            //            //$("input:radio.someClass:checked");
            //            var className = "lstCallDashBoard1[53].Ans";
            //            //var groupname = $('input[name="' + className + '"]:unchecked').val();
            //            var selectedOption = $('input[name="' + className + '"]:checked').val();
            //            if (selectedOption === undefined) {
            //                // alert("Please Check Q. No 35");
            //                a = '1';

            //                return false;
            //            }




            //        }
            //    });
            //});


            //if (a == '1') {
            //    alert("Please select Q.No 21 ANS")
            //    return false;
            //}

            if (0 <= parseInt(ODT) && parseInt(ODT) <= 14) {

            }
            else {
                alert("Please select On site Time between 0 to 14!");
                $("#on_site_time").focus()
                return false;
            }
            if (0 <= parseInt(ET) && parseInt(ET) <= 14) {

            }
            else {
                alert("Please select Office Time between 0 to 14!");
                $("#off_site_time").focus()
                return false;
            }
            if (0 <= parseInt(TT) && parseInt(TT) <= 14) {

            }
            else {
                alert("Please select Travel Time between 0 to 14!");
                $("#travel_time").focus()
                return false;
            }

            if ((VendorLocation == null || VendorLocation == "")) {
                alert("Please Enter Vendor Location ");
                $("#Scope").focus();
                return false;
            }






            if ((Scope == null || Scope == "")) {
                alert("Please Select Scope");
                $("#Scope").focus();
                return false;
            }
            if ((InspectrorLevelofauthorisation == null || InspectrorLevelofauthorisation == "")) {
                alert("Please Select Inspector Level of authorisation");
                $("#InspectrorLevelofauthorisation").focus();
                return false;
            }

            if ((ItemName == null || ItemName == "")) {
                alert("Please select Item Name");
                $("#ItemName").focus();
                return false;
            }
            if ((travel_time == null || travel_time == "")) {
                alert("Please Enter Travel Time");
                $("#travel_time").focus();
                return false;
            }
            if ((Monitorlevelofauthorisation == null || Monitorlevelofauthorisation == "")) {
                alert("Please Enter Monitor level of authorisation");
                $("#Monitorlevelofauthorisation").focus();
                return false;
            }
            if (checkboxes == "0") {
                alert("Please Fill CheckBox. !!!");
                $("#Checkbox1").focus();
                return false;
            }
            if (itemDescription == "" || itemDescription == null) {
                alert(" Please Enter Details item Description !");
                $("#itemDescription").focus();
                return false;
            }
            if (Reference_Document == "" || Reference_Document == null) {
                alert(" Please Enter Details Reference_Document !");
                $("#itemDescription").focus();
                return false;
            }


            return true;


        }


    </script>



    @*<script>
        $(document).ready(function () {
            debugger
            if ('@Session["LoginName"].ToString()' != '@Model.MonitorName') {
                $("#textid").addClass('addCSS');
            }

            

        })
    </script>*@

<script>
    $(document).ready(function () {
        debugger;
        var a = '@Session["LoginName"].ToString()';
        var b = '@Model.MonitorName';

        if (a.toUpperCase() != b.toUpperCase()) {

            $("#textid").addClass('addCSS');
        }

    })
</script>


<!--filepond-->
<!-- Load FilePond library -->

<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>

<script>
    FilePond.registerPlugin(
    // encodes the file as base64 data
    FilePondPluginFileEncode,
    // validates the size of the file
    FilePondPluginFileValidateSize,
    // corrects mobile image orientation
    FilePondPluginImageExifOrientation,
    // previews dropped images
    FilePondPluginImagePreview
    );
    // Select the file input and use create() to turn it into a pond
    FilePond.create(document.querySelector('.filepond'));
</script>

<script>
    FilePond.setOptions({
        server: '@Url.Action("TemporaryFilePathDocumentAttachment", "CompentencyMetrixView")'
    });
</script>



<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            var EnquiryID = $("#PK_ID").val();
            if (confirm('Do you really want to Delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteConFile")',
                    type: 'POST',
                    data: { id: $(this).data('id'), EnquiryID: $("#EQ_ID").val() }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("Something went Wrong, Please try again!");
                })
            }
        });
    });
</script>




    @{
        if ((Convert.ToString(TempData["UpdateData"])) != "")//&& Convert.ToString(TempData["UpdateData"]) != null)
        {

            <script type="text/javascript" language="javascript">
                var msg = '@TempData["UpdateData"]';

                alert(msg);
            </script>
            TempData["UpdateData"] = null;
        }
    }
