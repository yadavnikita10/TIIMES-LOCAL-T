@model TuvVision.Models.CompentencyMetrixView
@{
    ViewBag.Title = "CompentencyMetrixView";
     Layout = "~/Views/Shared/_TuvVision.cshtml";
}


<link href="~/AllJsAndCss/css/bootstrap-timepicker.css" rel="stylesheet" />
<link href="~/AllJsAndCss/css/MvcBootstrapTimepicker.css" rel="stylesheet" />
<script src="~/AllJsAndCss/js/bootstrap.min.js"></script>


<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" type="text/javascript"></script>

<script src="~/AllJsAndCss/js/bootstrap-timepicker.js"></script>
<script src="~/AllJsAndCss/js/MvcBootstrapTimepicker.js"></script>

<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("ListCompentencyMetrixView", "CompentencyMetrixView")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Competency Matrix View</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4" style="pointer-events:none;">
                                                        <div class="form-group">
                                                            <label>Candidate Name </label>
                                                            @Html.TextBoxFor(model => model.CandidateName, htmlAttributes: new { placeholder = "Candidate Name", @class = "form-control", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.CandidateName, "", new { @class = "text-danger validation-msg" })

                                                        </div>

                                                    </div>
                                                   
                                                    
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Location </label>
                                                            @Html.TextBoxFor(model => model.Location, new { @placeholder = "Location", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Educational Qualification </label>
                                                            @Html.TextBoxFor(model => model.EducationalQualification, new { @placeholder = "Educational Qualifications", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.EducationalQualification, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Professional Qualifications</label>
                                                            @Html.TextBoxFor(model => model.AdditionalQualification, htmlAttributes: new { placeholder = "Professional Qualifications", @class = "form-control", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.AdditionalQualification, "", new { @class = "text-danger validation-msg" })

                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Designation </label>
                                                            @Html.TextBoxFor(model => model.Designation, new { @placeholder = "Designation", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>TUVI Email ID </label>
                                                            @Html.TextBoxFor(model => model.EmailId, new { @placeholder = "Email Id", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Mobile Number </label>
                                                            @Html.TextBoxFor(model => model.CellPhoneNumber, htmlAttributes: new { placeholder = "Cell Phone Number", @class = "form-control", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new { @class = "text-danger validation-msg" })

                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Joining Date </label>
                                                            @*@Html.TextBoxFor(model => model.JoiningDate, "{0:dd/MMMM/yyyy}", htmlAttributes: new { placeholder = "Select Joining Date", @class = "form-control form-control-custom JoiningDate", autocomplete = "off" })*@


                                                            @Html.TextBoxFor(model => model.JoiningDate1, htmlAttributes: new { placeholder = "Joining Date", @class = "form-control", autocomplete = "off" ,@readonly=true } )

                                                          

                                                          

                                                            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Previous Experience In Years Ex-(02:05)(YY:MM) </label>
                                                            @*@Html.BootstrapTimePicker("SelectedTime");*@
                                                            @Html.TextBoxFor(model => model.TotalExperienceInYears, new { @placeholder = "Total Experience In Years", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.TotalExperienceInYears, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Candidate Id </label>
                                                            @Html.TextBoxFor(model => model.CandidateId, htmlAttributes: new { placeholder = "Surveyor Id", @class = "form-control", autocomplete = "off", @readonly = "readonly" })


                                                            @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger validation-msg" })

                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="row">

                                                    @*<div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Number Of Years With TUV India </label>
                                                            @Html.TextBoxFor(model => model.NumberOfYearsWithTUVIndia, htmlAttributes: new { placeholder = "Number Of Years With TUV India ", @class = "form-control", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.NumberOfYearsWithTUVIndia, "", new { @class = "text-danger validation-msg" })

                                                        </div>

                                                    </div>*@

                                                </div>

                                                @if (ViewData["Name"] != null)
                                                {
                                                    <div class="col-xs-12">
                                                        <table id="example" cellspacing="0" width="100%" class="table table-bordered">
                                                            <thead>
                                                                <tr style="background-color:blue; color:white;">
                                                                    <th class="remove-search less-width">Check</th>
                                                                    <th class="remove-search less-width">Type</th>
                                                                    

                                                            </thead>
                                                            <tbody id="partialtabledata">


                                                                @if (ViewData["Name"] != null)
                                                                {
                                                                    foreach (var item in ViewData["Name"] as IEnumerable<TuvVision.Models.CompentencyMetrixView>)
                                                                    {
                                                                        <tr>

                                                                            <td>

                                                                                @if (Model == null)
                                                                                {
                                                                                    <input type="checkbox" class="checkBox" name="ID_" value="@item.CompentencyMetrixMasterId">
                                                                                }
                                                                                else if (Model.CheckBoxValue.Contains(Convert.ToString(item.CompentencyMetrixMasterId)))
                                                                                {
                                                                                    <input type="checkbox" class="checkBox" name="ID_" value="@item.CompentencyMetrixMasterId" checked="checked">
                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" class="checkBox" name="ID_" value="@item.CompentencyMetrixMasterId">
                                                                                }


                                                                            </td>
                                                                            <td>@item.CompentencyMetrixMasterName</td>
                                                                            

                                                                        </tr>
                                                                    }
                                                                }

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                }





                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">

                                                            <button type="submit" class="btn btn-default insert-form-btn"> Save </button>
                                                            @*<a href="@Url.Action("CompentencyMatrixMaster", "CompentencyMatrix", new { })" class="btn btn-default insert-form-btn" title="Stamp Master">Add Scope</a>*@

                                                        </div>
                                                    </div>
                                                </div>


                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*Auto Fill Name*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

@*<script type="text/javascript">*@
<script>
$(document).ready(function () {
    debugger
    $("#CandidateName").autocomplete({
        
        source: function (request, response) {


               $.ajax({
                 
                   url: '@Url.Action("GetSurveyorName", "StampRegister")',
                 
                   type: "POST",
                   dataType: "json",
                   data: { Prefix: request.term },
                   success: function (data) {

                       response($.map(data, function (item) {

                           return {
                               label: item.SurveyorName, value: item.SurveyorName
                               
                           };

                       }))

                   },
                   select: function(event, ui) {
                       event.preventDefault();
                       $('#Location').val(ui.item.SurveyorId);
                   },
                   focus: function(event, ui) {
                       event.preventDefault();
                       $('#Location').val(ui.item.SurveyorId);
                   },

                   //select: function (event, ui) {
                   //    $('#Location').val(ui.item.SurveyorId);
                   //    return false;
               //},
                   minLength: 1


               }
               )

           },


           messages: {
               noResults: "", results: ""
           }
       });
}

)

</script>


@*<script>

    $(function () {
        $("#CandidateName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSurveyorName", "StampRegister")',
                    dataType: "json",

                    data: { Prefix: request.term },
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                           
                            return { label: item.SurveyorName, value: item.SurveyorName };
                        }));
                    }
                });
            },
            select: function (event, ui) {
                $('#Location').val(ui.item.SurveyorId);
                alert(ui.item.SurveyorName)
                alert(ui.item.SurveyorId)
                
                return false;
            }
        });
    });


</script>*@

@*<script>
    $('#CandidateName').change(function ()
    {
        debugger;

        var Category = $('#CandidateName').val();
        // var Searchdata = $('#Searchdata').val();
        if (Category != "" )
        {


            $.ajax({
            url: '@Url.Action("GetCandidateDetail", "CompentencyMetrixView")',
           
            type: 'GET',
            datatype: 'json',
            data: { Category: Category },

            //success: function (Location)
            success: function (searchlist)
            {
                debugger;

               
                //$('#Designation').val(Designation);
                $('#Designation').val(searchlist.Designation);

            }
        });

        }
        
    });
</script>*@

<script type="text/javascript">
    $(document).ready(function () {

        $('#CandidateName').change(function ()
        {

            debugger;
            var IRNReport = $('#CandidateName').val();

            $.ajax({
                type: "post",
                url: '@Url.Action("GetCandidateDetail", "CompentencyMetrixView")',
               
                data: { IRNReport: IRNReport},
                datatype: "json",
                traditional: true,
                success: function (m) {
                    if (m.Success) {

                        $('#Designation').val(m.Designation).val()
                        $('#EducationalQualification').val(m.EducationalQualification).val()
                        $('#Location').val(m.Location).val()
                        $('#EmailId').val(m.EmailId).val()
                        $('#CellPhoneNumber').val(m.CellPhoneNumber).val()
                        //alert("Required Date : " + ToJavaScriptDate(m.JoiningDate) + ", Shipped Date : " + ToJavaScriptDate(m.JoiningDate));
                        $('#JoiningDate1').val(m.JoiningDate1).val()
                        $('#CandidateId').val(m.CandidateId).val()
                        $('#AdditionalQualification').val(m.AdditionalQualification).val()
                        $('#TotalExperienceInYears').val(m.TotalExperienceInYears).val()
                        // $('#JoiningDate').append($('<h3>' + dateFormat(new Date(parseInt((m.JoiningDate).match(/\d+/)[0]))) + '</h3>)'));



                        //var settings = new JsonSerializerSettings { DateFormatString = "yyyy-MM-ddTHH:mm:ss.fffZ" };
                        //var json = JsonConvert.SerializeObject(DateTime.Now, settings);
                    }
                    else {
                        alert("Candidate Name already Exist")
                    }
                }
            

            });

            function ToJavaScriptDate(value) {
                var pattern = / Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
            }

            //});
         });
    });
</script> 

@*...Calender Control...*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

@*<script>
$(function () {
    $(".JoiningDate").datepicker({
            dateFormat: 'dd/MM/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>*@

@*<script>
function ToJavaScriptDate(value)
        {
            var pattern = / Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }
</script>*@






