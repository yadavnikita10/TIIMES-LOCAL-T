@model TuvVision.Models.QuotationMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@using System.Configuration;

@{
    ViewBag.Title = "Quotation";
    Layout = "~/Views/Shared/_TuvVision.cshtml";

    List<string> EditLocation = ViewBag.EditproductName as List<string>;

    List<string> EditCurrency = ViewBag.Currency as List<string>;
    int j = 0;
    int k = 0;
    string strDMessage = string.Empty;
    string strIMessage = string.Empty;
    string strMessage = string.Empty;

}

@{
    List<string> EditCityName = ViewBag.EditCityName as List<string>;
    List<string> EditCountryName = ViewBag.EditCountryName as List<string>;
}

<script language="javascript">

    var rows = 1;
    function addRow(tableID, options) {
        //Get table by tableid
        var table = document.getElementById(tableID);
        //Get no of rows in the table
        var rowCount = table.rows.length;
        var arr;
        if (options != "") {
            arr = options.split("[oP]");
            if (arr.length > 0)
                rows = arr.length;
        }

        for (var i = 0; i < rows; i++) {
            //Create a row in table
            var row = table.insertRow(rowCount);
            //Create first column in added row
            var cell0 = row.insertCell(0);
            //Get the text box values for maintain state
            var values
            if (options != "" && arr.length > i)
                values = arr[i].split("[vaL]");

            //Create first element
            element1.type = "text";
            element1.setAttribute("id", "Test1TextBox" + rowCount);
            element1.setAttribute("name", "Test1TextBox");
            element1.setAttribute("MaxLength", "120");
            element1.setAttribute("size", "44");
            element1.setAttribute("style", "width:120px");

            if (options != "" && arr.length > i)
                element1.setAttribute("value", values[0]);
            //Added first element in column 1
            cell0.appendChild(element1);

            //Create the second column in added row

            var element2 = (/MSIE (6|7|8)/).test(navigator.userAgent) ? document.createElement('<input name="Test2TextBox">') : document.createElement("input");

            element2.type = "text";
            element2.setAttribute("id", "Test2TextBox" + rowCount);
            element2.setAttribute("name", "Test2TextBox");
            element2.setAttribute("MaxLength", "120");
            element2.setAttribute("size", "44");
            element2.setAttribute("style", "width:120px");

            if (options != "" && arr.length > i)
                element2.setAttribute("value", values[1]);

            //Added second element in column 2
            cell1.appendChild(element2);
            rowCount++;
        }
    }
</script>

<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />







@*DATEPICKER*@



<script src="~/AllJsAndCss/jquery-ui.js"></script>
<link rel="stylesheet" href="~/AllJsAndCss/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript" src="~/AllJsAndCss/js/jquery.min.js"></script>
<script type="text/javascript" src="~/AllJsAndCss/json2.js"></script>

<script src="~/AllJsAndCss/datatable/js/plugin.js"></script>
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<!--multiselect-->
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />

<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<script src="https://cdn.ckeditor.com/4.6.0/full/ckeditor.js"></script>

@*DATEPICKER*@
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />

<script>

    $(function () {
        $(".ExpiryDatedate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<style>
    .ui-widget-header {
        background: #001ED2 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
</style>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.EQ_ID)
    @Html.HiddenFor(m => m.Revise)
    @Html.Hidden("EQ_ID")
    @Html.Hidden("FK_CMP_ID")
    // @Html.Hidden("PK_QTID");

    @Html.Hidden("EnquiryNumber");
    @Html.HiddenFor(m => m.EnquiryNumber);
    @Html.HiddenFor(m => m.QuotationNumber);
    @Html.HiddenFor(m => m.PK_QTID);
    @Html.HiddenFor(m => m.CostSheetApproveStatus);
    @Html.HiddenFor(m => m.CSSentforApproval);
    @Html.HiddenFor(m => m.ICostSheetApproveStatus);
    @Html.HiddenFor(m => m.ICSSentforApproval);
    @Html.HiddenFor(m => m.SendForApprovel);
    @Html.HiddenFor(m => m.CSSentforApproval);
    @Html.HiddenFor(m => m.ICSSentforApproval);
    @Html.HiddenFor(m => m.CostSheetCLStatus);
    @Html.HiddenFor(m => m.ICostSheetCLStatus);
    @Html.HiddenFor(m => m.QuotationImage);



    <!--Start of main content 3-->
    <div class="grey-bg-f3">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">
                <div class="col-xs-12 form-col">
                    <div class="row">
                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("QuotationMasterDashBoard", "QuotationMaster")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                        </div>





                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                @{
                                    if (Model != null)
                                    {
                                        <h3 class="form-page-title">Quotation Number : @Html.DisplayFor(model => model.QuotationNumber)</h3>
                                    }
                                    else
                                    {
                                        <h3 class="form-page-title">Insert Quotation</h3>
                                    }
                                }
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post">
                                                @Html.HiddenFor(m => m.PK_QTID)
                                                @*<div class="col-xs-12 text-right">
                                                        <p style="padding:0;margin:0;margin-bottom:10px;color:red;font-weight:bold;font-size: 12px;">Fields marked * are mandatory</p>
                                                    </div>*@
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <span style="color:#E12F24;">
                                                                <strong>Notes </strong> :
                                                            </span> 1) <span style="color:#FA3746;">*</span> - Not Visible on quotation pdf.<br />
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            2) To insert table in quotation, use system's insert table provision instead of copy paste from external source. <br />
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            3) Rate – Insert total value in case of type Lump sum and percentage.
                                                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            4) Insert estimated figures as per type. i.e. Mandays for type Man days, Lump sum and Percentage;<br />
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            Man months for type Man month; Man hours for type Man hours.

                                                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            5) Insert brief for Lump Sum and percentage enquiries. Examples – 1.5 %, Audit visits + certification charges, 3 welder

                                                            qualification + Visit <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;charges
                                                            and Design appraisal charges etc.
                                                            <br />
                                                        </div>

                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>


                                                <div class="col-xs-12 text-left">
                                                    @*@if (Model.PK_QTID == 0)

                                                        {*@
                                                    @*<div class="row">
                                                            <div class="col-xs-12 col-sm-2">
                                                                <div class="form-group">
                                                                    <span style="color: blue;">Copy Quotation: </span>
                                                                </div>
                                                            </div>




                                                        </div>*@


                                                    <!--  vaibhav Copy quo start-->
                                                    <div class="row">
                                                        <div class="form-group">
                                                            @*<div class="col-xs-12 col-sm-12">
                                                                                                                                <div class="form-group">
                                                                @if (Model.PK_QTID == 0)
                                                                {
                                                                    <span style="color: blue;"> Copy Quotation </span>
                                                                }

                                                                                                                                </div>
                                                                                                                            </div>*@
                                                            <div class="col-xs-12 col-sm-12">
                                                                <div class="form-group" style="margin-bottom:0;">
                                                                    <span style="color: blue;"> Copy Quotation:</span>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-2">
                                                                <input type="text" class="form-control" style="margin-top:15px; border-color:deepskyblue; " name="ClientName" id="ClientName" placeholder="ClientName" />

                                                            </div>
                                                            @*<div class="col-xs-12 col-sm-4">
                                                                    <input type="text" class="form-control" style="margin-top:15px; border-color:deepskyblue; " name="QuotationDescription" id="QuotationDescription" placeholder="Project Name" />

                                                                </div>*@
                                                            @*<div class="col-xs-12 col-sm-4">
                                                                    <input type="text" class="form-control" style="margin-top:15px; border-color:deepskyblue; " name="ProjectName" id="ProjectName" placeholder="Project Name" />

                                                                </div>*@

                                                            @*<div class="col-xs-12 col-sm-1">
                                                                    <label style="padding-left: 18px;padding-top:13px;">OR</label>

                                                                </div>*@
                                                            <div class="col-xs-12 col-sm-2">
                                                                <input type="text" class="form-control" style="margin-top:15px; border-color:deepskyblue; " name="QuotationNumberSearch" id="QuotationNumberSearch" placeholder="Quotation Number" />

                                                            </div>
                                                            <div class="col-xs-12 col-sm-2">
                                                                <button type="button" id="NewSearch" class="btn btn-default insert-form-btn"><i class="fa "></i> Search</button>

                                                            </div>

                                                            <div class="col-xs-12 col-sm-2">
                                                                <div class="form-group" style="padding-top:14px;">
                                                                    <select id="ddlCustomers" class="form-control"></select>
                                                                </div>

                                                            </div>

                                                            <div class="col-xs-12 col-sm-2">
                                                                <div class="form-group">
                                                                    <button type="button" id="NewCopyQuotation" class="btn btn-default insert-form-btn"><i class="fa "></i> Copy Quotation</button>

                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-2">
                                                                <div class="form-group">
                                                                    <button type="button" id="btnClearNew" class="btn btn-default insert-form-btn" style="margin-top:15px;background-color:#e63646" onclick="ClearQuotation()"><i class="fa "></i> Clear Content</button>

                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>


                                                    @*<div class="row">
                                                            <div class="form-group">

                                                                <div class="col-xs-12 col-sm-4">
                                                                    <button type="button" id="NewSearch" class="btn btn-default insert-form-btn"><i class="fa "></i> Search</button>

                                                                </div>
                                                            </div>
                                                        </div>*@
                                                    @*<div class="col-xs-12 text-right">*@
                                                    @*<div class="row">
                                                            <div class="form-group">
                                                                <div class="col-xs-12 col-sm-4 text-left">
                                                                    <div class="form-group text-left">
                                                                        <span>Copy Quotation </span>
                                                                    </div>
                                                                </div>

                                                                <div class="col-xs-12 col-sm-4">
                                                                    <div class="form-group">
                                                                        <select id="ddlCustomers" class="form-control"></select>
                                                                    </div>

                                                                </div>

                                                                <div class="col-xs-12 col-sm-4">
                                                                    <div class="form-group">
                                                                        <button type="button" id="NewCopyQuotation" class="btn btn-default insert-form-btn"><i class="fa "></i> Copy Quotation</button>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>*@
                                                    @*</div>*@
                                                    <!--  vaibhav Copy quo start-->
                                                    @*}*@

                                                </div>



                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>


                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Enquiry Number:<span style="color:#FA3746;">*</span></label>
                                                            @Html.TextBoxFor(model => model.EnquiryNumber, new { placeholder = "Enquiry Number", @class = "form-control form-control-custom", @row = "3", @readonly = "readonly" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label style="display:block;">Branch:<span style="color:#FA3746;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.Branch != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.QuotationBranch, new SelectList(@ViewBag.Branch, "Code", "Name"), "---Select Branch---", new { @id = "ddlBrachType", @class = "form-control" })
                                                                    }
                                                                }
                                                                if (ViewData["BranchNameTypeItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.QuotationBranch, (IEnumerable<SelectListItem>)ViewData["BranchNameTypeItems"], "---Select Branch---", new { @id = "ddlBrachType", @class = "form-control" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.QuotationBranch, new SelectList(@ViewBag.Branch, "Code", "Name"), "---Select Branch---", new { @id = "ddlBrachType", @class = "form-control" })
                                                                }

                                                            }

                                                        </div>
                                                    </div>

                                                </div>


                                                <div class="row">


                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Enquiry description and notes:</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextBoxFor(model => model.Enquiry, new { placeholder = "Enter Enquiry", @class = "form-control form-control-custom" })
                                                            <input type="hidden" id="hfEnquiry" name="EnquiryId" />
                                                        </div>
                                                    </div>


                                                    @*<div class="col-xs-12 col-sm-12">
                                                            <div class="form-group">
                                                                <label>Additional Reference details:</label>
                                                                @Html.TextAreaFor(model => model.EnquiryAdditionRef, new { placeholder = "Additional Reference details", @class = "form-control form-control-custom" })
                                                            </div>
                                                        </div>*@
                                                </div>











                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>OBS type:</label><span style="color:#FA3746;">*</span>
                                                            @Html.HiddenFor(model => model.ProjectType)
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.OBSType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.ProjectType, new SelectList(@ViewBag.OBSType, "Code", "Name"), "---Select OBS Type---", new { @id = "ddlProjectType", @class = "form-control", disabled = "disabled" })
                                                                    }
                                                                    else if (ViewData["ProjectTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.ProjectType, (IEnumerable<SelectListItem>)ViewData["ProjectTypeItems"], "---Select OBS Type---", new { @id = "ddlProjectType", @class = "form-control", disabled = "disabled" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.ProjectType, new SelectList(@ViewBag.OBSType, "Code", "Name"), "---Select OBS Type---", new { @id = "ddlProjectType", @class = "form-control", disabled = "disabled" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.ProjectType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service Portfolio type:</label><span style="color:#FA3746;">*</span>
                                                            @Html.HiddenFor(model => model.PortfolioType)
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.PortfolioType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.PortfolioType, new SelectList(@ViewBag.PortfolioType, "Code", "Name"), "---Select Portfolio Type---", new { @id = "ddlPortfolioType", @class = "form-control", disabled = "disabled" })
                                                                    }
                                                                    else if (ViewData["PortfolioTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.PortfolioType, (IEnumerable<SelectListItem>)ViewData["PortfolioTypeItems"], "---Select Portfolio Type---", new { @id = "ddlPortfolioType", @class = "form-control", disabled = "disabled" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.PortfolioType, new SelectList(@ViewBag.PortfolioType, "Code", "Name"), "---Select Portfolio Type---", new { @id = "ddlPortfolioType", @class = "form-control", disabled = "disabled" })
                                                                }

                                                                @Html.ValidationMessageFor(m => m.PortfolioType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service type:</label><span style="color:#FA3746;">*</span>
                                                            @Html.HiddenFor(model => model.SubServiceType)
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.ServiceType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.SubServiceType, new SelectList(@ViewBag.ServiceType, "Code", "Name"), "---Select Service Type---", new { @id = "ddlServiceType", @class = "form-control", disabled = "disabled" })
                                                                    }

                                                                    else if (ViewData["ServiceTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.SubServiceType, (IEnumerable<SelectListItem>)ViewData["ServiceTypeItems"], "---Select Service Type---", new { @id = "ddlServiceType", @class = "form-control", disabled = "disabled" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.SubServiceType, new SelectList(@ViewBag.ServiceType, "Code", "Name"), "---Select Service Type---", new { @id = "ddlServiceType", @class = "form-control", disabled = "disabled" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.SubServiceType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>

                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Overall Status:</label><span style="color:#FA3746;">*</span>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.Status != null)
                                                                    {
                                                                        @*@Html.DropDownListFor(model => model.Status, new SelectList(@ViewBag.StatusType, "Code", "Name"), "---Select Status Type---", new { @id = "ddlStatusType", @class = "form-control", @onChange = "onchangeddlStatus();",@disabled= "disabled" })*@
                                                                        @Html.TextBoxFor(model => model.Statusname, new { @class = "form-control", @readonly = "readonly", @id = "txtstatus" })
                                                                    }
                                                                }
                                                                if (ViewData["StatusTypeItems"] != null)
                                                                {
                                                                    @*@Html.DropDownListFor(model => model.Status, (IEnumerable<SelectListItem>)ViewData["StatusTypeItems"], "---Select Status Type---", new { @id = "ddlStatusType", @class = "form-control", @onChange = "onchangeddlStatus();", @disabled = "disabled" })*@
                                                                    @Html.TextBoxFor(model => model.Statusname, new { @class = "form-control", @readonly = "readonly", @id = "txtstatus" })
                                                                }
                                                                else
                                                                {
                                                                    @*@Html.DropDownListFor(model => model.Status, new SelectList(@ViewBag.StatusType, "Code", "Name"), "---Select Status Type---", new { @id = "ddlStatusType", @class = "form-control", @onChange = "onchangeddlStatus();", @disabled = "disabled" })*@
                                                                    @Html.TextBoxFor(model => model.Statusname, new { @class = "form-control", @readonly = "readonly", @id = "txtstatus" })
                                                                }
                                                            }
                                                        </div>
                                                    </div>



                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Expiry Date :</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextBoxFor(model => model.ExpiryDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Est Close Date", @class = "form-control ExpiryDatedate ", autocomplete = "off" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.chkArc, new { @onclick = "return false;" }) <label for="InActive" style="color:black;">ARC Job</label><span style="color:#FA3746;">*</span>

                                                        </div>
                                                    </div>





                                                </div>

                                                <div class="row">




                                                    <div id="hideInspectionLocation">
                                                        <div>
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>Region of inspection :</label><span style="color:#FA3746;">*</span>

                                                                    @if (ViewBag.check == "productcheck")
                                                                    {
                                                                        if (Model.Status != 3)
                                                                        {
                                                                            <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">

                                                                                @foreach (var item in @ViewBag.InspectionLocationItems)
                                                                                {
                                                                                    if (EditLocation.Contains(item.Value))
                                                                                    {
                                                                                        <option value="@item.Value" selected>@item.Text</option>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <option value="@item.Value">@item.Text</option>
                                                                                    }
                                                                                }
                                                                            </select>
                                                                        }
                                                                        else
                                                                        {
                                                                            <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required" disabled="disabled">

                                                                                @foreach (var item in @ViewBag.InspectionLocationItems)
                                                                                {
                                                                                    if (EditLocation.Contains(item.Value))
                                                                                    {
                                                                                        <option value="@item.Value" selected>@item.Text</option>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <option value="@item.Value">@item.Text</option>
                                                                                    }
                                                                                }
                                                                            </select>

                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">
                                                                            @{
                                                                                foreach (var item in @ViewBag.InspectionLocation)
                                                                                {
                                                                                    <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                                }

                                                                    @Html.ValidationMessageFor(model => model.InspectionLocation, "", new { @class = "text-danger" })
                                                                </div>

                                                                <input type="text" class="hidden" id="ProductLists" />

                                                            </div>
                                                        </div>
                                                    </div>

                                                    @{
                                                        if (ViewBag.CityName != null)
                                                        {
                                                            <div class="col-xs-12 col-sm-4 form-multiselect-city-box" style='display:none;' id='DOMESTIC'>
                                                                @*1 July*@

                                                                <div class="form-group">
                                                                    <label>Cities for Domestic<span style="color:#FA3746;">*</span></label>
                                                                    <select id="CityNameList" class="form-control form-multiselect-city" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                        @{
                                                                            @*<option class="checkAll" select>Select All</option>*@
                                                                        if (ViewBag.CityNameItems == null)
                                                                        {
                                                                            foreach (var item in ViewBag.CityName)
                                                                            {
                                                                                <option value="@item.Code">@item.Name</option>
                                                                            }
                                                                        }
                                                                        }

                                                                    </select>
                                                                </div>
                                                            </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <script>
                                                                                    $("#DomesticCurrency").show();
                                                                                </script>

                                                                                <div class="col-xs-12 col-sm-4 form-multiselect-city-box-edit" id='DOMESTIC'>
                                                                                    <div class="form-group">
                                                                                        <label>Cities for Domestic:<span style="color:#FA3746;">*</span></label>
                                                                                        <select id="CityNameList" class="form-control form-multiselect-city " multiple="multiple" name="rolename" placeholder="Select Option">
                                                                                            @{
                                                                                                @*<option value="Select All" selected>Select All</option>*@
                                                                                            foreach (var item in ViewBag.CityNameItems)
                                                                                            {
                                                                                                if (EditCityName.Contains(item.Value))//15
                                                                                                {
                                                                                                    <option value="@item.Value" selected>@item.Text</option>
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <option value="@item.Value">@item.Text</option>
                                                                                                }

                                                                                            }
                                                                                            }
                                                                                        </select>
                                                                                    </div>
                                                                                    <input type="text" class="hidden" id="CityNameList" />
                                                                                </div>
                                                                                                }
                                                    }

                                                    @{
                                                        if (ViewBag.CountryName != null)
                                                        {
                                                            <div class="col-xs-12 col-sm-4 form-multiselect-country-box" style='display:none;' id='INTERNATIONAL'>
                                                                <div class="form-group">
                                                                    <label>Countries for International:<span style="color:#FA3746;">*</span></label>

                                                                    <select id="CountryNameList" class="form-control form-multiselect-country" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                        @{
                                                                            if (ViewBag.CountryNameItems != null)
                                                                            {
                                                                                foreach (var item in ViewBag.CountryNameItems)
                                                                                {
                                                                                    <option value="@item.Code">@item.Name</option>
                                                                                }
                                                                            }
                                                                        }

                                                                    </select>
                                                                </div>
                                                            </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="col-xs-12 col-sm-4 form-multiselect-country-box-edit" id='INTERNATIONAL'>
                                                                                    <div class="form-group">
                                                                                        <label>Countries for International:<span style="color:#FA3746;">*</span></label>

                                                                                        <select id="CountryNameList" class="form-control form-multiselect-country" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                                            @{
                                                                                                foreach (var item in ViewBag.CountryNameItems)
                                                                                                {
                                                                                                    if (EditCountryName.Contains(item.Value))//15
                                                                                                    {
                                                                                                        <option value="@item.Value" selected>@item.Text</option>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <option value="@item.Value">@item.Text</option>
                                                                                                    }

                                                                                                }

                                                                                            }
                                                                                        </select>
                                                                                    </div><input type="text" class="hidden" id="CountryNameList">
                                                                                </div>
                                                                                                }

                                                    }

                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">

                                                    </div>
                                                    <div class="col-xs-12 col-sm-4" id="divGST">
                                                        <div class="form-group">
                                                            <label>Taxation (Domestic) :</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextBoxFor(model => model.GST, new { placeholder = "Enter GST", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4" id="divIGST">
                                                        <div class="form-group">
                                                            <label>Taxation (International) :</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextBoxFor(model => model.IGST, new { placeholder = "Enter International GST", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>

                                                </div>





                                                <div id="DomesticCurrency" style='display:none;align:center'>
                                                    @*<div class="form-page-title" style="width:110%;"> <label>Domestic</label> </div>*@
                                                    <div class="form-page-title" style="width:110%;height:35px;vertical-align:central;">Domestic</div>


                                                    <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%;font-family:'TNG Pro';font-size:13px;">
                                                        <tr style="background-color:lightgray;color:black">
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Type(s)
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Rate <br />(Refer Note 3)
                                                            </td>
                                                            <td width="80px" style="text-align: center;vertical-align:top;">
                                                                Estimated Manday
                                                                /ManMonth/Manhour <br />(Refer Note 4)
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Distance in KM <br />(To And Fro)
                                                            </td>

                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Currency
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Exchange Rate
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Amount <br />INR
                                                            </td>
                                                            <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                Remark <br />(Refer Note 5)
                                                            </td>

                                                        </tr>

                                                        @{
                                                            int i = 0;
                                                        }

                                                        @if (ViewBag.lstDOrderType != null)
                                                        {
                                                            if (ViewBag.lstDOrderType.Count != 0)
                                                            {
                                                                foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                {
                                                                    i = i + 1;
                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                        <td>


                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].OrderType, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                            new SelectListItem{ Text="Man Days", Value = "ManDays" , Selected = (item.OrderType == "ManDays") ?true : false} ,
                                                                            new SelectListItem{ Text="Man Month", Value = "ManMonth", Selected = (item.OrderType == "ManMonth") ?true : false },

                                                                            new SelectListItem{ Text="Lump Sum", Value = "LumSum" , Selected = (item.OrderType == "LumSum") ?true : false} ,
                                                                            new SelectListItem{ Text="Percentage", Value = "Perc" , Selected = (item.OrderType == "Perc") ?true : false} ,
                                                                            new SelectListItem{ Text="Man Hours", Value = "ManHR", Selected = (item.OrderType == "ManHR") ?true : false },

                                                                        },
                                                                            new { @class = "form-control COrderType", @id = "ddlOrderType" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderRate, new { @placeholder = "Order Rate", @class = "form-control  COrderRate", @Value = item.OrderRate, @onkeypress = "return isNumberKey(event);", @id = "IddOrderType" + i })
                                                                            @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })

                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "IddEstimate_ManDays_ManMonth", @Value = item.Estimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Distance, new { @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "IddDistance", @Value = item.Distance, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>
                                                                            @*@Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>,"--Select Currency--", new { @id = "IddDcurrency", @class = "form-control CDcurrency"})*@

                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new SelectList(@ViewBag.DTestCurrency, "Code", "Name", item.Dcurrency), "--Select Currency--", new { @id = "IddDcurrency", @class = "form-control CDcurrency" })

                                                                            @Html.HiddenFor(m => m.Dcurrency)

                                                                            @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "IddDExchangeRate", @Value = item.DExchangeRate, @onkeypress = "return isNumberKey(event);" })
                                                                            @*<input type="text" name="DExchangeRate" class="form-control CDExchangeRate" , Value = item.DExchangeRate/>*@
                                                                            @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "IddDTotalAmount", @Value = item.DTotalAmount, @readonly = "readonly" })
                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @Value = item.DTotalAmount })

                                                                            @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DRemarks, new { @placeholder = "Remark", @class = "form-control CDRemarks", autocomplete = "off", @id = "CDRemarks", @Value = item.DRemarks })
                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].DRemarks, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @Value = item.DRemarks })

                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>
                                                                            @if (i == 1)
                                                                            {
                                                                                <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }


                                                                        </td>



                                                                    </tr>

                                                                    j++;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                                        {
                                                                                new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                                new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                                                new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                                new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                                new SelectListItem{ Text="Percentage", Value = "Perc" },

                                                                                new SelectListItem{ Text="Man Hours", Value = "ManHR" },

                                                                        },
                                                        new { @class = "form-control COrderType", @id = "ddlOrderType1" })

                                                                        @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.OrderRate, new { @placeholder = "Order Rate", @class = "form-control  COrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Distance, new { @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "Distance", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @id = "Dcurrency", @class = "form-control CDcurrency" })
                                                                        @Html.HiddenFor(m => m.Dcurrency)

                                                                        @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.DExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "DExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "DTotalAmount", @readonly = "readonly" })
                                                                        @Html.HiddenFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "DTotalAmount" })

                                                                        @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.DRemarks, new { @placeholder = "Remark", @class = "form-control CDRemarks", autocomplete = "off", @id = "CDRemarks" })
                                                                        @Html.HiddenFor(model => model.DRemarks, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "CDRemarks" })

                                                                        @Html.ValidationMessageFor(model => model.DRemarks, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>

                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>


                                                                    </td>



                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr class="trDomestic" style="background-color:#f0f0f0">




                                                                <td>
                                                                    @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                                    {
                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR" },

                                                                    },
                                                        new { @class = "form-control COrderType", @id = "ddlOrderType1" })

                                                                    @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.OrderRate, new { @placeholder = "Order Rate", @class = "form-control  COrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Distance, new { @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "Distance", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                </td>

                                                                <td>
                                                                    @Html.DropDownListFor(m => m.Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @id = "Dcurrency", @class = "form-control CDcurrency" })
                                                                    @Html.HiddenFor(m => m.Dcurrency)

                                                                    @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.DExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "DExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "IddDTotalAmount", @readonly = "readonly" })
                                                                    @Html.HiddenFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off" })

                                                                    @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control CDRemarks", autocomplete = "off", @id = "CDRemarks" })
                                                                    @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control CDRemarks", autocomplete = "off", @id = "CDRemarks" })
                                                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                </td>

                                                                <td>

                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>


                                                                </td>



                                                            </tr>
                                                        }

                                                    </table><br />
                                                </div>


                                                <div class="row">
                                                    @if (Model.CostSheetApproveStatus == "2" || Model.CostSheetApproveStatus == "3")
                                                    {
                                                        if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                        {
                                                            if (Model.CostSheetCLStatus == "2")
                                                            {

                                                                <div class="col-xs-12 col-sm-4">
                                                                    <div class="form-group">
                                                                        <label>Domestic Status :<span style="color:#FA3746;">*</span></label>
                                                                        <select id="DStatusList" class="form-control" name="StatusList" placeholder="Select Option">
                                                                            @if (Model.DomStatus != 0)
                                                                            {
                                                                                if (Model.DomStatus.ToString().ToUpper() == "1")
                                                                                {
                                                                                    <option value="0">Select Option</option>
                                                                                    <option value="1" selected>LOST</option>
                                                                                    <option value="2">WON</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="0">Select Option</option>
                                                                                    <option value="1">LOST</option>
                                                                                    <option value="2" selected>WON</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="0" selected>Select Option</option>
                                                                                <option value="1">LOST</option>
                                                                                <option value="2">WON</option>
                                                                            }
                                                                        </select>
                                                                    </div>
                                                                </div>

                                                            }
                                                        }
                                                        else
                                                        {

                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>Domestic Status :<span style="color:#FA3746;">*</span></label>
                                                                    <select id="DStatusList" class="form-control" name="StatusList" placeholder="Select Option">
                                                                        @if (Model.DomStatus != 0)
                                                                        {
                                                                            if (Model.DomStatus.ToString().ToUpper() == "1")
                                                                            {
                                                                                <option value="0">Select Option</option>
                                                                                <option value="1" selected>LOST</option>
                                                                                <option value="2">WON</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="0">Select Option</option>
                                                                                <option value="1">LOST</option>
                                                                                <option value="2" selected>WON</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="0" selected>Select Option</option>
                                                                            <option value="1">LOST</option>
                                                                            <option value="2">WON</option>
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>

                                                        }
                                                    }

                                                    <div class="col-xs-12 col-sm-4" id="DivDLR">
                                                        <div class="form-group">
                                                            <label>Domestic Lost Reason:</label>
                                                            @*@if (ViewBag.LostReason != null)
                                                                {*@
                                                            @Html.DropDownListFor(m => m.DLostReason, ViewBag.QLostReason as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "DLR", })
                                                            @Html.ValidationMessageFor(model => model.DLostReason, "", new { @class = "text-danger validation-msg" })
                                                            @*}*@
                                                        </div>
                                                    </div>

                                                </div>


                                                <div id="InternationalCurrency" style='display:none;align:center'>

                                                    @*<div class="form-page-title" style="width:110%;"><label>International</label></div>*@
                                                    <div class="form-page-title" style="width:110%;height:35px;vertical-align:central;">International</div>

                                                    <table id="ITestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%;font-family:'TNG Pro';font-size:13px;">
                                                        <tr style="background-color:lightgray;color:black">
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Type(s)
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Rate <br />(Refer Note 3)
                                                            </td>
                                                            <td width="80px" style="text-align: center;vertical-align:top;">
                                                                Estimated Manday
                                                                /ManMonth/Manhour <br />(Refer Note 4)
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Distance in KM <br />(To And Fro)
                                                            </td>

                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Currency
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Exchange Rate
                                                            </td>
                                                            <td width="120px" style="text-align: center;vertical-align:top;">
                                                                Amount <br />INR
                                                            </td>
                                                            <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                Remark <br />(Refer  Note 5)
                                                            </td>

                                                        </tr>

                                                        @{
                                                            int l = 0;
                                                        }



                                                        @if (ViewBag.lstIOrderType != null)
                                                        {
                                                            if (ViewBag.lstIOrderType.Count != 0)
                                                            {

                                                                foreach (var item in ViewBag.lstIOrderType as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                {
                                                                    l = l + 1;

                                                                    <tr class="trInternational" style="background-color:#f0f0f0">
                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[k].IOrderType, new List<SelectListItem>
                                                                                    {
                                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays"  , Selected = (item.IOrderType == "ManDays") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" , Selected = (item.IOrderType == "ManMonth") ?true : false} ,
                                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" , Selected = (item.IOrderType == "LumSum") ?true : false} ,
                                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" , Selected = (item.IOrderType == "Perc") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR" , Selected = (item.IOrderType == "ManHR") ?true : false} ,


                                                                                    },
                                                                                new { @class = "form-control CIOrderType", @id = "ddlIOrderType" + l })

                                                                            @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IOrderRate, new { @placeholder = "Order Rate", @class = "form-control CIOrderRate", @Value = item.IOrderRate, @id = "ddlIOrderRate" + l, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IEstimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "ddlIEstimate_ManDays_ManMonth" + l, @Value = item.IEstimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IDistance, new { @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "ddlIDistance" + l, @Value = item.IDistance, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                        </td>

                                                                        <td>
                                                                            @*@Html.DropDownListFor(m => m.lstQuotationMasterOrderType[k].Icurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @id = "ddlIcurrency" + l, @class = "form-control CIcurrency" } )*@
                                                                            @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[k].Icurrency, new SelectList(@ViewBag.ITestCurrency, "Code", "Name", item.Icurrency), "--Select Currency--", new { @id = "IddDcurrency" + l, @class = "form-control CIcurrency" })

                                                                            @Html.HiddenFor(m => m.Icurrency)

                                                                            @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "ddlIExchangeRate" + l, @Value = item.IExchangeRate, @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount, @readonly = "readonly" })
                                                                            @Html.HiddenFor(model => model.lstQuotationMasterOrderType[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount })
                                                                            @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].Remark, new { @placeholder = "Remark", @class = "form-control CIRemarks", autocomplete = "off", @id = "ddlIRemark" + l, @Value = item.IRemarks })
                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>


                                                                            @if (l == 1)
                                                                            {
                                                                                <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>
                                                                            }
                                                                            else
                                                                            {

                                                                                <button type="button" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                    k++;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trInternational" style="background-color:#f0f0f0">
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.IOrderType, new List<SelectListItem>
                                                                    {
                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR" },
                                                                    },
                                                                 new { @class = "form-control CIOrderType", @id = "ddlOrderType" })

                                                                        @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IOrderRate, new { @placeholder = "Order Rate", @class = "form-control CIOrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IEstimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IDistance, new { @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.Icurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @id = "Icurrency", @class = "form-control CIcurrency" })


                                                                        @Html.HiddenFor(m => m.Icurrency)

                                                                        @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "IExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ITotalAmount", @readonly = "readonly" })
                                                                        @Html.HiddenFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ITotalAmount" })
                                                                        @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control CIRemarks", autocomplete = "off", @id = "IRemark" })
                                                                        @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "IRemark" })
                                                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>

                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr class="trInternational" style="background-color:#f0f0f0">
                                                                <td>
                                                                    @Html.DropDownListFor(m => m.IOrderType, new List<SelectListItem>
                                                                    {
                                                                    new SelectListItem{ Text="Select Order Type", Value = "" },
                                                                    new SelectListItem{ Text="Man Days", Value = "ManDays" },
                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                                    new SelectListItem{ Text="Man Hours", Value = "ManHR" },
                                                                    },
                                                                 new { @class = "form-control CIOrderType", @id = "ddlOrderType" })

                                                                    @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.IOrderRate, new { @placeholder = "Order Rate", @class = "form-control CIOrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.IEstimate_ManDays_ManMonth, new { @placeholder = "Estimated Man Days", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.IDistance, new { @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                </td>

                                                                <td>
                                                                    @Html.DropDownListFor(m => m.Icurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @id = "Icurrency", @class = "form-control CIcurrency" })


                                                                    @Html.HiddenFor(m => m.Icurrency)

                                                                    @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.IExchangeRate, new { @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "IExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                    @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                </td>

                                                                <td>
                                                                    @Html.TextBoxFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ITotalAmount", @readonly = "readonly" })
                                                                    @Html.HiddenFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ITotalAmount" })
                                                                    @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.IRemarks, new { @placeholder = "Remarks", @class = "form-control CIRemarks", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.IRemarks, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                </td>
                                                                <td>



                                                                    <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>

                                                                </td>
                                                            </tr>
                                                        }
                                                    </table><br />
                                                </div>



                                                <div class="row">

                                                    @if (Model.ICostSheetApproveStatus == "2")
                                                    {
                                                        if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                        {
                                                            if (Model.ICostSheetCLStatus == "2")
                                                            {
                                                                @*<div class="row">*@
                                                                <div class="col-xs-12 col-sm-4">
                                                                    <div class="form-group">
                                                                        <label>International Status :<span style="color:#FA3746;">*</span></label>
                                                                        <select id="IStatusList" class="form-control" name="IStatusList" placeholder="Select Option">
                                                                            @if (Model.IntStatus != 0)
                                                                            {
                                                                                if (Model.IntStatus.ToString().ToUpper() == "1")
                                                                                {
                                                                                    <option value="0">Select Option</option>
                                                                                    <option value="1" selected>LOST</option>
                                                                                    <option value="2">WON</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="0">Select Option</option>
                                                                                    <option value="1">LOST</option>
                                                                                    <option value="2" selected>WON</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="0" selected>Select Option</option>
                                                                                <option value="1">LOST</option>
                                                                                <option value="2">WON</option>
                                                                            }
                                                                        </select>

                                                                    </div>
                                                                </div>
                                                                @*</div>*@
                                                            }
                                                        }
                                                        else
                                                        {
                                                            @*<div class="row">*@
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>International Status :<span style="color:#FA3746;">*</span></label>
                                                                    <select id="IStatusList" class="form-control" name="IStatusList" placeholder="Select Option">
                                                                        @if (Model.IntStatus != 0)
                                                                        {
                                                                            if (Model.IntStatus.ToString().ToUpper() == "1")
                                                                            {
                                                                                <option value="0">Select Option</option>
                                                                                <option value="1" selected>LOST</option>
                                                                                <option value="2">WON</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="0">Select Option</option>
                                                                                <option value="1">LOST</option>
                                                                                <option value="2" selected>WON</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="0" selected>Select Option</option>
                                                                            <option value="1">LOST</option>
                                                                            <option value="2">WON</option>
                                                                        }
                                                                    </select>

                                                                </div>
                                                            </div>
                                                            @*</div>*@
                                                        }
                                                    }


                                                    <div class="col-xs-12 col-sm-4" id="divILR">
                                                        <div class="form-group">
                                                            <label>International Lost Reason:</label>
                                                            @*@if (ViewBag.LostReason != null)
                                                                {*@
                                                            @Html.DropDownListFor(m => m.ILostReason, ViewBag.QLostReason as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "ILR", })
                                                            @Html.ValidationMessageFor(model => model.DLostReason, "", new { @class = "text-danger validation-msg" })
                                                            @*}*@
                                                        </div>
                                                    </div>
                                                </div>






                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Quotation Amount (Excluding Taxes): </label><span style="color:#FA3746;">*</span>
                                                            @Html.TextBoxFor(model => model.EstimatedAmount, new { placeholder = "Quotation Amount", @class = "form-control form-control-custom", @readonly = true })
                                                            @Html.HiddenFor(model => model.EstimatedAmount)
                                                            @Html.ValidationMessageFor(m => m.EstimatedAmount, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @Html.HiddenFor(model => model.FK_CMP_ID)




                                                            <label>Customer name:</label>
                                                            @Html.TextBoxFor(model => model.QuotationCompanyName, new { placeholder = "Customer name", @class = "form-control form-control-custom", @readonly = "readonly" })
                                                            <input type="hidden" id="hfQuotationCompanyName" name="QuotationCompanyNameId" />
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>End Customer name:</label>
                                                            @Html.TextBoxFor(model => model.EndCustomer, new { placeholder = "End Customer name", @class = "form-control form-control-custom EndCustomer", @readonly = "readonly" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Select Company / Site address:</label><span style="color:#FA3746;">*</span>

                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.ComAddr != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.CompanyAddress, new SelectList(@ViewBag.ComAddr, "Code", "Name"), "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })
                                                                    }

                                                                    else if (ViewData["ComAddr1"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.CompanyAddress, (IEnumerable<SelectListItem>)ViewData["ComAddr1"], "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.CompanyAddress, new SelectList(@ViewBag.ComAddr, "Code", "Name"), "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.SubServiceType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>End Customer Project name:</label>
                                                            @Html.TextBoxFor(model => model.Quotation_Description, new { placeholder = "End Customer Project name", @class = "form-control form-control-custom CompanyName", @row = "3", @readonly = "readonly" })
                                                            <input type="hidden" id="hfQuotation_Description" name="Quotation_DescriptionId" />
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Proposal for services Type (E.g. Third party inspection.):</label>

                                                            @Html.TextAreaFor(model => model.ThirdPartyInspectionService, new { placeholder = "", @class = "form-control", @rows = "3", @value = "Third Party Inspection Service" })
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Subject:</label>
                                                            @Html.TextAreaFor(model => model.Subject, new { placeholder = "Enter Subject...", @class = "form-control", @rows = "2" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Enquiry Reference details:</label>
                                                            @Html.TextAreaFor(model => model.EnquiryAdditionRef, new { placeholder = "Enquiry Reference details:", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Salutation \ Greeting \ Address @*Thank you*@  :</label>

                                                            @Html.TextAreaFor(model => model.ThankYouLetter, new { placeholder = "", @class = "form-control", @rows = "3" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Scope Of Work:</label>
                                                            @Html.TextAreaFor(model => model.ScopeOfWork)

                                                            @*<script type = "text/javascript" >
                                                                     CKEDITOR.replace('ScopeOfWork');
                                                                </script>*@
                                                            @*<textarea cols="80" id="editor1" name="editor1" rows="10" data-sample-short></textarea>*@
                                                        </div>
                                                    </div>
                                                </div>
                                                <script>
                                                    CKEDITOR.replace('ScopeOfWork', {
                                                        // Define the toolbar groups as it is a more accessible solution.
                                                        toolbarGroups: [{
                                                            "name": "basicstyles",
                                                            "groups": ["basicstyles"]
                                                        },
                                                          {
                                                              "name": "links",
                                                              "groups": ["links"]
                                                          },
                                                          {
                                                              "name": "paragraph",
                                                              "groups": ["list", "blocks", "align"]
                                                          },
                                                          //{
                                                          //    "name": "document",
                                                          //    "groups": ["mode"]
                                                          //},
                                                          {
                                                              "name": "insert",
                                                              "groups": ["insert"]
                                                          },
                                                          {
                                                              "name": "styles",
                                                              "groups": ["styles"]
                                                          },
                                                          {
                                                              "name": "about",
                                                              "groups": ["about"]
                                                          },
                                                          {
                                                              "name": "styles",
                                                              "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                          },




                                                        ],
                                                        //fontSize_sizes: '48/48px;',
                                                        //fontSize_defaultLabel: '48/48px;',

                                                        //font_style: {
                                                        //    element: 'span',
                                                        //    styles: { 'font-family': '#(family)' },

                                                        //    overrides: [{
                                                        //        element: 'font', attributes: { 'face': null }
                                                        //    }]
                                                        //},



                                                        //<span style="font-size:12px">...</span>




                                                        // Remove the redundant buttons from toolbar groups defined above.
                                                        removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source,Smiley,SpecialChar,PageBreak,Iframe,Blockquote,CreateDiv,Flash,FontSize ',//,Font'
                                                        enterMode: CKEDITOR.ENTER_BR,
                                                        font_names: 'TNG Pro',
                                                        font_defaultLabel : 'TNG Pro',
                                                        fontSize_defaultLabel : '16'
                                                    });

                                                </script>






                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.ExclusionCheckBox) <label>Exclusions: </label><span style="color:#ff0000;">   (Tick to display on quotation pdf)</span>

                                                            @Html.TextAreaFor(model => model.Exclusion, new { placeholder = "", @class = "form-control", @rows = "3" })
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Deliverables:</label>
                                                            @Html.TextAreaFor(model => model.Deliverable)
                                                            @*<script type="text/javascript">
                                                                    CKEDITOR.replace('Deliverable');
                                                                </script>*@
                                                            <script>
                                                                CKEDITOR.replace('Deliverable', {
                                                                    // Define the toolbar groups as it is a more accessible solution.
                                                                    toolbarGroups: [{
                                                                        "name": "basicstyles",
                                                                        "groups": ["basicstyles"]
                                                                    },
                                                                      {
                                                                          "name": "links",
                                                                          "groups": ["links"]
                                                                      },
                                                                      {
                                                                          "name": "paragraph",
                                                                          "groups": ["list", "blocks", "align"]
                                                                      },
                                                                      //{
                                                                      //    "name": "document",
                                                                      //    "groups": ["mode"]
                                                                      //},
                                                                      {
                                                                          "name": "insert",
                                                                          "groups": ["insert"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ["styles"]
                                                                      },
                                                                      {
                                                                          "name": "about",
                                                                          "groups": ["about"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                                      },




                                                                    ],
                                                                    //fontSize_sizes: '48/48px;',
                                                                    //fontSize_defaultLabel: '48/48px;',

                                                                    //font_style: {
                                                                    //    element: 'span',
                                                                    //    styles: { 'font-family': '#(family)' },

                                                                    //    overrides: [{
                                                                    //        element: 'font', attributes: { 'face': null }
                                                                    //    }]
                                                                    //},



                                                                    //<span style="font-size:12px">...</span>




                                                                    // Remove the redundant buttons from toolbar groups defined above.
                                                                   removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source,Smiley,SpecialChar,PageBreak,Iframe,Blockquote,CreateDiv,Flash ',//,Font'
                                                                   enterMode: CKEDITOR.ENTER_BR,
                                                                   font_names: 'TNG Pro',
                                                                    font_defaultLabel: 'TNG Pro',
                                                                    fontSize_defaultLabel: '16'
                                                                });

                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>

                                                @*<div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Header Details:</label>
                                                            @Html.TextAreaFor(model => model.HeaderDetails)
                                                            <script type="text/javascript">
                                                                CKEDITOR.replace('HeaderDetails');
                                                            </script>
                                                        </div>
                                                    </div>*@

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Communication Protocol:</label>
                                                            @Html.TextAreaFor(model => model.CommunicationProtocol)

                                                            <script>
                                                                CKEDITOR.replace('CommunicationProtocol', {
                                                                    // Define the toolbar groups as it is a more accessible solution.
                                                                    toolbarGroups: [{
                                                                        "name": "basicstyles",
                                                                        "groups": ["basicstyles"]
                                                                    },
                                                                      {
                                                                          "name": "links",
                                                                          "groups": ["links"]
                                                                      },
                                                                      {
                                                                          "name": "paragraph",
                                                                          "groups": ["list", "blocks", "align"]
                                                                      },
                                                                      //{
                                                                      //    "name": "document",
                                                                      //    "groups": ["mode"]
                                                                      //},
                                                                      {
                                                                          "name": "insert",
                                                                          "groups": ["insert"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ["styles"]
                                                                      },
                                                                      {
                                                                          "name": "about",
                                                                          "groups": ["about"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                                      },




                                                                    ],
                                                                    //fontSize_sizes: '48/48px;',
                                                                    //fontSize_defaultLabel: '48/48px;',

                                                                    //font_style: {
                                                                    //    element: 'span',
                                                                    //    styles: { 'font-family': '#(family)' },

                                                                    //    overrides: [{
                                                                    //        element: 'font', attributes: { 'face': null }
                                                                    //    }]
                                                                    //},



                                                                    //<span style="font-size:12px">...</span>




                                                                    // Remove the redundant buttons from toolbar groups defined above.
                                                                   removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source,Smiley,SpecialChar,PageBreak,Iframe,Blockquote,CreateDiv,Flash ',//,Font'
                                                                   enterMode: CKEDITOR.ENTER_BR,
                                                                   font_names: 'TNG Pro',
                                                                  font_defaultLabel: 'TNG Pro',
                                                                  fontSize_defaultLabel: '16'
                                                                });

                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Professional Fees:</label>
                                                            @Html.TextAreaFor(model => model.FeesStructure)

                                                            <script>
                                                                CKEDITOR.replace('FeesStructure', {
                                                                    // Define the toolbar groups as it is a more accessible solution.
                                                                    toolbarGroups: [{
                                                                        "name": "basicstyles",
                                                                        "groups": ["basicstyles"]
                                                                    },
                                                                      {
                                                                          "name": "links",
                                                                          "groups": ["links"]
                                                                      },
                                                                      {
                                                                          "name": "paragraph",
                                                                          "groups": ["list", "blocks", "align"]
                                                                      },
                                                                      //{
                                                                      //    "name": "document",
                                                                      //    "groups": ["mode"]
                                                                      //},
                                                                      {
                                                                          "name": "insert",
                                                                          "groups": ["insert"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ["styles"]
                                                                      },
                                                                      {
                                                                          "name": "about",
                                                                          "groups": ["about"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                                      },




                                                                    ],
                                                                    //fontSize_sizes: '48/48px;',
                                                                    //fontSize_defaultLabel: '48/48px;',

                                                                    //font_style: {
                                                                    //    element: 'span',
                                                                    //    styles: { 'font-family': '#(family)' },

                                                                    //    overrides: [{
                                                                    //        element: 'font', attributes: { 'face': null }
                                                                    //    }]
                                                                    //},



                                                                    //<span style="font-size:12px">...</span>




                                                                    // Remove the redundant buttons from toolbar groups defined above.
                                                                    removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source,Smiley,SpecialChar,PageBreak,Iframe,Blockquote,CreateDiv,Flash '//,Font'
                                                                    , enterMode: CKEDITOR.ENTER_BR,
                                                                    font_names: 'TNG Pro',
                                                                    font_defaultLabel: 'TNG Pro',
                                                                    fontSize_defaultLabel: '16'
                                                                });

                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Payment Terms:</label>
                                                            @*@Html.TextAreaFor(model => model.PaymentTerms, new { placeholder = "Enter Remarks...", @class = "form-control", @rows = "4" })*@
                                                            @Html.TextAreaFor(model => model.PaymentTerms)


                                                            <script>
                                                                //CKEDITOR.forcePasteAsPlainText = true;

                                                                //CKEDITOR.replace('PaymentTerms', {
                                                                //    height: 200,
                                                                //   removeButtons: '',
                                                                //    removeButtons: 'PasteFromWord',
                                                                //   coreStyles_bold: {
                                                                //        element: 'b',
                                                                //        overrides: 'strong'
                                                                //   },

                                                                //});





                                                                CKEDITOR.replace('PaymentTerms', {

                                                                    toolbarGroups: [{
                                                                        "name": "basicstyles",
                                                                        "groups": ["basicstyles"]
                                                                    },
                                                                      {
                                                                          "name": "links",
                                                                          "groups": ["links"]
                                                                      },
                                                                      {
                                                                          "name": "paragraph",
                                                                          "groups": ["list", "blocks", "align"]
                                                                      },
                                                                      //{
                                                                      //    "name": "document",
                                                                      //    "groups": ["mode"]
                                                                      //},
                                                                      {
                                                                          "name": "insert",
                                                                          "groups": ["insert"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ["styles"]
                                                                      },
                                                                      {
                                                                          "name": "about",
                                                                          "groups": ["about"]
                                                                      },
                                                                      {
                                                                          "name": "styles",
                                                                          "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                                      },



                                                                    ],

                                                                    removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Source,Smiley,SpecialChar,PageBreak,Iframe,Blockquote,CreateDiv,Flash '//,Font'
                                                                    , enterMode: CKEDITOR.ENTER_BR,
                                                                    font_names: 'TNG Pro',
                                                                    font_defaultLabel: 'TNG Pro',
                                                                    fontSize_defaultLabel: '16'
                                                                    //extraPlugins: 'tableresize'

                                                                });

                                                            </script>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Validity :@Html.DisplayFor(model => model.QuotationNumber)</label>
                                                            @*<label>Validity :</label>*@

                                                            @Html.TextAreaFor(model => model.Validity, new { placeholder = "Validity", @class = "form-control", @rows = "3" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            @Html.CheckBoxFor(model => model.GeneralTermsCheckbox) <label> Additional Terms and Condition:</label><span style="color:#ff0000;">   (Tick to display on quotation pdf)</span>

                                                            @Html.TextAreaFor(model => model.GeneralTerms, new { placeholder = "", @class = "form-control", @rows = "3" })
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Complimentary Close:</label>
                                                            @Html.TextAreaFor(model => model.ComplimentaryClose, new { placeholder = "Complimentary Close", @class = "form-control", @rows = "4" })

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12" style="width: 100%;">
                                                        <div class="form-group">
                                                            <label>Enclosures:</label>@*<span style="color:#FA3746;">*</span>*@
                                                            @*@Html.TextAreaFor(model => model.KeyNotes, new { placeholder = "Enter Remarks...", @class = "form-control", @rows = "4" })*@
                                                            @Html.TextAreaFor(model => model.AddEnclosures, new { placeholder = "Add Enclosures", @class = "form-control", @rows = "4" })
                                                            @*<script type="text/javascript">
                                                                    CKEDITOR.replace('AddEnclosures');
                                                                </script>*@
                                                            @*<script>
                                                                    CKEDITOR.replace('AddEnclosures', {
                                                                        // Define the toolbar groups as it is a more accessible solution.
                                                                        toolbarGroups: [{
                                                                            "name": "basicstyles",
                                                                            "groups": ["basicstyles"]
                                                                        },
                                                                          {
                                                                              "name": "links",
                                                                              "groups": ["links"]
                                                                          },
                                                                          {
                                                                              "name": "paragraph",
                                                                              "groups": ["list", "blocks", "align"]
                                                                          },
                                                                          {
                                                                              "name": "document",
                                                                              "groups": ["mode"]
                                                                          },
                                                                          {
                                                                              "name": "insert",
                                                                              "groups": ["insert"]
                                                                          },
                                                                          {
                                                                              "name": "styles",
                                                                              "groups": ["styles"]
                                                                          },
                                                                          {
                                                                              "name": "about",
                                                                              "groups": ["about"]
                                                                          },
                                                                          {
                                                                              "name": "styles",
                                                                              "groups": ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript']
                                                                          },




                                                                        ],

                                                                        removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar,Font'

                                                                    });

                                                                </script>*@
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row" hidden>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>To:</label>
                                                            @Html.TextAreaFor(model => model.To, new { placeholder = "Enter To...", @class = "form-control", @rows = "2" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row" hidden>
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>CC:</label>
                                                            @Html.TextAreaFor(model => model.CC, new { placeholder = "Enter CC...", @class = "form-control", @rows = "2" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Internal Remarks:</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextAreaFor(model => model.Remark, new { placeholder = "Enter Remarks...", @class = "form-control", @rows = "5" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row" id="idReviseReason">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Revise Reason:</label><span style="color:#FA3746;">*</span>
                                                            @Html.TextAreaFor(model => model.ReviseReason, new { placeholder = "Enter Revise Reason", @class = "form-control", @rows = "5" })
                                                        </div>
                                                    </div>
                                                </div>

                                                @*<div class="col-xs-12 col-sm-12" id="LostReason1" style='display:none;'>
                                                        <div class="form-group">
                                                            <label>Lost Reason:</label>
                                                            @Html.TextAreaFor(model => model.LostReason, new { placeholder = "Enter Lost Reason...", @class = "form-control", @rows = "5" })
                                                        </div>
                                                    </div>*@
                                                <div class="col-xs-12">
                                                    <div class="form-group">
                                                        <label><i class="fa fa-paperclip" style="color:black;"></i> Related Documents (Please attach files here) :</label>
                                                        <input type="file" class="filepond" name="filepond" id="FileUpload" multiple>
                                                        <input hidden="hidden" id="hdfFileUpload" name="FileUpload" class="hidden" />
                                                    </div>
                                                </div>

                                                @if (Model != null)
                                                {
                                                    if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                    {
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <ul class="Attachment">
                                                                    @foreach (var item in Model.FileDetails)
                        {
                                                                        <li>
                                                                            <a class="title" href="/QuotationMaster/Download1/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                            <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        @*<p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>*@
                                                    }
                                                }
                                                else
                                                {
                                                    <p style="color:red;text-align:center;font-weight:bold;">There is no attachments !!!</p>
                                                }
                                                @Html.HiddenFor(m => m.Attachment)



                                                @if (Model.PK_QTID != 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12 text-center">
                                                            <div class="form-group">
                                                                <a href="" class="btn btn-default insert-form-btn" id="btnAddNewContact" data-toggle="modal" data-target="#partialModal">Select cover page Image</a>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 text-center">
                                                            @if (Model != null)
                                                            {
                                                                if (Model.IData != null)
                                                                {
                                                                    if (Model.IData.Length > 0)
                                                                    {
                                                                        <div class="col-xs-12 text-center">
                                                                            <div class="form-group">
                                                                                <img src="data:image/jpg;base64,@Convert.ToBase64String(Model.IData)" height="150px" width="250px" />
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }

                                                            }
                                                        </div>

                                                    </div>
                                                }

                                                @*<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                                        <div class="modal-dialog">
                                                            <div class="modal-content" style="width:800px;">
                                                                <div class="modal-header">
                                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                    <div class="col-lg-12 col-md-12 col-lg-12" style="text-align:center;">
                                                                        <label style="font:bold;"> Select Image </label>
                                                                    </div>
                                                                </div>

                                                                <div style="overflow-y: scroll; height:400px;width:800px;">

                                                                    <hr style="margin-bottom:25px;">
                                                                    @foreach (var item in ViewBag.CostSheet as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                    {

                                                                        <div class="col-lg-3 col-md-4 col-lg-6" style="padding-bottom:10px;">
                                                                            @Html.CheckBoxFor(model => model.LImage[j].chkbox, new { @placeholder = "Heading", @class = "chkCheckBoxId", id = "myCheckbox1", @value = item.IId })
                                                                            <img src="@Url.Content(String.Format("~/CoverImages/{0}", item.IName))" height="150px" width="250px" />
                                                                        </div>
                                                                        j++;
                                                                    }

                                                                </div>

                                                                <div class="col-lg-12 col-md-12 col-lg-12" style="padding-bottom:2px;text-align:center;padding-top:15px;">
                                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                                    <button type="submit" class="btn btn-success" id="btnjc" onclick="document.getElementById('btnQuotaionMasterUpdate').click()">Save</button>
                                                                </div>
                                                                <div class="modal-footer">

                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>*@

                                                                @*divPartialAddRow*@

                                                                <div id="partialModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                                                    <div class="modal-dialog" role="document">
                                                                        <div class="modal-content" style="width:800px;">

                                                                            <div class="modal-header">
                                                                                <h5 class="modal-title">Select Image</h5>
                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                    <span aria-hidden="true">&times;</span>
                                                                                </button>
                                                                            </div>


                                                                            <div class="modal-body" style="overflow-y: scroll; height:400px;width:800px;">
                                                                            </div>

                                                                            <div class="modal-footer">
                                                                                <button type="button" id="btnCancelModal" name="btnCancelModal" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                </div>


                                                                <!--Button Controls-->

                                                                <div class="col-xs-12 text-center">
                                                                    @if (Model.QuotationNumber != null)
                                                                    {
                                                                        <button style="width:282px;" class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("CostSheet", "CostSheetMaster",new {@PK_EQID=Model.EQ_ID, @Quatation=Model.QuotationNumber,@PK_QTID=Model.PK_QTID})'"><i class="fa fa-plus-circle"></i> Cost Sheet</button>
                                                                    }
                                                                    else
                                                                    {

                                                                    }
                                                                </div>


                                                                <div class="col-xs-12 text-center">
                                                                    @{
                                                                        if (Model.QuotationNumber == null) //============Code Added By rahul
                                                                        {
                                                                            @*<button type="button" class="btn btn-default news-btn" id="btnReset" value="Reset" title="Reset">Reset</button>*@
                                                                            <button type="button" class="btn btn-default insert-form-btn" id="btnQuotaionMasterSave" title="Submit"><i class="fa fa-plus-circle"></i> Save </button>

                                                                        }
                                                                        else
                                                                        {


                                                                            if (Model.QuotationNumber != null) //=========Code By Rahul
                                                                            {
                                                                                if (Model.Revise == "Revise")
                                                                                {
                                                                                    if (ViewBag.WonCount == "pass")
                                                                                    {
                                                                                        <span style="color:red;"><b>This Quotation has already Won</b></span>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button type="button" class="btn btn-default insert-form-btn" id="btnQuotaionMasterUpdate" title="Submit"><i class="fa fa-plus-circle"></i> Revise Quotation</button>
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (Model.Status == 4 || Model.Status == 5)
                                                                                    {

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button type="button" class="btn btn-default insert-form-btn" id="btnQuotaionMasterUpdate" title="Submit" style="width:200px;"> Update Quotation</button>
                                                                                    }

                                                                                }


                                                                                @*<button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("CostSheet", "CostSheetMaster",new {@PK_EQID=Model.EQ_ID, @Quatation=Model.QuotationNumber,@PK_QTID=Model.PK_QTID})'"><i class="fa fa-plus-circle"></i> Cost Sheet</button>*@
                                                                                @*<button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("QuotationDetailsGeneratePDF", "QuotationMaster",new {@PK_QTID=Model.PK_QTID })'">Download Quotation PDF</button>*@

                                                                    if (Model.QuotationPDF != "")
                                                                    {
                                                                        <a href="~/QuotationHtml/@Model.QuotationPDF" download="~/QuotationHtml/@Model.QuotationPDF" class="btn btn-default insert-form-btn" onclick="return confirm('Clicking Update and then Download Quotation gets the latest one. Otherwise, it fetches the previous version. Confirm if you want to proceed with the download.?')">
                                                                            @*@Model.QuotationNumber*@ Download Quotation
                                                                        </a>
                                                                    }
                                                                    else
                                                                    {

                                                                    }


                                                                    <!--Message Start-->

                                                                                <div class="row">
                                                                                    <div class="col-xs-12">

                                                                                        @{




                                                                                            if (ViewBag.EditproductName != null)
                                                                                            {
                                                                                                if (ViewBag.EditproductName.Count > 1) ////--- Both Domestic & International
                                                                                                {
                                                                                                    if (Model.CostSheetApproveStatus == "2") //Domestic Approved
                                                                                                    {
                                                                                                        if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                                                                        {
                                                                                                            if (Model.CostSheetCLStatus == "2")
                                                                                                            {
                                                                                                                if (Model.Status == 3) ///// Quotation Won or Partially Won
                                                                                                                {

                                                                                                                }
                                                                                                                else if (Model.Status == 8)
                                                                                                                {
                                                                                                                    if (Model.DomStatus == 1)
                                                                                                                    {
                                                                                                                        strDMessage = "Status is Lost for type Domestic.";
                                                                                                                    }
                                                                                                                    else if (Model.DomStatus == 0)
                                                                                                                    {
                                                                                                                        strDMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                    }

                                                                                                                }
                                                                                                                else if (Model.Status == 1)
                                                                                                                {
                                                                                                                    if (Model.DomStatus == 1)
                                                                                                                    {
                                                                                                                        strDMessage = "Status is Lost for type Domestic.";
                                                                                                                    }
                                                                                                                    else if (Model.DomStatus == 0)
                                                                                                                    {
                                                                                                                        strDMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strDMessage = "CH approval Pending on Cost Sheet (Domestic).";
                                                                                                            }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (Model.Status == 3) ///// Quotation Won or Partially Won
                                                                                                            {
                                                                                                                // strDMessage = "Status is Won for type Domestic.";
                                                                                                            }
                                                                                                            else if (Model.Status == 8)
                                                                                                            {
                                                                                                                if (Model.DomStatus == 1 || Model.DomStatus == 0)
                                                                                                                {
                                                                                                                    strDMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                }

                                                                                                            }
                                                                                                            else if (Model.Status == 1)
                                                                                                            {
                                                                                                                if (Model.DomStatus == 1)
                                                                                                                {
                                                                                                                    strDMessage = "Status is Lost for type Domestic.";
                                                                                                                }
                                                                                                                else if (Model.DomStatus == 0)
                                                                                                                {
                                                                                                                    strDMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                }

                                                                                                            }


                                                                                                        }
                                                                                                    }
                                                                                                    else if (Model.CostSheetApproveStatus == "6") // Costsheet Missing
                                                                                                    {
                                                                                                        strDMessage = "Upload Cost Sheet for type Domestic.";
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        strDMessage = "PCH approval Pending on Cost Sheet (Domestic). ";
                                                                                                    }


                                                                                                    if (Model.ICostSheetApproveStatus == "2") //Int Approved
                                                                                                    {
                                                                                                        if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                                                                        {
                                                                                                            if (Model.ICostSheetCLStatus == "2")
                                                                                                            {
                                                                                                                if (Model.Status == 3) ///// Quotation Won or Partially Won
                                                                                                                {

                                                                                                                }
                                                                                                                else if (Model.Status == 8)
                                                                                                                {
                                                                                                                    if (Model.IntStatus == 1 || Model.IntStatus == 0)
                                                                                                                    {
                                                                                                                        strIMessage = "Change Status to Won of type International for Job creation.";
                                                                                                                    }
                                                                                                                }
                                                                                                                else if (Model.Status == 1)
                                                                                                                {
                                                                                                                    if (Model.IntStatus == 1)
                                                                                                                    {
                                                                                                                        strIMessage = "Status is Lost for type International.";
                                                                                                                    }
                                                                                                                    else if (Model.IntStatus == 0)
                                                                                                                    {
                                                                                                                        strIMessage = "Change Status to Won of type International for Job creation.";
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strIMessage = "CH approval Pending on Cost Sheet (International).";
                                                                                                            }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (Model.Status == 3)
                                                                                                            {

                                                                                                            }
                                                                                                            else if (Model.Status == 8)
                                                                                                            {
                                                                                                                if (Model.DomStatus == 1 || Model.DomStatus == 0)
                                                                                                                {
                                                                                                                    strIMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                }
                                                                                                                if (Model.IntStatus == 1 || Model.IntStatus == 0)
                                                                                                                {
                                                                                                                    strIMessage = "Change Status to Won of type International for Job creation. ";
                                                                                                                }
                                                                                                            }
                                                                                                            else if (Model.Status == 1)
                                                                                                            {
                                                                                                                if (Model.DomStatus == 1 || Model.DomStatus == 0)
                                                                                                                {
                                                                                                                    strIMessage = "Change Status to Won of type Domestic for Job creation.";
                                                                                                                }
                                                                                                                if (Model.IntStatus == 1 || Model.IntStatus == 0)
                                                                                                                {
                                                                                                                    strIMessage = "Change Status to Won of type International for Job creation.";
                                                                                                                }
                                                                                                            }
                                                                                                        }

                                                                                                    }
                                                                                                    else if (Model.ICostSheetApproveStatus == "6") // Costsheet Missing
                                                                                                    {
                                                                                                        strIMessage = "Upload Cost Sheet (International).";
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        strIMessage = "PCH approval Pending on Cost Sheet (International).";
                                                                                                    }



                                                                                                    if (strDMessage != string.Empty || strIMessage != string.Empty) ///// Quotation Won or Partially Won
                                                                                                    {
                                                                                                        if (strIMessage != string.Empty)
                                                                                                        {
                                                                                                            if (strDMessage != string.Empty)
                                                                                                            {

                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                if (Model.Status == 3 || Model.Status == 8)
                                                                                                                {
                                                                                                                    <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>

                                                                                                                }
                                                                                                                else
                                                                                                                {

                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (strDMessage != string.Empty)
                                                                                                            {
                                                                                                                if (Model.Status == 3 || Model.Status == 8)
                                                                                                                {
                                                                                                                    <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>

                                                                                                                }

                                                                                                            }
                                                                                                            else
                                                                                                            {

                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        if (Model.Status == 3 || Model.Status == 8)
                                                                                                        {
                                                                                                            <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            strMessage = "Change Status to Won for Job creation.";

                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                else if (ViewBag.EditproductName.Contains("2")) ////--- Only Domestic
                                                                                                {
                                                                                                    if (Model.CostSheetApproveStatus != "3") //=========Auto Approval
                                                                                                    {
                                                                                                        if (Model.CostSheetApproveStatus == "2") //Domestic Approved
                                                                                                        {
                                                                                                            if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                                                                            {
                                                                                                                if (Model.CostSheetCLStatus == "2")
                                                                                                                {
                                                                                                                    if (Model.Status == 3) ///// Quotation Won or Partially Won
                                                                                                                    {
                                                                                                                        <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        strDMessage = "Change Status to Won for Job creation ";
                                                                                                                    }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    strDMessage = "CH approval Pending on Cost Sheet.";

                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                if (Model.Status == 3)
                                                                                                                {

                                                                                                                    <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    strDMessage = " Change Status to Won of type Domestic for Job creation.";

                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        else if (Model.CostSheetApproveStatus == "6") // Costsheet Missing
                                                                                                        {

                                                                                                            strDMessage = "Upload Cost Sheet (Domestic).";
                                                                                                        }
                                                                                                        else if (Model.CostSheetApproveStatus == "7") // Costsheet Missing
                                                                                                        {
                                                                                                            strDMessage = "Cost Sheet Auto approved by System and not approved by PCH.";
                                                                                                        }
                                                                                                        else
                                                                                                        {

                                                                                                            strDMessage = "PCH approval Pending on Cost Sheet (Domestic).";
                                                                                                        }
                                                                                                    }

                                                                                                    else
                                                                                                    {
                                                                                                        if (Model.Status == 3)
                                                                                                        {
                                                                                                            <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (Model.Status == 1)
                                                                                                            {
                                                                                                                strDMessage = "Cost Sheet Auto approved by System. Change Status to Won for Job creation.";

                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strDMessage = "Status is Lost.";
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                else if (ViewBag.EditproductName.Contains("1")) ////--- Only International
                                                                                                {

                                                                                                    if (Model.ICostSheetApproveStatus == "2") //International Approved
                                                                                                    {
                                                                                                        if (Convert.ToInt32(Model.EstimatedAmount) >= 1000000)
                                                                                                        {
                                                                                                            if (Model.ICostSheetCLStatus == "2")
                                                                                                            {
                                                                                                                if (Model.Status == 3) ///// Quotation Won or Partially Won
                                                                                                                {
                                                                                                                    <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    strIMessage = "Change Status to Won for Job creation.";
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strIMessage = "CH approval Pending on Cost Sheet.";
                                                                                                            }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (Model.Status == 3)
                                                                                                            {
                                                                                                                <button class="btn btn-default insert-form-btn" type="button" style="width: 282px;" onclick="location.href='@Url.Action("JobCreation", "JobMaster", new { @PK_QT_ID = Model.PK_QTID })'"><i class="fa fa-plus-circle"></i>Job Creation</button>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strIMessage = "Change Status to Won for Job creation.";
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    else if (Model.ICostSheetApproveStatus == "6") // Costsheet Missing
                                                                                                    {
                                                                                                        strIMessage = "Upload Cost Sheet (International).";
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        strIMessage = "PCH approval pending on Cost sheet (International).";
                                                                                                    }


                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    </div>
                                                                                </div>




                                                                                <div class="col-xs-12 text-left" style="background-color:#f0f0f0">
                                                                                    @if (strDMessage != string.Empty || strIMessage != string.Empty) ///// Quotation Won or Partially Won
                                                                                    {
                                                                                        if (strIMessage != string.Empty)
                                                                                        {
                                                                                            if (strDMessage != string.Empty)
                                                                                            {
                                                                                                <span style="color:red;"><b>@strDMessage<br /> @strIMessage</b></span>
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span style="color:red;"><b>@strIMessage</b></span>
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="color:red;"><b>@strDMessage</b></span>
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {


                                                                                    }
                                                                                </div>



                                                        <!--Message End-->


                                                                                            @*<div class="col-xs-12 col-sm-12" id="divPDFFile">
                                                                                                    <div class="form-group">


                                                                                                        @if (!string.IsNullOrEmpty(Model.QuotationPDF))
                                                                                                        {
                                                                                                            <label>Download PDF</label>

                                                                                                            <a id="btnPdf" class="btn btn-default insert-form-btn" href="@Url.Content("~/QuotationHtml/"+@Model.QuotationPDF)" role="button" download="@Url.Content("~/QuotationHtml/" +@Model.QuotationPDF)">
                                                                                                                <i class="fa fa-download">@Model.QuotationPDF</i>
                                                                                                                @Html.HiddenFor(model => Model.QuotationPDF)
                                                                                                            </a>

                                                                                                        }

                                                                                                    </div>
                                                                                                </div>*@

                                                                                                }
                                                                                            }

                                                                    }

                                                                </div>







                                                                @if (Model.JobDashBoard != null)
                                                                {
                                                                    <div class="col-lg-12">
                                                                        <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                                                                            <tr>
                                                                                <td>
                                                                                    @(Html
                                                                            .Grid(Model.JobDashBoard)
                                                                            .Build(columns =>
                                                                            {


                                                                                columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "JobCreation", "JobMaster", new { @PK_JOB_ID = o.PKJobId, @PK_QT_ID = o.PK_QTID }, new { @class = "fa fa-pencil", @title = "Action" }));


                                                                                columns.Add(c => c.JobNo).Titled("Job No");
                                                                                columns.Add(c => c.ClientName).Titled("Client Name");
                                                                                columns.Add(c => c.Job_type).Titled("Job Type");
                                                                                columns.Add(c => c.Description).Titled("Description");

                                                                            })
                                                                            .Pageable(pager =>
                                                                            {
                                                                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                                                                pager.ShowPageSizes = true;
                                                                                pager.PagesToDisplay = 3;
                                                                                pager.CurrentPage = 1;
                                                                                pager.RowsPerPage = 2;

                                                                            })
                                                                            .UsingFilterMode(GridFilterMode.Row)
                                                                            .Empty("No Data Found")
                                                                            .Filterable()
                                                                            .Sortable()

                                                                                    )


                                                                                </td>
                                                                            </tr>
                                                                        </table>

                                                                    </div>
                                                                }
                                                                <!--Button Controls-->
                                                            </form>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div><!-- /.col -->

                                    </div><!-- /.row -->
                                </div><!-- /.data table col -->

                            </div><!-- /.row -->
                        </div><!-- /.container-fluid -->
                        <!--End of header-->

                    </div>
		<!--End of main content 3-->
                                                                                            }


@*Enabled and Dissabled Dropdownlist for Edit Quotation*@  @*1 July*@
<script>

</script>




<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
<script>
    // $('.form-multiselect-city').multiselect();
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
    $('.form-multiselect-country').multiselect({
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
</script>



@****************************************************************************************Script Started Here******************************************************************@
<!--filepond-->
<!-- Load FilePond library -->
<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>
<script>
    FilePond.registerPlugin(
    // encodes the file as base64 data
    FilePondPluginFileEncode,
    // validates the size of the file
    FilePondPluginFileValidateSize,
    // corrects mobile image orientation
    FilePondPluginImageExifOrientation,
    // previews dropped images
    FilePondPluginImagePreview
    );
    // Select the file input and use create() to turn it into a pond
    FilePond.create(document.querySelector('.filepond'));
</script>
<script>
        FilePond.setOptions({
            server: '@Url.Action("TemporaryFilePathQuotationAttachment", "QuotationMaster")'
        });
</script>

@*<script>
        var SummaryExtension = false;
        var fileExtension = ["pdf", "PDF", "xls", "xlsx", "doc", "DOC", "docx", "DOCX", "png", "PNG", "jpg", "JPG", "jpeg", "JPEG", "gif", "GIF"];
        $("#FileUpload").change(function (e) {
            debugger
            var files = $("#FileUpload input[type='file']").get(0).files;
            for (var index = 0; index < files.length; index++) {
                var singleExtension = e.target.files[index].name.split('.').pop();
                var Condition = fileExtension.includes(singleExtension);
                if (Condition == true) {
                    SummaryExtension = true;
                }
                else {
                    SummaryExtension = false;
                    return;
                }
            }
            if (SummaryExtension == true) {
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append("FileUpload input[type='file']", files[i]);
                }
                //Creating an XMLHttpRequest and sending
                var xhr = new XMLHttpRequest();
                var link = '@Url.Action("TemporaryFilePathQuotationAttachment", "QuotationMaster")';
                xhr.open('POST', link, 'true');
                xhr.send(fileData);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        var data = xhr.responseText;
                        data = data.replace(/"/g, "");
                        $("#DocumentAttached").val(data);
                    }
                }
                //})
            }
            else {
                alert("Only formats are allowed : " + fileExtension.join(','));
            }




            //if ($.inArray($("#FileUpload").val().split('.').pop().toLowerCase(), fileExtension) == -1)
            //{
            //    alert("Only formats are allowed : " + fileExtension.join(', '));
            //}

            //var SingleExtension = "JPG";


        })
    </script>*@
@*New Quotation Generation And Revised Quotation Generation*@
<script>
    $(document).ready(function () {
        $('#EstimatedAmount').keypress(function (event) {
            return isNumber(event, this)
        });

        CKEDITOR.on('instanceReady', function (ev) {
            ev.editor.on('paste', function (evt) {
                debugger
                if (evt.data.dataValue.indexOf('table') == 1) {
                    evt.data.dataValue = evt.data.dataValue.replace(/padding:0cm 5.4pt 0cm 5.4pt/g, 'padding:0cm 0cm 0cm 0cm').replace('margin-left:36.0pt;', '').replace(/line-height:115%/g, 'line-height:20%');
                    evt.data.dataValue = "<span style=\"font-size: 16px; font-family: 'TNG Pro'\" >" + evt.data.dataValue + "</span>";
                }
                else {
                    evt.data.dataValue = "<span style=\"font-size: 16px; font-family: 'TNG Pro'\" >" + evt.data.dataValue + "</span>";
                }

            });

            ev.editor.on('pastetext', function (evt) {
                evt.data.dataValue = '<span style="font-size: 16px;font-family: \'" TNG Pro\'" ">' + evt.data.dataValue + '</span>';
            });
        });

        CKEDITOR.on('dialogDefinition', function (ev) {
            debugger
            var dialogName = ev.data.name;
            var dialogDefinition = ev.data.definition;

            if (dialogName == 'table') {
                var info = dialogDefinition.getContents('info');

                info.get('txtBorder')['default'] = '0';         // Set default border to 0
            }
        });

    });
    // THE SCRIPT THAT CHECKS IF THE KEY PRESSED IS A NUMERIC OR DECIMAL VALUE.
    function isNumber(evt, element) {

        var charCode = (evt.which) ? evt.which : event.keyCode

        if (
            (charCode != 45 || $(element).val().indexOf('-') != -1) &&      // “-” CHECK MINUS, AND ONLY ONE.
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
            (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $(document).ready(function () {
        $("#btnQuotaionMasterSave").on('click', function (event) {

            debugger;
            var a = "1";
            var b = "1";
            var EnquiryID = $("#EQ_ID").val();
            var PK_QTID = $("#PK_QTID").val();
            var FK_CMP_ID = $("#FK_CMP_ID").val();


            var CompanyAddress = $("#CompanyAddress").val();
            var Validity = $("#Validity").val();
            var QuotationNumber = $("#QuotationNumber").val();


            var ThirdPartyInspectionService = $("#ThirdPartyInspectionService").val();
            var ThankYouLetter = $("#ThankYouLetter").val();




            var EnquiryDescription = $("#Enquiry").val();
            var CompanyName = $("#CompanyName").val();

            var ddlProjectType = $("#ddlProjectType option:selected").val();

            var ddlPortfolioType = $("#ddlPortfolioType option:selected").val();

            var ddlType = $("#ddlServiceType option:selected").val();

            var ddlBranch = $("#ddlBrachType option:selected").val();
            var Subject = $("#Subject").val();

            var selected = $("#CityNameList option:selected");
            var ddlCityValue = "";
            selected.each(function () {
                ddlCityValue += $(this).text() + ",";
            });

            var selected = $("#CountryNameList option:selected");
            var ddlCountryValue = "";
            selected.each(function () {
                ddlCountryValue += $(this).text() + ",";
            });

            var selected = $("#Attachment").val();

            // var HeaderDetails = CKEDITOR.instances['HeaderDetails'].getData();
            var ScopeOfWork = CKEDITOR.instances['ScopeOfWork'].getData();
            var Deliverable = CKEDITOR.instances['Deliverable'].getData();
            //   var Commercials = CKEDITOR.instances['Commercials'].getData();
            var FeesStructure = CKEDITOR.instances['FeesStructure'].getData();
            var PaymentTerms = CKEDITOR.instances['PaymentTerms'].getData();
            // var KeyNotes = CKEDITOR.instances['KeyNotes'].getData();
            //var AddEnclosures = CKEDITOR.instances['AddEnclosures'].getData();
            var AddEnclosures = $("#AddEnclosures").val();
            var ComplimentaryClose = $("#ComplimentaryClose").val();
            var EndCustomer = $("#EndCustomer").val();
            var Quotation_Description = $("#Quotation_Description").val();


            var CommunicationProtocol = CKEDITOR.instances['CommunicationProtocol'].getData();
            // var Coordinators = CKEDITOR.instances['Coordinators'].getData();
            // var EscalationMatrix = CKEDITOR.instances['EscalationMatrix'].getData();

            var arrInspectionLocation = $("#ProductLists").val() || [];
            var p = arrInspectionLocation.join(",");
            var arrCountry = $("#CountryNameList").val() || [];
            var Country = arrCountry.join(",");
            var arrCity = $("#CityNameList").val() || [];
            var City = arrCity.join(",");
            var chkCountry = Country;
            var chkCity = City;




            var DArray = [];

            if (arrInspectionLocation != '1') {
                var DStatusList = $("#DStatusList option:selected").val();


                $('.trDomestic').each(function () {
                    var trD = {};




                    var OrderType = $(this).find('.COrderType').val();
                    var OrderRate = $(this).find('.COrderRate').val();
                    var Estimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth').val();
                    var distance = $(this).find('.CDistance').val();
                    var DEstimatedAmount = $(this).find('.CEstimatedAmount').val();
                    var Dcurrency = $(this).find('.CDcurrency').val();
                    var DExchangeRate = $(this).find('.CDExchangeRate').val();
                    var DTotalAmount = $(this).find('.CDTotalAmount').val();
                    var DRemarks = $(this).find('.CDRemarks').val();


                    if (OrderType == '') {

                        $("#LostReason").focus()
                        return a = "2";
                    }
                    if (OrderRate == '') {

                        $("#LostReason").focus()
                        return a = "2";
                    }
                    if (Estimate_ManDays_ManMonth == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return a = "2";
                    }
                    if (DEstimatedAmount == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return a = "2";
                    }
                    if (Dcurrency == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return a = "2";
                    }
                    if (DExchangeRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return a = "2";
                    }

                    if (OrderType == 'ManDays') {
                        if (distance == '') {
                            $("#LostReason").focus()
                            return a = "2";
                        }

                    }


                    if (a !== "2") {


                        trD['OrderType'] = OrderType;
                        trD['OrderRate'] = OrderRate;

                        if (OrderType == 'ManDays' || OrderType == 'LumSum' || OrderType == 'ManHR' || OrderType == 'Perc') {
                            trD['Estimate_ManDays'] = Estimate_ManDays_ManMonth;
                            trD['Estimate_ManMonth'] = null;
                        }
                        else if (OrderType == 'ManMonth') {
                            trD['Estimate_ManDays'] = null;
                            trD['Estimate_ManMonth'] = Estimate_ManDays_ManMonth;
                        }
                        else {
                            trD['Estimate_ManMonth'] = null;
                            trD['Estimate_ManDays'] = null;
                        }
                        trD['Distance'] = distance;
                        trD['EstimatedAmount'] = DEstimatedAmount;
                        trD['Currency'] = Dcurrency;
                        trD['ExchangeRate'] = DExchangeRate;
                        trD['DTotalAmount'] = DTotalAmount;
                        trD['DRemarks'] = DRemarks;





                        DArray.push(trD);
                    }
                });

            }

            var IArray = [];

            if (arrInspectionLocation != '2') {
                var IStatusList = $("#IStatusList option:selected").val();
                $('.trInternational').each(function () {
                    var trI = {};


                    var IOrderType = $(this).find('.CIOrderType').val();
                    var IOrderRate = $(this).find('.CIOrderRate').val();
                    var IEstimate_ManDays_ManMonth = $(this).find('.CIEstimate_ManDays_ManMonth').val();
                    var Idistance = $(this).find('.CIDistance').val();
                    var IEstimatedAmount = $(this).find('.CIEstimatedAmount').val();
                    var Icurrency = $(this).find('.CIcurrency').val();
                    var IExchangeRate = $(this).find('.CIExchangeRate').val();
                    var ITotalAmount = $(this).find('.CITotalAmount').val();
                    var IRemarks = $(this).find('.CIRemarks').val();


                    if (IOrderType == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }
                    if (IOrderRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }
                    if (IEstimate_ManDays_ManMonth == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }
                    if (IEstimatedAmount == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }
                    if (Icurrency == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }
                    if (IExchangeRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $("#LostReason").focus()
                        return b = "2";
                    }




                    if (b !== "2") {



                        trI['IOrderType'] = IOrderType;
                        trI['IOrderRate'] = IOrderRate;
                        if (IOrderType == 'ManDays') {
                            trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
                            trI['IEstimate_ManMonth'] = null;
                        }
                        else if (IOrderType == 'ManMonth') {
                            trI['IEstimate_ManDays'] = null;
                            trI['IEstimate_ManMonth'] = IEstimate_ManDays_ManMonth;
                        }
                        else {
                            trI['IEstimate_ManMonth'] = null;
                            trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
                        }
                        trI['IDistance'] = Idistance;
                        trI['IEstimatedAmount'] = IEstimatedAmount;
                        trI['InternationalCurrency'] = Icurrency;
                        trI['IExchangeRate'] = IExchangeRate;
                        trI['ITotalAmount'] = ITotalAmount;
                        trI['IRemarks'] = IRemarks;



                        IArray.push(trI);
                    }
                });
            }







            var checkbox = "";
            if ($('#chkArc').prop('checked')) {
                checkbox = "1"
            }
            else {
                checkbox = "0"
            }

            var varExclusionCheckBox = "";
            if ($('#ExclusionCheckBox').prop('checked')) {
                varExclusionCheckBox = "1"
            }
            else {
                varExclusionCheckBox = "0"
            }


            var varGeneralTermsCheckbox = "";
            if ($('#GeneralTermsCheckbox').prop('checked')) {
                varGeneralTermsCheckbox = "1"
            }
            else {
                varGeneralTermsCheckbox = "0"
            }
            //*********************************************************


            if (p == "") {
                alert("Please Select Inspection Location")
                $("#ProductLists").focus()

                return false;
            }

            if (p == "1") {
                if (chkCountry = null || chkCountry == "") {
                    alert("please Select Country")
                    $("#CountryNameList").focus()

                    return false;
                }
            }
            if (p == "2") {
                if (chkCity = null || chkCity == "") {
                    alert("please Select City")
                    $("#CityNameList").focus()
                    return false;
                }
            }
            if (p == "1,2") {
                if (chkCountry = null || chkCountry == "") {
                    alert("please Select Country")
                    $("#CountryNameList").focus()
                    return false;
                }
                if (chkCity = null || chkCity == "") {
                    alert("please Select City")
                    $("#CityNameList").focus()
                    return false;
                }
            }


            //if ($("#Enquiry").val() == "" || $("#Enquiry").val() == null) {
            //    alert("Please Enter Enquiry Description !!!");
            //    $("#Enquiry").focus()
            //    return false;
            //}
            if ($("#QuotationCompanyName").val() == "" || $("#QuotationCompanyName").val() == null) {
                alert("Please Enter Company Name First !!!");
                $("#QuotationCompanyName").focus()
                return false;
            }
            if (ddlProjectType == "" || ddlProjectType == null) {
                alert("Please Select At lease (1) Project Type !!!");
                $("#ProjectType").focus()
                return false;
            }

            if (ddlPortfolioType == "" || ddlPortfolioType == null) {
                alert("Please Select At lease (1) Portfolio Type !!!");
                $("#ddlportfolioType").focus()
                return false;
            }
            if (ddlType == "" || ddlType == null) {
                alert("Please Select at lease (1) Type !!!");
                $("#ServiceType").focus()
                return false;
            }
            if (ddlBranch == "---Select Branch---" || ddlBranch == "" || ddlBranch == null) {
                alert("Please Select Branch !!!");
                $("#ddlBrachType").focus()
                return false;
            }


            if (a == "2") {
                alert("Please Fill details in Domestic !!!");
                $("#EstimatedAmount").focus()
                return false;
            }
            if (b == "2") {
                alert("Please Fill details in Internation !!!");
                $("#EstimatedAmount").focus()
                return false;
            }
            if ($("#EstimatedAmount").val() == "" || $("#EstimatedAmount").val() == null) {
                alert("Please Enter Estimated Amount !!!");
                $("#EstimatedAmount").focus();
                return false;
            }


            event.preventDefault();
            $("#btnQuotaionMasterSave").prop('disabled', true);

            var QuotationDetails =
				{
				    EQ_ID: EnquiryID,
				    PK_QTID: PK_QTID,
				    QuotationNumber: QuotationNumber,
				    Enquiry: $("#Enquiry").val(),
				    Quotation_Description: $("#Quotation_Description").val(),
				    EndCustomer: $("#EndCustomer").val(),
				    QuotationCompanyName: $("#QuotationCompanyName").val(),
				    Reference: $("#Reference").val(),
				    GST: $("#GST").val(),

				    ExpiryDate: $("#ExpiryDate").val(),

				    SubServiceType: $("#ddlServiceType option:selected").val(),
				    PortfolioType: $("#ddlPortfolioType option:selected").val(),
				    ProjectType: $("#ddlProjectType option:selected").val(),

				    QuotationBranch: $("#ddlBrachType option:selected").val(),


				    // Status: $("#ddlStatusType option:selected").val(),
				    Status: $("#txtstatus").val(),

				    Remark: $("#Remark").val(),
				    //ContactName: $("#ddlContactType option:selected").val(),
				    //HeaderDetails: HeaderDetails,
				    Subject: $("#Subject").val(),
				    // HeaderDetails: HeaderDetails,
				    ScopeOfWork: ScopeOfWork,
				    Deliverable: Deliverable,
				    // Commercials: Commercials,
				    FeesStructure: FeesStructure,
				    PaymentTerms: PaymentTerms,
				    //KeyNotes: KeyNotes,
				    AddEnclosures: AddEnclosures,
				    CommunicationProtocol: CommunicationProtocol,
				    // Coordinators: Coordinators,
				    // EscalationMatrix: EscalationMatrix,
				    To: $("#To").val(),
				    CC: $("#CC").val(),
				    ApprovalStatus: $("#ApprovalStatus").val(),
				    EnquiryNumber: $("#EnquiryNumber").val(),
				    Attachment: $("#Attachment").val(),
				    FK_CMP_ID: FK_CMP_ID,
				    CompanyAddress: CompanyAddress,
				    Validity: Validity,
				    ThirdPartyInspectionService: ThirdPartyInspectionService,
				    ThankYouLetter: ThankYouLetter,
				    EstimatedAmount: $("#EstimatedAmount").val(),

				    InspectionLocation: p,

				    //City: $("#ddlCityType option:selected").val(),
				    //Country: $("#ddlCountryType option:selected").val(),
				    City: City,
				    Country: Country,


				    //DEstimatedAmount: $("#DEstimatedAmount").val(),
				    //Dcurrency: Dcurrency,//$("#Dcurrency").val(),
				    //DExchangeRate: $("#DExchangeRate").val(),
				    //DTotalAmount: $("#DTotalAmount").val(),
				    //IEstimatedAmount: $("#IEstimatedAmount").val(),
				    //Icurrency: Icurrency,//$("#Icurrency").val(),
				    //IExchangeRate: $("#IExchangeRate").val(),
				    //ITotalAmount: $("#ITotalAmount").val(),
				    //OrderRate: $("#OrderRate").val(),
				    //Estimate_ManMonth: $("#Estimate_ManMonth").val(),
				    //Estimate_ManDays_ManMonth: $("#Estimate_ManDays_ManMonth").val(),
				    chkArc: $("#chkArc").val(),
				    Exclusion: $("#Exclusion").val(),
				    //OrderType: OrderType,
				    OrderType: DArray,
				    o: DArray,
				    distance: $("#distance").val(),
				    IGST: $("#IGST").val(),

				    EnquiryAdditionRef: $("#EnquiryAdditionRef").val(),
				    ComplimentaryClose: ComplimentaryClose,
				    EndCustomer: EndCustomer,
				    Quotation_Description:Quotation_Description,
				    GeneralTerms: $("#GeneralTerms").val(),
				    Enquiry: $("#Enquiry").val(),
				    CompanyAddress: $("#ddlCaddr option:selected").val()

				}
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Quotation", "QuotationMaster")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ QM: QuotationDetails, "C": checkbox, "ExclusionCheckBox": varExclusionCheckBox, "o": DArray, "DArray": DArray, "IArray": IArray, "GeneralTermsCheckbox": varGeneralTermsCheckbox }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {

                    if (response.success == 1) {
                        alert("Quotation Details has been saved successfully!!!")
                        window.location.href = '@Url.Action("QuotationDetails", "QuotationMaster")';
                    }
                    else if (response.result == 'Redirect') {
                        alert("Quotation Details has been saved successfully!!!")
                        window.location = response.url;
                    }
                    else if (response.success == 2) {
                        alert("Quotation Details has been Revised successfully!!!")
                        window.location.href = '@Url.Action("QuotationDetails", "QuotationMaster")';
                    }

                    else if (response.success == 4) {
                        alert("Failed !!! Something Went Wrong!!!")
                        window.location.href = '@Url.Action("QuotationDetails", "QuotationMaster")';
                    }
                    else if (response.success == 5) {
                        alert("Quotation Details has been saved successfully!!!") //============Code Added By Rahul
                        window.location.href = '@Url.Action("QuotationDetails", "QuotationMaster")';
                    }
                }
            });

        });

    });
</script>
@*Editing Quotation Details Script*@
<script>
    $(document).ready(function () {
        debugger;
        var varDivIdReviseReason = document.getElementById("idReviseReason");
        var varReviseReason = $("#ReviseReason").val();
        var Revise = $("#Revise").val();

        if (Revise == "Revise") {
            varDivIdReviseReason.style.visibility = 'visible';

        }
        else {
            varDivIdReviseReason.style.visibility = 'hidden';
        }

        if (varReviseReason != "" || varReviseReason != null)
        {
            varDivIdReviseReason.style.visibility = 'visible';
        }
        else
        {

        }

        $("#btnQuotaionMasterUpdate").on('click', function (event) {
            debugger;

            var a = "1";
            var b = "1";

            var varDivIdReviseReason = document.getElementById("idReviseReason");
            var varReviseReason = $("#ReviseReason").val();
            var Revise = $("#Revise").val();

            if (Revise == "Revise")
            {
                varDivIdReviseReason.style.visibility = 'visible';
                if(varReviseReason=="" || varReviseReason==null)
                {
                    alert("Enter Revise Reason");
                    return false;
                }
                else
                {

                }
            }
            else
            {
                varDivIdReviseReason.style.visibility = 'hidden';
            }

            //if (varReviseReason != "" || varReviseReason != null)
            //{
            //    varDivIdReviseReason.style.visibility = 'visible';
            //}
            //else
            //{

            //}


            var ImageId = "";
            // ImageId = $("#IId").val();

            if ($("#IId").val() != "0")
                ImageId = $("#IId").val();
            else
                ImageId = $("#QuotationImage").val();

            //alert($("#IId").val());
            /*
            if ($('.chkCheckBoxId').is(':checked')) {
                var checkedValue = document.querySelector('.chkCheckBoxId:checked').value;
                $("#IId").val(checkedValue);


            }
            else {
                alert("Please select Image")
                return false;
            }
            */

            if (ImageId == "")
            {
                alert("Please select Image")
                return false;

            }


           // var ImageId = $("#IId").val();



            $('#divPDFFile').hide();
            var FK_CMP_ID = $("#FK_CMP_ID").val();
            var EnquiryID = $("#EQ_ID").val();
            var PK_QTID = $("#PK_QTID").val();
            var QuotationNumber = $("#QuotationNumber").val();
            var Revise = $("#Revise").val();
            var EnquiryDescription = $("#Enquiry").val();
            var CompanyName = $("#CompanyName").val();
            var ddlProjectType = $("#ddlProjectType option:selected").val();

             //var SubServiceType = $("#ddlProjectType option:selected").val();
            var SubServiceType = $("#ddlServiceType option:selected").val();
            var PortfolioType = $("#ddlPortfolioType option:selected").val();


            var ddlType = $("#ddlServiceType option:selected").val();
            //var ddlBranch = $("#ddlBranch option:selected").val();
            var ddlBranch = $("#ddlBrachType option:selected").val();
            var Subject = $("#Subject").val();
            var Validity = $("#Validity").val();
            var ThirdPartyInspectionService = $("#ThirdPartyInspectionService").val();
            var ThankYouLetter = $("#ThankYouLetter").val();

            var CompanyAddress = $("#CompanyAddress").val();
            var selected = $("#CityNameList option:selected");

            var DLostReason = $("#DLR").val();
            var ILostReason = $("#ILR").val();

            var ddlCityValue = "";
            selected.each(function () {
                ddlCityValue += $(this).text() + ",";
            });

            var selected = $("#CountryNameList option:selected");
            var ddlCountryValue = "";
            selected.each(function () {
                ddlCountryValue += $(this).text() + ",";
            });

            var checkbox = "";
            if ($('#chkArc').prop('checked')) {
                checkbox = "1"
            }
            else {
                checkbox = "0"
            }
            var varExclusionCheckBox = "";
            if ($('#ExclusionCheckBox').prop('checked')) {
                varExclusionCheckBox = "1"
            }
            else {
                varExclusionCheckBox = "0"
            }

            var varGeneralTermsCheckbox = "";
            if ($('#GeneralTermsCheckbox').prop('checked')) {
                varGeneralTermsCheckbox = "1"
            }
            else {
                varGeneralTermsCheckbox = "0"
            }

            var selected = $("#Attachment").val();

            var EndCustomer = $("#EndCustomer").val();
            var Quotation_Description = $("#Quotation_Description").val();


            var ScopeOfWork = CKEDITOR.instances['ScopeOfWork'].getData();



            var Deliverable = CKEDITOR.instances['Deliverable'].getData();
            //var Commercials = CKEDITOR.instances['Commercials'].getData();
            var FeesStructure = CKEDITOR.instances['FeesStructure'].getData();
            var PaymentTerms = CKEDITOR.instances['PaymentTerms'].getData();
            // var KeyNotes = CKEDITOR.instances['KeyNotes'].getData();
            //var AddEnclosures = CKEDITOR.instances['AddEnclosures'].getData();
            var AddEnclosures = $("#AddEnclosures").val();
            var ComplimentaryClose = $("#ComplimentaryClose").val();
            var CommunicationProtocol = CKEDITOR.instances['CommunicationProtocol'].getData();
            // var Coordinators = CKEDITOR.instances['Coordinators'].getData();
            // var EscalationMatrix = CKEDITOR.instances['EscalationMatrix'].getData();

            var arrInspectionLocation = $("#ProductLists").val() || [];
            var p = arrInspectionLocation.join(",");
            var arrCountry = $("#CountryNameList").val() || [];
            var Country = arrCountry.join(",");
            var arrCity = $("#CityNameList").val() || [];
            var City = arrCity.join(",");
            var chkCountry = Country;
            var chkCity = City;
            var DStatusList;
            var IStatusList;





            var selected = $("#CityNameList option:selected");
            var ddlCityValue = "";
            selected.each(function () {
                ddlCityValue += $(this).text() + ",";
            });


            var DArray = [];

            if (arrInspectionLocation != '1') {

                DStatusList = $("#DStatusList option:selected").val();

                // alert(DStatusList)

                $('.trDomestic').each(function () {
                    var trD = {};


                    var OrderType = $(this).find('.COrderType').val();
                    var OrderRate = $(this).find('.COrderRate').val();
                    var Estimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth').val();
                    var distance = $(this).find('.CDistance').val();
                    var DEstimatedAmount = $(this).find('.CEstimatedAmount').val();
                    var Dcurrency = $(this).find('.CDcurrency').val();
                    var DExchangeRate = $(this).find('.CDExchangeRate').val();
                    var DTotalAmount = $(this).find('.CDTotalAmount').val();
                    var DRemarks = $(this).find('.CDRemarks').val();

                    if (OrderType == '') {

                        $(this).find('.COrderType').focus()
                        return a = "2";
                    }
                    if (OrderRate == '') {

                        $(this).find('.COrderRate').focus()
                        return a = "2";
                    }
                    if (Estimate_ManDays_ManMonth == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CEstimate_ManDays_ManMonth').focus()
                        return a = "2";
                    }
                    if (DEstimatedAmount == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CEstimatedAmount').focus()
                        return a = "2";
                    }
                    if (Dcurrency == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CDcurrency').focus()
                        return a = "2";
                    }
                    if (DExchangeRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CDExchangeRate').focus()
                        return a = "2";
                    }
                    if (OrderType == 'ManDays') {
                        if (distance == '') {
                            //alert("Please Fill all details in Domestic")
                            $(this).find('.CDistance').focus()
                            return a = "2";
                        }
                    }



                    if (a !== "2") {
                        trD['OrderType'] = OrderType;
                        trD['OrderRate'] = OrderRate;
                        if (OrderType == 'ManDays' || OrderType == 'ManHR' || OrderType == 'LumSum' || OrderType == 'Perc') {
                            trD['Estimate_ManDays'] = Estimate_ManDays_ManMonth;
                            trD['Estimate_ManMonth'] = null;
                        }
                        else if (OrderType == 'ManMonth') {
                            trD['Estimate_ManDays'] = null;
                            trD['Estimate_ManMonth'] = Estimate_ManDays_ManMonth;
                        }
                        else {
                            trD['Estimate_ManMonth'] = null;
                            trD['Estimate_ManDays'] = null;
                        }
                        trD['Distance'] = distance;
                        trD['EstimatedAmount'] = DEstimatedAmount;
                        trD['Currency'] = Dcurrency;
                        trD['ExchangeRate'] = DExchangeRate;
                        trD['DTotalAmount'] = DTotalAmount;
                        trD['DRemark'] = DRemarks;




                        DArray.push(trD);
                    }



                });

            }






            var IArray = [];

            if (arrInspectionLocation != '2') {

                IStatusList = $("#IStatusList option:selected").val();



                $('.trInternational').each(function () {
                    var trI = {};




                    var IOrderType = $(this).find('.CIOrderType').val();
                    var IOrderRate = $(this).find('.CIOrderRate').val();
                    var IEstimate_ManDays_ManMonth = $(this).find('.CIEstimate_ManDays_ManMonth').val();
                    var Idistance = $(this).find('.CIDistance').val();
                    var IEstimatedAmount = $(this).find('.CIEstimatedAmount').val();
                    var Icurrency = $(this).find('.CIcurrency').val();
                    var IExchangeRate = $(this).find('.CIExchangeRate').val();
                    var ITotalAmount = $(this).find('.CITotalAmount').val();
                    var IRemarks = $(this).find('.CIRemarks').val();


                    if (IOrderType == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIOrderType').focus()
                        return b = "2";
                    }
                    if (IOrderRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIOrderRate').focus()
                        return b = "2";
                    }
                    if (IEstimate_ManDays_ManMonth == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIEstimate_ManDays_ManMonth').focus()
                        return b = "2";
                    }
                    if (IEstimatedAmount == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIEstimatedAmount').focus()
                        return b = "2";
                    }
                    if (Icurrency == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIcurrency').focus()
                        return b = "2";
                    }
                    if (IExchangeRate == '') {
                        //alert("Please Fill all details in Domestic")
                        $(this).find('.CIExchangeRate').focus()
                        return b = "2";
                    }




                    if (b !== "2") {

                        trI['IOrderType'] = IOrderType;
                        trI['IOrderRate'] = IOrderRate;
                        if (IOrderType == 'ManDays') {
                            trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
                            trI['IEstimate_ManMonth'] = null;
                        }
                        else if (IOrderType == 'ManMonth') {
                            trI['IEstimate_ManDays'] = null;
                            trI['IEstimate_ManMonth'] = IEstimate_ManDays_ManMonth;
                        }
                        else {
                            trI['IEstimate_ManMonth'] = null;
                            trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
                        }
                        trI['IDistance'] = Idistance;
                        trI['IEstimatedAmount'] = IEstimatedAmount;
                        trI['InternationalCurrency'] = Icurrency;
                        trI['IExchangeRate'] = IExchangeRate;
                        trI['ITotalAmount'] = ITotalAmount;
                        trI['IRemark'] = IRemarks;

                        IArray.push(trI);
                    }
                });


            }


            //*********************************************************
            //var multipleValues = $("#ddlStatusType").val();
            var multipleValues = $("#txtstatus").val();

            var l = $("#LostReason").val();

            //*********************************************************
            if (multipleValues == '4') {
                if ($("#LostReason").val() == "" || $("#LostReason").val() == null) {
                    alert("Please Enter Lost Reason !!!");
                    $("#LostReason").focus()
                    return false;
                }
            }

            if (p == "") {
                alert("Please Select Inspection Location")
                $("#ProductLists").focus()

                return false;
            }
            if (p == "1") {
                if (chkCountry = null || chkCountry == "") {
                    alert("please Select Country")
                    $("#CountryNameList").focus()

                    return false;
                }
            }
            if (p == "2") {
                if (chkCity = null || chkCity == "") {
                    alert("please Select City")
                    $("#CityNameList").focus()
                    return false;
                }
            }
            if (p == "1,2") {
                if (chkCountry = null || chkCountry == "") {
                    alert("please Select Country")
                    $("#CountryNameList").focus()
                    return false;
                }
                if (chkCity = null || chkCity == "") {
                    alert("please Select City")
                    $("#CityNameList").focus()
                    return false;
                }
            }

            //if ($("#Enquiry").val() == "" || $("#Enquiry").val() == null) {
            //    alert("Please Enter Enquiry Description !!!");
            //    $("#Enquiry").focus()
            //    return false;
            //}
            if ($("#QuotationCompanyName").val() == "" || $("#QuotationCompanyName").val() == null) {
                alert("Please Enter Company Name First !!!");
                $("#QuotationCompanyName").focus()
                return false;
            }
            if (ddlProjectType == "" || ddlProjectType == null) {
                alert("Please Select At lease (1) Project Type !!!");
                $("#ProjectType").focus()
                return false;
            }
            if (ddlType == "" || ddlType == null) {
                alert("Please Select at lease (1) Type !!!");
                $("#ServiceType").focus()
                return false;
            }
            if (ddlBranch == "---Select Branch---" || ddlBranch == "" || ddlBranch == null) {
                alert("Please Select Branch !!!");
                $("#ddlBrachType").focus()
                return false;
            }
            if (a == "2") {
                alert("Please Fill details in Domestic !!!");
                $("#EstimatedAmount").focus()
                return false;
            }
            if (b == "2") {
                alert("Please Fill details in Internation !!!");
                $("#EstimatedAmount").focus()
                return false;
            }

            if (arrInspectionLocation == "" || arrInspectionLocation == "" || arrInspectionLocation == null) {
                alert("Please Select Inspection Location !!!");
                $("#ProductLists").focus()
                return false;
            }
            if ($("#DStatusList").val() == "1") {
                if (DLostReason == "" || DLostReason == null) {
                    alert("Please Select Domestic Lost Reason !!!");
                    $("#DLR").focus()
                    return false;
                }
                else {

                }

            }
            if ($("#IStatusList").val() == "1") {
                if (ILostReason == "" || ILostReason == null) {
                    alert("Please Select International Lost Reason !!!");
                    $("#ILR").focus()
                    return false;
                }
                else {

                }

            }

            event.preventDefault();
            $("#btnQuotaionMasterUpdate").prop('disabled', true);

            var QuotationDetails =
				{
				    EQ_ID: EnquiryID,
				    PK_QTID: PK_QTID,
				    QuotationNumber: QuotationNumber,
				    Enquiry: $("#Enquiry").val(),
				    Quotation_Description: $("#Quotation_Description").val(),
				    EndCustomer: $("#EndCustomer").val(),
				    QuotationCompanyName: $("#QuotationCompanyName").val(),
				    Reference: $("#Reference").val(),
				    GST: $("#GST").val(),
				    ExpiryDate: $("#ExpiryDate").val(),
				    ServiceType: $("#ddlServiceType option:selected").val(),
				    QuotationBranch: $("#ddlBrachType option:selected").val(),
				    ProjectType: $("#ddlProjectType option:selected").val(),
				    // Status: $("#ddlStatusType option:selected").val(),
				    Status: $("#txtstatus").val(),

				    Remark: $("#Remark").val(),
				    // HeaderDetails: HeaderDetails,
				    Subject: $("#Subject").val(),
				    //HeaderDetails: HeaderDetails,
				    ScopeOfWork: ScopeOfWork,

				    Deliverable: Deliverable,
				    //  Commercials: Commercials,
				    FeesStructure: FeesStructure,
				    PaymentTerms: PaymentTerms,
				    // KeyNotes: KeyNotes,
				    AddEnclosures: AddEnclosures,
				    CommunicationProtocol: CommunicationProtocol,
				    // Coordinators: Coordinators,
				    //EscalationMatrix: EscalationMatrix,
				    To: $("#To").val(),
				    CC: $("#CC").val(),
				    ApprovalStatus: $("#ApprovalStatus").val(),
				    EnquiryNumber: $("#EnquiryNumber").val(),
				    Attachment: $("#Attachment").val(),
				    FK_CMP_ID: FK_CMP_ID,

				    Validity: Validity,
				    ThirdPartyInspectionService: ThirdPartyInspectionService,
				    ThankYouLetter: ThankYouLetter,

				    CompanyAddress: CompanyAddress,
				    Revise: Revise,
				    PortfolioType: PortfolioType,
				    SubServiceType: SubServiceType,

				    InspectionLocation: p,


				    City: City,
				    Country: Country,
				    EstimatedAmount: $("#EstimatedAmount").val(),
				    Exclusion: $("#Exclusion").val(),
				    //OrderType: OrderType,


				    //  OrderType:trD,


				    OrderType: DArray,
				    o: DArray,
				    LostReason: $("#LostReason").val(),
				    check: checkbox,
				    DomStatus: DStatusList,
				    IntStatus: IStatusList,
				    IGST: $("#IGST").val(),

				    DLostReason: DLostReason,
				    ILostReason: ILostReason,
				    EnquiryAdditionRef: $("#EnquiryAdditionRef").val(),
				    ComplimentaryClose: ComplimentaryClose,
				    EndCustomer: EndCustomer,
				    QuotationImage: ImageId,
				    Quotation_Description : Quotation_Description,
				    //GeneralTermsCheckbox: varGeneralTermsCheckbox,
				    GeneralTerms: $("#GeneralTerms").val(),
				    Enquiry: $("#Enquiry").val(),
				    ReviseReason:varReviseReason,
				    CompanyAddress: $("#ddlCaddr option:selected").val()


				}
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Quotation", "QuotationMaster")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ QM: QuotationDetails, "C": checkbox, "ExclusionCheckBox": varExclusionCheckBox, "o": DArray, "DArray": DArray, "IArray": IArray, "GeneralTermsCheckbox": varGeneralTermsCheckbox }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    @*if (response.success == 3)
                            {
                        alert("Quotation Details has been Updated successfully!!!")
                        window.location.href = '@Url.Action("Quotation", "QuotationMaster")';
                    }*@
                    if (response.result == 'Redirect') {
                        alert("Quotation Details has been Updated successfully!!!")
                        window.location = response.url;
                    }
                    else if (response.success == 1) {
                        alert("Quotation Details has been saved successfully!!!")
                        window.location = response.url;
                    }
                        //else if (response.success == 2) {
                        //    alert("Quotation Details has been Revised!!!")
                        //    //window.location = response.url;
                        //}
                    else if (response.result == 'RedirectRevised') {
                        alert("Quotation Details has been Revised Successfully !!!")
                        window.location = response.url;
                    }
                    else if (response.success == 4) {
                        alert("Failed !!! Something Went Wrong!!!")
                        window.location.href = '@Url.Action("Enquiry", "EnquiryMaster")';
                    }
                    else if (response.success == 5) {
                        alert("Quotation Details has been saved successfully!!!")  //============Code Added By Rahul
                        window.location.href = '@Url.Action("QuotationDetails", "QuotationMaster")';
                    }
                }
            });
        });

    });
</script>

<script>
    $('#filter1').click(function () {
        debugger;
        //$('#partialtabledata').html('');
        var Category = $('#Category').val();
        var data = $('#Searchdata').val();
        if (Category != "" && data != "") {


            $.ajax({
                url: '@Url.Action("Searchdata", "QuotationMaster")',
                type: 'GET',
                datatype: 'json',
                data: { Category: Category, data: data },
                success: function (ObjModelQuotationMast) {
                    debugger;
                    //alert('Hi');

                    // var cknotes = ObjModelQuotationMast.KeyNotes;
                    // $('#KeyNotes').html(cknotes).text();
                    var ScopeOfWork = ObjModelQuotationMast.ScopeOfWork;
                    var Deliverable = ObjModelQuotationMast.Deliverable;


                    alert("Quotation Copied Successfully");
                    // var cknotes = ObjModelQuotationMast.KeyNotes;
                    $('#Remark').val(ObjModelQuotationMast.Remark).val()
                    $('#Subject').val(ObjModelQuotationMast.Subject).val()
                    // $('#HeaderDetails').val(ObjModelQuotationMast.HeaderDetails).val()
                    // $('#ScopeOfWork').val(ObjModelQuotationMast.ScopeOfWork).val()
                    $('#ScopeOfWork').html(ScopeOfWork).text();
                    $('#Deliverable').html(Deliverable).text();
                    //$('#Deliverable').val(ObjModelQuotationMast.Deliverable).val()
                    $('#CommunicationProtocol').val(ObjModelQuotationMast.CommunicationProtocol).val()
                    $('#To').val(ObjModelQuotationMast.To).val()
                    $('#CC').val(ObjModelQuotationMast.CC).val()
                    // $('#Coordinators').val(ObjModelQuotationMast.Coordinators).val()
                    // $('#EscalationMatrix').val(ObjModelQuotationMast.EscalationMatrix).val()
                    // $('#Commercials').val(ObjModelQuotationMast.Commercials).val()
                    $('#FeesStructure').val(ObjModelQuotationMast.FeesStructure).val()
                    $('#PaymentTerms').val(ObjModelQuotationMast.PaymentTerms).val()

                    //var editor = $('#KeyNotes').ckeditorGet();
                    // CKEDITOR.instances.Keynotes.setData(document.getElementById(cknotes).innerHTML);
                    // CKEDITOR.instances['Keynotes'].getData.editor(cknotes);
                    //CKEDITOR.instances['Keynotes'].setData(cknotes)
                    // CKEDITOR.instances[cknotes].updateElement()

                    // $('#KeyNotes').html(cknotes).text();
                    $('#AddEnclosures').val(ObjModelQuotationMast.AddEnclosures).val()
                    $('#Attachment').val(ObjModelQuotationMast.Attachment).val()

                }
            });

        }
        else {
            if (Category == "") {
                alert("Please Select Category");
            }
            else if (data == "") {
                alert("Please Enter Data");
            }
            else {
                alert("Data is not available");
            }

        }
    });
</script>

<script>
    $('#NewCopyQuotation').click(function () {
        debugger;
        //$('#partialtabledata').html('');
        var Category = $('#ddlCustomers').val();
        //var data = $('#Searchdata').val();
        if (Category != "") {


            $.ajax({
                url: '@Url.Action("Copydata", "QuotationMaster")',
                type: 'GET',
                datatype: 'json',
                data: { Category: Category },
                success: function (ObjModelQuotationMast) {
                    debugger;
                    //alert('Hi');

                    var ScopeOfWork = ObjModelQuotationMast.ScopeOfWork;
                    var Deliverable = ObjModelQuotationMast.Deliverable;
                    var CommunicationProtocol = ObjModelQuotationMast.CommunicationProtocol;
                    var FeesStructure = ObjModelQuotationMast.FeesStructure;
                    var PaymentTerms = ObjModelQuotationMast.PaymentTerms;
                    var AddEnclosures = ObjModelQuotationMast.AddEnclosures;
                    CKEDITOR.instances['Deliverable'].setData(Deliverable)
                    var a = CKEDITOR.instances['Deliverable'].getData();
                    $('#Deliverable').html(a).text();

                    CKEDITOR.instances['ScopeOfWork'].setData(ScopeOfWork)
                    var b = CKEDITOR.instances['ScopeOfWork'].getData();
                    $('#ScopeOfWork').html(b).text();

                    CKEDITOR.instances['CommunicationProtocol'].setData(CommunicationProtocol)
                    var C = CKEDITOR.instances['CommunicationProtocol'].getData();
                    $('#CommunicationProtocol').html(C).text();

                    CKEDITOR.instances['FeesStructure'].setData(FeesStructure)
                    var D = CKEDITOR.instances['FeesStructure'].getData();
                    $('#FeesStructure').html(D).text();

                    CKEDITOR.instances['PaymentTerms'].setData(PaymentTerms)
                    var E = CKEDITOR.instances['PaymentTerms'].getData();
                    $('#PaymentTerms').html(E).text();

                    CKEDITOR.instances['ScopeOfWork'].setData(ScopeOfWork)
                    var a = CKEDITOR.instances['ScopeOfWork'].getData();
                    $('#ScopeOfWork').html(a).text();



                    $('#AddEnclosures').val(ObjModelQuotationMast.AddEnclosures).val()
                    $('#ThirdPartyInspectionService').val(ObjModelQuotationMast.ThirdPartyInspectionService).val()
                    $('#Subject').val(ObjModelQuotationMast.Subject).val()
                    $('#ThankYouLetter').val(ObjModelQuotationMast.ThankYouLetter).val()
                    $('#Exclusion').val(ObjModelQuotationMast.Exclusion).val()
                    $('#ComplimentaryClose').val(ObjModelQuotationMast.ComplimentaryClose).val()


                    alert("Quotation Copied Successfully");
                    //var cknotes = ObjModelQuotationMast.KeyNotes;
                    $('#Remark').val(ObjModelQuotationMast.Remark).val()
                    $('#Subject').val(ObjModelQuotationMast.Subject).val()
                    // $('#HeaderDetails').val(ObjModelQuotationMast.HeaderDetails).val()
                    //$('#ScopeOfWork').html(ScopeOfWork).text();
                    //$('#Deliverable').html(Deliverable).text();


                    //$('#CommunicationProtocol').val(ObjModelQuotationMast.CommunicationProtocol).val()
                    $('#To').val(ObjModelQuotationMast.To).val()
                    $('#CC').val(ObjModelQuotationMast.CC).val()
                    // $('#Coordinators').val(ObjModelQuotationMast.Coordinators).val()
                    // $('#EscalationMatrix').val(ObjModelQuotationMast.EscalationMatrix).val()
                    // $('#Commercials').val(ObjModelQuotationMast.Commercials).val()
                    $('#FeesStructure').val(ObjModelQuotationMast.FeesStructure).val()
                    $('#PaymentTerms').val(ObjModelQuotationMast.PaymentTerms).val()

                    //var editor = $('#KeyNotes').ckeditorGet();
                    // CKEDITOR.instances.Keynotes.setData(document.getElementById(cknotes).innerHTML);
                    // CKEDITOR.instances['Keynotes'].getData.editor(cknotes);
                    //CKEDITOR.instances['Keynotes'].setData(cknotes)
                    //CKEDITOR.instances[cknotes].updateElement()

                    // $('#KeyNotes').html(cknotes).text();


                    //var editor = $('#Deliverable').ckeditorGet();



                    // $('#AddEnclosures').val(ObjModelQuotationMast.AddEnclosures).val()
                    $('#Attachment').val(ObjModelQuotationMast.Attachment).val()
                    $('#ThankYouLetter').val(ObjModelQuotationMast.ThankYouLetter).val()
                    $('#ThirdPartyInspectionService').val(ObjModelQuotationMast.ThirdPartyInspectionService).val()

                }
            });

        }
        else {
            if (Category == "") {
                alert("Please Select Quotation Number");
            }


        }
    });
</script>



<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>

@*Delete Uploaded File Code added by manoj Sharma 12 March 2020*@

<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            //var EnquiryID = $("#EQ_ID").val();
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#ClientName").autocomplete({

            source: function (request, response) {
                debugger;
                $.ajax({
                    //url: "/TrainingSchedule/GetRecord",
                    url: '@Url.Action("GetClientRecord", "QuotationMaster")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.ClientName, value: item.ClientName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#QuotationDescription").autocomplete({

            source: function (request, response) {
                debugger;
                $.ajax({
                    //url: "/TrainingSchedule/GetRecord",
                    url: '@Url.Action("GetQuotationDescription", "QuotationMaster")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Quotation_Description, value: item.Quotation_Description };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#ProjectName").autocomplete({

            source: function (request, response) {
                debugger;
                $.ajax({

                    url: '@Url.Action("GetClientRecord", "QuotationMaster")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.ClientName, value: item.ClientName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#EnquiryDescription").autocomplete({

            source: function (request, response) {
                debugger;
                $.ajax({

                    url: '@Url.Action("GetEnquiryDescription", "QuotationMaster")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Enquiry_Description, value: item.Enquiry_Description };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

<script type="text/javascript">


    $('#NewSearch').click(function () {
        debugger;
        //console.log($('#CompanyName').val())
        $('#ddlCustomers').html('');
        //var VisitReport = $('#VisitReport').val();
        //var SubJobNo = $('#SubJobNo').val();
        //var ProjectName = $('#ProjectName').val();
        var ClientName = $('#ClientName').val();
        var QuotationDescription = $('#QuotationDescription').val();
        var QuotationNumberSearch = $('#QuotationNumberSearch').val();
        //var EnquiryDescription = $('#EnquiryDescription').val();

        $.ajax({
            type: "post",
            url: '@Url.Action("NewSearchdata", "QuotationMaster")',
            //data: { CompanyName: $('#CompanyName').val() },
            data: { ClientName: ClientName, QuotationDescription: QuotationDescription, QuotationNumberSearch: QuotationNumberSearch },
            datatype: "json",
            traditional: true,
            success: function (data) {
                // alert(data)
                $("#Others").show();
                $("#Systemhide").hide();

                var district = "<select id='ddlCustomers'>";
                district = district + '<option value="">--Select Quotation Number--</option>';
                for (var i = 0; i < data.length; i++) {
                    district = district + '<option value=' + data[i].ddlQuotationNumber + '>' + data[i].ddlQuotationNumber + '</option>';
                }
                district = district + '</select>';
                $('#ddlCustomers').html(district);

                //$.each(response, function () {
                //    ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
                //});
            }
        });
        //});
    });
</script>


<script>
    $(document).ready(function () {
        debugger;
        $('#ProductLists').on('change', function () {
            debugger;
            var multipleValues = $("#ProductLists").val() || [];

            var p = multipleValues.join(",");
            if (p == '1,2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").show();

                $("#DomesticCurrency").show();
                $("#InternationalCurrency").show();
                $("#divGST").show();
                $("#divIGST").show();

                $(".CDcurrency").val("1");
                $(".CDExchangeRate").val("1");

                $(".CIcurrency").val("3");
                $(".CIExchangeRate").val("75");

                sumIt()
            }
            else if (p == '1') {
                $("#INTERNATIONAL").show();
                $("#DOMESTIC").hide();

                $("#DomesticCurrency").hide();
                $("#InternationalCurrency").show();

                $("#divGST").hide();
                $("#divIGST").show();

                $("#CityNameList option:selected").val("");
                $(".COrderType").val("");
                $(".COrderRate").val("");
                $(".CEstimate_ManDays_ManMonth").val("");
                $(".CDistance").val("");
                $(".CDEstimatedAmount").val("");
                $(".CDcurrency").val("");
                $(".CDExchangeRate").val("");
                $(".CDTotalAmount").val("");

                $(".CIcurrency").val("3");
                $(".CIExchangeRate").val("75");
                sumIt()
            }
            else if (p == '2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").hide();

                $("#divGST").show();
                $("#divIGST").hide();

                $("#DomesticCurrency").show();
                $("#InternationalCurrency").hide();

                $("#CountryNameList option:selected").val("");
                $(".CIOrderRate").val("");
                $(".CIOrderType").val("");
                $(".CIEstimate_ManDays_ManMonth").val("");
                $(".CIDistance").val("");
                $(".CIEstimatedAmount").val("");
                $(".CIcurrency").val("");
                $(".CIExchangeRate").val("");
                $(".CITotalAmount").val("");
                $(".CDcurrency").val("1");
                $(".CDExchangeRate").val("1");
                sumIt()

            }
            else {
                $("#DOMESTIC").hide();
                $("#INTERNATIONAL").hide();

                $("#divGST").hide();
                $("#divIGST").hide();

                $("#DomesticCurrency").hide();
                $("#InternationalCurrency").hide();

                $("#DEstimatedAmount").val("");
                $("#Dcurrency option:selected").val("");
                $("#DExchangeRate").val("");
                $("#DTotalAmount").val("");
                $("#IEstimatedAmount").val("");
                $("#Icurrency").val("");
                $("#IExchangeRate").val("");
                $("#ITotalAmount").val("");
                sumIt()
            }



            //if  (this.value == '2' && this.value == '1') {
            //    $("#DOMESTIC").show();
            //    $("#INTERNATIONAL").hide();
            //}
            //else if (this.value == '2') {
            //    $("#DOMESTIC").show();
            //    $("#INTERNATIONAL").hide();
            //}
            //else if
            //    (this.value == '1')
            //    //.....................^.......
            //{
            //    $("#INTERNATIONAL").show();
            //    $("#DOMESTIC").hide();
            //}



        });
    });
</script>


<script>
    $(document).ready(function () {
        debugger;
        //$('#ProductLists').on('change', function () {
        debugger;
        var multipleValues = $("#ProductLists").val() || [];

        var p = multipleValues.join(",");
        if (p == '1,2') {
            $("#DOMESTIC").show();
            $("#INTERNATIONAL").show();

            $("#DomesticCurrency").show();
            $("#InternationalCurrency").show();
            $("#divGST").show();
            $("#divIGST").show();
            sumIt()
        }
        else if (p == '1') {
            $("#INTERNATIONAL").show();
            $("#DOMESTIC").hide();

            $("#DomesticCurrency").hide();
            $("#InternationalCurrency").show();


            //$("#CityNameList").val("");
            $(".COrderType").val("");
            $(".COrderRate").val("");
            $(".CEstimate_ManDays_ManMonth").val("");
            $(".CDistance").val("");
            $(".CDEstimatedAmount").val("");
            $(".CDcurrency").val("");
            $(".CDExchangeRate").val("");
            $(".CDTotalAmount").val("");
            $("#divGST").hide();
            $("#divIGST").show();
            sumIt()
        }
        else if (p == '2') {
            $("#DOMESTIC").show();
            $("#INTERNATIONAL").hide();

            $("#DomesticCurrency").show();
            $("#InternationalCurrency").hide();

            //$("#CountryNameList").val("");
            $(".CIOrderRate").val("");
            $(".CIOrderType").val("");
            $(".CIEstimate_ManDays_ManMonth").val("");
            $(".CIDistance").val("");
            $(".CIEstimatedAmount").val("");
            $(".CIcurrency").val("");
            $(".CIExchangeRate").val("");
            $(".CITotalAmount").val("");
            $("#divGST").show();
            $("#divIGST").hide();
            sumIt()

        }
        else {
            $("#DOMESTIC").hide();
            $("#INTERNATIONAL").hide();


            $("#DomesticCurrency").hide();
            $("#InternationalCurrency").hide();

            $("#DEstimatedAmount").val("");
            $("#Dcurrency option:selected").val("");
            $("#DExchangeRate").val("");
            $("#DTotalAmount").val("");
            $("#IEstimatedAmount").val("");
            $("#Icurrency").val("");
            $("#IExchangeRate").val("");
            $("#ITotalAmount").val("");
            $("#divGST").hide();
            $("#divIGST").hide();
            sumIt()
        }







        //});
    });
</script>


<script type="text/javascript">
    $(function () {
        $('#ProductLists').multiselect({
            includeSelectAllOption: true
        });

    });
</script>

<script type="text/javascript">
    //$(document).ready(function () {
    function onchangeevent() {
        debugger;
        var multipleValues = $("#ProductLists").val() || [];
        var DTotalAmount = 0;
        var ITotalAmount = 0;

        var p = multipleValues.join(",");

        if (p == '1') {
            var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
            var IExchangedRate = parseFloat($('#IExchangeRate').val());
            ITotalAmount = IEstimatedAmount * IExchangedRate;
            $('#EstimatedAmount').val(ITotalAmount);
            $('#ITotalAmount').val(ITotalAmount);
            $("#DomesticCurrency").hide();
            $("#InternationalCurrency").show();


        }
        if (p == '2') {
            var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
            var ExchangedRate = parseFloat($('#DExchangeRate').val());


            DTotalAmount = EstimatedAmount * ExchangedRate;
            $('#EstimatedAmount').val(DTotalAmount);
            $('#DTotalAmount').val(DTotalAmount);
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").hide();
        }
        if (p == '1,2') {
            var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
            var ExchangedRate = parseFloat($('#DExchangeRate').val());

            var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
            var IExchangedRate = parseFloat($('#IExchangeRate').val());

            DTotalAmount = EstimatedAmount * ExchangedRate;

            if (isNaN(DTotalAmount) == false) {
                $('#DTotalAmount').val(DTotalAmount);
            }

            ITotalAmount = IEstimatedAmount * IExchangedRate;

            if (isNaN(ITotalAmount) == false) {
                $('#ITotalAmount').val(ITotalAmount);
            }

            var GrandTotal = DTotalAmount + ITotalAmount;
            if (isNaN(GrandTotal) == false) {
                $('#EstimatedAmount').val(ITotalAmount);
            }
            // $('#EstimatedAmount').val(GrandTotal);
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").show();
        }
    };


</script>


<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var multipleValues = $("#ProductLists").val() || [];
        var DTotalAmount = 0;
        var ITotalAmount = 0;
        var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
        var ExchangedRate = parseFloat($('#DExchangeRate').val());

        var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
        var IExchangedRate = parseFloat($('#IExchangeRate').val());


        var p = multipleValues.join(",");

        if (p == '1') {
            ITotalAmount = IEstimatedAmount * IExchangedRate;
            // $('#EstimatedAmount').val(ITotalAmount); 30 June
            $('#ITotalAmount').val(ITotalAmount);

            $("#DomesticCurrency").hide();
            $("#InternationalCurrency").show();


        }
        if (p == '2') {


            DTotalAmount = EstimatedAmount * ExchangedRate;
            // $('#EstimatedAmount').val(DTotalAmount); 30 June
            $('#DTotalAmount').val(DTotalAmount);
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").hide();
        }
        if (p == '1,2') {

            DTotalAmount = EstimatedAmount * ExchangedRate;
            $('#DTotalAmount').val(DTotalAmount);

            ITotalAmount = IEstimatedAmount * IExchangedRate;
            $('#ITotalAmount').val(ITotalAmount);

            var GrandTotal = DTotalAmount + ITotalAmount;
            // $('#EstimatedAmount').val(GrandTotal); 30 June
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").show();
        }
        ///var multipleValues = $("#ddlStatusType").val();

        var multipleValues = $("#txtstatus").val();
        if (multipleValues == 4) {
            $("#LostReason1").show();
        }
        else {
            $("#LostReason1").hide();
        }


    });


</script>

<script type="text/javascript">
    debugger;
    //$(document).ready(function () {
    function onchangeddlStatus() {
        debugger;

        // var multipleValues = $("#ddlStatusType").val();

        var multipleValues = $("#txtstatus").val();

        if (multipleValues == 4) {
            $("#LostReason1").show();
            $("#LostReason").focus();
        }
        else {
            $("#LostReason1").hide();
        }
    };

    //});
</script>

@*<script>
        CKEDITOR.replace('ScopeOfWork', {
          height: 280,
          // List of text formats available for this editor instance.
          format_tags: 'p;h1;h2;h3;h4;h5;h6;pre;address;div'
        });
    </script>*@

@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>*@


<script type="text/javascript">

    var DTRowCount = 1;

    $(document).ready(function () {

        $(document).on("click", ".classAdd", function () { //
            debugger;

            if ($('#DTestTable tr').length - 1 >= DTRowCount) {
                var count = $('#DTestTable tr').length - 1;
                DTRowCount = count;
            }
            //if (count < 3) {
            DTRowCount += 1;
            var contactdiv = '<tr class="trDomestic" style="background-color:#f0f0f0">' +
          '<td>' +


      ' <select name="OrderType"  class="form-control COrderType" id="ddlOrderType' + DTRowCount + '"  onchange="DDropdownChange()"> <option value="">Select Order Type</option> <option value="ManDays">Man Days</option> <option value="ManMonth">Man Month</option> <option value="LumSum">Lump Sum</option><option value="Perc">Percentage</option> <option value="ManHR">Man Hours</option></select>  </td>' +


          '<td><input type="number" name="OrderRate" class="form-control COrderRate" onkeyup="cc()" id="IddOrderRate' + DTRowCount + '"/></td>' +
          '<td><input type="number" name="Estimate_ManDays_ManMonth"  class="form-control CEstimate_ManDays_ManMonth" onkeyup="ccc()" id="IddEstimate_ManDays_ManMonth' + DTRowCount + '"/></td>' +
          '<td><input type="number" name="Distance"  class="form-control CDistance" id="IddDistance' + DTRowCount + '"/></td>' +
          //'<td><input type="number" name="EstimatedAmount"  class="form-control CEstimatedAmount" onkeyup="cc()" id="IddEstimatedAmount' + DTRowCount + '"/></td>' +

          '<td><select name="Dcurrency"  class="form-control CDcurrency" Id="IddDcurrency' + DTRowCount + '"> <option value="">--Select Currency--</option> <option value="1" selected>INR</option> <option value="2">EUR</option> <option value="3">USD</option><option value="4">GBP</option><option value="5">LKR</option><option value="6">THB</option></select>  </td>' +

          '<td><input type="number" name="DExchangeRate"  class="form-control CDExchangeRate" onkeyup="c()" Id="IddDExchangeRate' + DTRowCount + '" value="1"/></td>' +
          '<td><input type="text" name="DTotalAmount"  class="form-control CDTotalAmount" id="IddDTotalAmount' + DTRowCount + '" readonly/></td>' +
          '<td><input type="text" name="DRemarks"  class="form-control CDRemarks" id="IddDRemarks' + DTRowCount + '" /></td>' +
          '<td><button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
          '</tr>';
            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class


            //}
            //else {
            //    alert("max 3 value");
            //}




            //var rowCount = $('.data-contact-person').length + 1;







        });
    });
</script>

<script>
    $(document).on("click", ".deleteContact", function () {
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        DTRowCount = DTRowCount - 1;
        sumIt()
    });
</script>
<script type="text/javascript" src="../../Scripts/jquery-1.5.1.min.js"></script>
<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTable");
    }
</script>


@*International*@

<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }


    var ITRowCount = 1;
    $(document).ready(function () {
        $(document).on("click", ".classAddI", function () { //
            debugger;
            var rowCount = $('.data-contact-person').length + 1;


            if ($('#ITestTable tr').length - 1 >= ITRowCount) {
                var count = $('#ITestTable tr').length - 1;
                ITRowCount = count;
            }
            //if (count < 3) {
            //    ITRowCount += 1;



            var contactdiv = '<tr class="trInternational" style="background-color:#f0f0f0">' +
                '<td>' +


            ' <select name="IOrderType"  class="form-control CIOrderType" id="IddlOrderType" onchange="IDropdownChange()"> <option value="">Select Order Type</option> <option value="ManDays">Man Days</option> <option value="ManMonth">Man Month</option> <option value="LumSum">Lump Sum</option><option value="Perc">Percentage</option> <option value="ManHR">Man Hours</option></select>  </td>' +
                '<td><input type="number" name="IOrderRate" class="form-control CIOrderRate" onkeyup="CICI()"/></td>' +
                '<td><input type="number" name="IEstimate_ManDays_ManMonth"  class="form-control CIEstimate_ManDays_ManMonth" onkeyup="CICICI()" /></td>' +
                '<td><input type="number" name="IDistance"  class="form-control CIDistance"/></td>' +
                //'<td><input type="text" name="IEstimatedAmount"  class="form-control CIEstimatedAmount" onkeyup="CICI()"/></td>' +

                '<td><select name="Icurrency"  class="form-control CIcurrency"> <option value="">--Select Currency--</option> <option value="1">INR</option> <option value="2">EUR</option> <option value="3" selected>USD</option><option value="4">GBP</option><option value="5">LKR</option><option value="6">THB</option></select>  </td>' +
                '<td><input type="number" name="IExchangeRate"  class="form-control CIExchangeRate" onkeyup="CI()" value="75"/></td>' +
                '<td><input type="text" name="ITotalAmount"  class="form-control CITotalAmount" readonly/></td>' +
                '<td><input type="text" name="IRemarks"  class="form-control CIRemarks" /></td>' +
                '<td><button type="button" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
                '</tr>';
            $('#ITestTable').append(contactdiv); // Adding these controls to Main table class
            //}
            //else {
            //    alert("Max 3 Value");
            //}






        });
    });
</script>

<script>
    $(document).on("click", ".IdeleteContact", function () {
        ITRowCount = ITRowCount - 1;
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        sumIt()
    });
</script>

<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#ITestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#ITestTable");
    }
</script>
@*<script type="text/javascript">
        function CalculateAmount()
        {

            debugger;

        $('.trDomestic').each(function () {

            var DEstimatedAmount = $(this).find('.CEstimatedAmount').val();
            var DExchangeRate = $(this).find('.CDExchangeRate').val();
            var DTotalAmount = DEstimatedAmount * DExchangeRate;
        })

    }
    </script>*@

<script type="text/javascript">
    $(".CDExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    //$(".CEstimatedAmount").on("keyup change", function (e) {
    $(".COrderRate").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    $(".CEstimate_ManDays_ManMonth").on("keyup", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })
</script>

<script type="text/javascript">
    $(".CIExchangeRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CIEstimatedAmount").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        //var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIOrderRate").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        //var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {
        debugger;
        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
        var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        var two = Number(tableRow.find(".CIOrderRate").val());
        //var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })
</script>



<script>
    //Domestic amount calculation
    function c() {
        debugger;
        $(".CDExchangeRate").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }

    function cc() {
        debugger;
        //$(".CEstimatedAmount").on("keyup change", function (e) {
        $(".COrderRate").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }

    function ccc() {
        debugger;
        //$(".CEstimatedAmount").on("keyup change", function (e) {
        $(".CEstimate_ManDays_ManMonth").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }

            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }
</script>

<script>
    //Domestic amount calculation

</script>

<script>
    function CI() {
        debugger;
        $(".CIExchangeRate").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
            // var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            var OrderType = tableRow.find(".CIOrderType").val();
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }

    function CICI() {
        debugger;
        $(".CIEstimatedAmount").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
            // var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            var OrderType = tableRow.find(".CIOrderType").val();
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }

    function CICICI() {
        debugger;
        $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {
            debugger;
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
            //var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            var OrderType = tableRow.find(".CIOrderType").val();
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }


</script>

<script type="text/javascript">
    //$(document).ready(function () {
    function sumIt() {

        debugger;
        var Ival = 0, val;
        var totalnew = 0, val;

        var Dtotal = 0, val;
        var Itotal = 0, val;
        var GTotal = 0, val;

        var multipleValues = $("#ProductLists").val() || [];
        var DTotalAmount = 0;
        var ITotalAmount = 0;

        var p = multipleValues.join(",");

        if (p == '1') {//International

            $('.CITotalAmount').each(function () {
                val = $(this).val();
                val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
                totalnew += val;
            });
            $('#EstimatedAmount').val(Math.round(totalnew));


            //$("#DomesticCurrency").hide();
            //$("#InternationalCurrency").show();


        }
        if (p == '2') {//Domestic
            $('.CDTotalAmount').each(function () {
                val = $(this).val();
                val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
                totalnew += val;
            });



            $('#EstimatedAmount').val(Math.round(totalnew));


            //$("#DomesticCurrency").show();
            //$("#InternationalCurrency").hide();
        }
        if (p == '1,2') {


            $('.CDTotalAmount').each(function () {
                val = $(this).val();
                val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
                Dtotal += val;
            });

            $('.CITotalAmount').each(function () {

                Ival = $(this).val();

                Ival = isNaN(Ival) || $.trim(Ival) === "" ? 0 : parseFloat(Ival);
                Itotal += Ival;
            });

            GTotal = Dtotal + Itotal;
            $('#EstimatedAmount').val(Math.round(GTotal));




        }
    };


</script>


@*Remove validation on OrderType Change*@


<style>
    .addCSS {
        pointer-events: none;
    }
</style>




<script type="text/javascript">

    $(document).ready(function () {
        debugger;
        var SendForApprovel = $("#SendForApprovel").val();        //// Auto Approval Flag
        var CSSendForApproval = $("#CSSentforApproval").val();    //// Manual Approval Flag
        var ICSSendForApproval = $("#ICSSentforApproval").val();  //// International Manual Approval Flag



        var DCostSheetApprove = $("#CostSheetApproveStatus").val();   ///// Domestic Costsheet Approval Flag
        var ICostSheetApprove = $("#ICostSheetApproveStatus").val();  ///// International Costsheet Approval Flag

        var ProductLists = document.getElementById("ProductLists");

        var EstimatedAmount = $("#EstimatedAmount").val();
        var CostSheetCLStatus = $("#CostSheetCLStatus").val();//Domestic
        var ICostSheetCLStatus = $("#ICostSheetCLStatus").val();//International



        if (EstimatedAmount >= 1000000)//chk cluster head status
        {

            if (CSSendForApproval == "Yes") {
                //domestic send for appr
                //ProductLists.className += "addCSS";

                var DL = document.getElementById("hideInspectionLocation");
                DL.className += "addCSS";


                if (DCostSheetApprove == 4 || CostSheetCLStatus == 4) {

                }
                else {
                    var v = document.getElementById("DomesticCurrency");
                    v.className += "addCSS";
                }

            }

            if (ICSSendForApproval == "Yes") { //International send for appr

                var IL = document.getElementById("hideInspectionLocation");
                IL.className += "addCSS";
                if (ICostSheetApprove == 4 || ICostSheetCLStatus == 4)  //Rejected
                {

                }
                else {
                    var vv = document.getElementById("InternationalCurrency");
                    vv.className += "addCSS";
                }
            }
        }
        else {
            if (CSSendForApproval == "Yes" || SendForApprovel == "Auto") {
                //ProductLists.className += "addCSS";
                var DL = document.getElementById("hideInspectionLocation");
                DL.className += "addCSS";

                // alert(1);
                //  alert(DCostSheetApprove);
                if (DCostSheetApprove == 4 || DCostSheetApprove == 7) /// Either rejected or Auto approved but rejected
                {
                    //  alert(2);

                }
                else {
                    // alert(3);
                    var v = document.getElementById("DomesticCurrency");
                    v.className += "addCSS";
                }
                //if (DCostSheetApprove == 2 || DCostSheetApprove != 7)
                //{
                //    var v = document.getElementById("DomesticCurrency");
                //    v.className += "addCSS";
                //}
            }

            if (ICSSendForApproval == "Yes") {
                //ProductLists.className += "addCSS";
                var IL = document.getElementById("hideInspectionLocation");
                IL.className += "addCSS";
                if (ICostSheetApprove == 4)//Rejected
                {

                }
                else {
                    var vv = document.getElementById("InternationalCurrency");
                    vv.className += "addCSS";
                }
            }
        }







    });
</script>


@Html.HiddenFor(model => model.IId)



<script>








    $(document).ready(function () {
        ILostReasonVisiblity()
        DLostReasonVisiblity()
    });

    $("#IStatusList").change(function () {
        ILostReasonVisiblity()
    });
    $("#DStatusList").change(function () {
        DLostReasonVisiblity()
    });

    function ILostReasonVisiblity() {
        var I = $("#IStatusList").val();

        if (I == "1") {

            $("#divILR").show();
        }
        else {
            $("#divILR").hide();
        }
    }

    function DLostReasonVisiblity() {
        var D = $("#DStatusList").val();

        if (D == "1") {

            $("#DivDLR").show();
        }
        else {
            $("#DivDLR").hide();
        }
    }

</script>


<script>
    function ClearQuotation() {
        debugger;
        // var ScopeOfWork = ObjModelQuotationMast.ScopeOfWork;
        //$('#ScopeOfWork').html(b).text("");


        var x = confirm("Are you sure you want to delete record?");
        if (x) {
            $('#ThirdPartyInspectionService').val("");
            $('#Subject').val("");
            $('#ThankYouLetter').val("");
            CKEDITOR.instances['ScopeOfWork'].setData('');
            $('#Exclusion').val("");
            CKEDITOR.instances['Deliverable'].setData('');
            CKEDITOR.instances['CommunicationProtocol'].setData('');
            CKEDITOR.instances['FeesStructure'].setData('');
            CKEDITOR.instances['PaymentTerms'].setData('');
            $('#ComplimentaryClose').val("");
            alert("Record deleted Successfully")
        }
        else
        {

        }



    }
</script>

<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />

<script type="text/javascript">
    $(function () {
        $(".EndCustomer").autocomplete({
            source: function (request, response) {

                $.ajax({
                    url: '@Url.Action("GetCompanyName", "EnquiryMaster")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        response($.map(data, function (item) {

                            return { label: item.CompanyName, value: item.CompanyName };


                        }));
                    },
                    error: function (response) {
                        //alert(response.responseText);
                    },
                    failure: function (response) {
                      //  alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //if (u.item.val == -1) {
                //    return false;
                //}
                //$("#hfCompanyName").val(i.item.val);
            },
            minLength: 2
        });

    });
</script>






<script>
    $("#btnAddNewContact").on('click', function ()
    {
        debugger;
        var customerId = "1";

        $.ajax({
            type: "POST",
            url: '@Url.Action("Details", "QuotationMaster")',
            data: '{customerId: "' + customerId + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (response)
            {
                $("#partialModal").find(".modal-body").html(response);
                $("#partialModal").modal('show');
            },
            failure: function (response)
            {

                alert(response.responseText);

            },
            error: function (response)
            {

                alert(response.responseText);
            }
    });

    });
</script>


<script>
    $("#btnCancelModal").click(function ()
    {

        if ($('[name="grpImage"]:radio:checked'))
        {
            // var checkedValue = document.querySelector('.grpImage:checked').value;
            var checkedValue = $('[name="grpImage"]:radio:checked').val();
          //  alert(checkedValue);
            $("#IId").val(checkedValue);
        }
        else {
            alert("Please select Image")
            return false;
        }


    });



</script>