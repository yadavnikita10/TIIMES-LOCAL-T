@using TuvVision.Models;
@model TuvVision.Models.Users
@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Shared/_TuvVision.cshtml";

    int j = 0;
    int k = 0;
    int jpq = 0;
    
}

<title>Users </title>

@*<link href="~/Alljsandcss/bootstrap-multiselect/bootstrap-multiselect.css" rel="stylesheet" />*@
@*<link href="~/Alljsandcss/css/mutualfunds.css" rel="stylesheet" />*@
<!--  required libraries  -->
@*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-star-rating/4.0.1/css/star-rating.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-star-rating/4.0.1/js/star-rating.min.js"></script>*@
@*DATEPICKER*@

<script type="text/javascript" src="../../Scripts/jquery-1.5.1.min.js"></script>@*15.5*@

@*DATEPICKER*@
@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />


<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>--

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />@*11 May*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>


@*below two js for search inside dropdown*@
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />

@*<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>*@@*15.5*@


<script>
    $(document).ready(function () {
        Reset()
        if ('@ViewBag.lstDOrderType' == null) {
            $('.CDegree').each(function () {
                $(this).css('display', 'block');
            });

            $('.CDiploma').each(function () {
                alert(1);
                $(this).css('display', 'none');
            });

            $('.CPGD').each(function () {
                $(this).css('display', 'none');
            });
        }
    });

    $(function () {
        $(".dateofjoinings").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });

    function AcceptSelNumber(obj) {

        if ($(obj).val() > 100) {
            $(obj).val('');
            return false;
            //    $(obj).val('100');
        }
    }

</script>
<script>

    $(function () {
        $(".OrgChangeDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });


    $(function () {
        $(".dateofbirths").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
</style>

<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
    /*-- Delete color-profile --*/
    ul.AttachmentFormat {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.AttachmentFormat > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.AttachmentFormat > li a.title1 {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.AttachmentFormat > li a.deleteItemFormat {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
</style>


@{
    List<string> EditSectorCode = ViewBag.EditSectorCode as List<string>;
    List<string> EditAnalystName = ViewBag.EditAnalystName as List<string>;
    string strFileName = string.Empty;
    string strPKId = string.Empty;
}
@using (Html.BeginForm())
{
    @Html.Hidden("PK_UserID")
    @Html.HiddenFor(m => m.PKId)
    @Html.HiddenFor(m => m.UserPrimaryKey)
    @Html.HiddenFor(m => m.arrEducationQualification)
    @Html.HiddenFor(m => m.PK_UserID)

    @Html.AntiForgeryToken()
     <!--Start of main content 3-->
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">                    
                    <div class="row">

                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("UserDashBoard", "Users")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Insert User</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form>
                                                <label><u>Title</u></label>
                                                <div class="row">
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>First Name:</label>
                                                        @Html.TextBoxFor(model => model.FirstName, new { placeholder = "Enter First Name", @class = "form-control form-control-custom" })
                                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Middle Name (Father/Mother):</label>
                                                            @Html.TextBoxFor(model => model.MiddleName, new { placeholder = "Enter Middle Name", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>Last Name(Surname):@*<span style="color:#ff0000;">*</span>*@</label>
                                                        @Html.TextBoxFor(model => model.LastName, new { placeholder = "Enter Last Name", @class = "form-control form-control-custom" })
                                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-3">
                                                    <div class="form-group">
                                                        <label>TIIMES User Name:</label>
                                                        @Html.TextBoxFor(model => model.UserName, new { placeholder = "Enter User Name", @class = "form-control form-control-custom" })
                                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                    </div>

                                               

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>

                                                <label><u> Administrative </u></label>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Date Of Joining / Org. Change:</label>
                                                            @Html.TextBoxFor(model => model.DateOfJoining, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date Of Joining", @class = "form-control form-control-custom dateofjoinings", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Branch:</label>
                                                          

                                                            <select id="BrAuditee" class="form-control form-multiselect-city" multiple="multiple" name="BrAuditeeName" placeholder="Select Option">
                                                                @{
                                                                    foreach (var item in ViewData["BranchNameItems"] as IEnumerable<SelectListItem>)
                                                                    {

                                                                        if (ViewData["ListBranchchecked"] != null)
                                                                        {
                                                                            if (Convert.ToString(ViewData["ListBranchchecked"]).Split(',').Contains(item.Value.ToString()))
                                                                            {
                                                                                <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                        }
                                                                    }
                                                                }
                                                            </select>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Cost Centre:</label>
                                                            @if (ViewBag.SubCatlist != null)
                                                            {
                                                                @Html.DropDownListFor(m => m.CostCenter, ViewBag.SubCatlist as IEnumerable<SelectListItem>, "--Select Cost center--", new { @class = "form-control", @id = "Pk_CC_Id", })
                                                                @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Employment category:</label>
                                                            @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                            @Html.DropDownListFor(m => m.EmployementCategory, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Payroll", Value = "Payroll" },
                                                                     new SelectListItem{ Text="Regular Contract", Value = "Regular Contract" },
                                                                     new SelectListItem{ Text="Exclusive Contract with PF", Value = "Exclusive Contract with PF" },
                                                                     new SelectListItem{ Text="Exclusive Contract", Value = "Exclusive Contract" },
                                                                     new SelectListItem{ Text="Empanelled Direct", Value = "Empanelled Direct" },
                                                                     new SelectListItem{ Text="Empanelled Agency", Value = "Empanelled Agency" },


                                                           },

                                                                     new { @class = "form-control", @id = "EC" })
                                                        </div>
                                                    </div>





                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Employee Grade:</label>
                                                            @Html.DropDownListFor(model => model.EmployeeGradeId, new SelectList(@ViewBag.EmployeeGrade, "Code", "Name"), "---Select Title---", new { @id = "EGI", @class = "form-control" })

                                                            @Html.ValidationMessageFor(model => model.EmployeeGradeId, "", new { @class = "text-danger validation-msg", @id = "EGI" })


                                                        </div>


                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>HR Employee Code:</label>
                                                            @Html.TextBoxFor(model => model.EmployeeCode, new { placeholder = "Enter Employee Code", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>SAP Employee Code:</label>
                                                            @Html.TextBoxFor(model => model.SAPEmployeeCode, new { placeholder = "SAP Employee Code", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">

                                                        <div class="form-group">
                                                            <label>SAP Vendor Code:</label>
                                                            @Html.TextBoxFor(model => model.SAP_VendorCode, new { placeholder = "Enter SAP Vendor Code", @class = "form-control form-control-custom" })
                                                        </div>

                                                    </div>
                                                    

                                                



                                                </div>
                                               
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Reporting Person One (Manager): </label>
                                                            @Html.DropDownListFor(m => m.ReportingOne, (SelectList)ViewBag.Employees, "Select Reporting Person One", new { @class = "form-control form-control-custom-ddl", @id = "R1" })
                                                            @*@Html.DropDownListFor(model => model.ReportingOne, new SelectList(@ViewBag.Employees, "PK_UserID", "FullName"), "---Select Reporting One---", new { @class = "form-control form-control-custom-ddl" })*@
                                                            @Html.ValidationMessageFor(model => model.ReportingOne, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Reporting Person Two (PCH):</label>
                                                            @Html.DropDownListFor(m => m.ReportingTwo, (SelectList)ViewBag.Employees, "Select Reporting person 2", new { @class = "form-control form-control-custom-ddl", @id = "R2" })
                                                            @*@Html.DropDownListFor(model => model.ReportingTwo, new SelectList(@ViewBag.Employees, "PK_UserID", "FullName"), "---Select Reporting Tqo---", new { @class = "form-control form-control-custom-ddl" })*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Eligible for OPE:</label>
                                                            @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                            @Html.DropDownListFor(m => m.OPE, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="YES", Value = "YES" },
                                                                     new SelectListItem{ Text="NO", Value = "NO" },
                                                                   

                                                           },

                                                                     new { @class = "form-control", @id = "OPE" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Designation:</label>
                                                            @Html.TextBoxFor(model => model.Designation, new { placeholder = "Enter Designation", @class = "form-control form-control-custom" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>TUVI Email ID:</label>
                                                            @Html.TextBoxFor(model => model.TuvEmailId, new { placeholder = "Enter TUV Email", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.TuvEmailId, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Reason for update:</label>
                                                            @Html.DropDownListFor(m => m.ReasonForUpdate, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Transfer To Other Branch", Value = "Transfer To Other Branch" },
                                                                     new SelectListItem{ Text="Promotion", Value = "Promotion" },
                                                                     new SelectListItem{ Text="Re-designation", Value = "Re-designation" },
                                                                     new SelectListItem{ Text="Organizational Change", Value = "Organizational Change" },
                                                                     new SelectListItem{ Text="Correction", Value = "Correction" },


                                                           },

                                                                     new { @class = "form-control", @id = "RFU" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Employee Grade Old:</label>


                                                            @Html.DropDownListFor(model => model.EmployeeGradeIdOld, new SelectList(@ViewBag.EmployeeGradeOld, "Code", "Name"), "---Select Title---", new { @id = "EGO", @class = "form-control" })

                                                            @Html.ValidationMessageFor(model => model.EmployeeGradeIdOld, "", new { @class = "text-danger validation-msg" })


                                                        </div>


                                                    </div>
                                                  
                                                </div>
                                                   


                                                        @*</div>
                                                    </div>*@
                                                
                                                
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>

                                                <div id = "UserHide" >
                                                    <label ><u > TIIMES </u ></label >
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4" style="pointer-events:none;">
                                                            <div class="form-group">
                                                                <label>UIN:</label>
                                                                @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                                @Html.TextBoxFor(model => model.PK_UserID, new { @placeholder = "Enter UIN", @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.PK_UserID, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label> Role: </label >
                                                                @{
                                                                    if (Model != null)
                                                                    {
                                                                        if (ViewBag.UserRole != null)
                                                                        {
                                                                            @Html.DropDownListFor(model => model.UserRole, new SelectList(@ViewBag.UserRole, "Code", "Name"), "---Select User Type---", new { @id = "ddlUserName", @class = "form-control form-control-custom-ddl" })
                                                                        }
                                                                    }
                                                                    else if (ViewData["RoleNameItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.UserRole, (IEnumerable<SelectListItem>)ViewData["RoleNameItems"], "---Select User Type---", new { @id = "ddlUserName", @class = "form-control col-md-7 col-xs-12 form-control-custom-ddl" })
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.DropDownListFor(model => model.UserRole, new SelectList(@ViewBag.UserRole, "Code", "Name"), "---Select User Type---", new { @id = "ddlUserName", @class = "form-control form-control-custom-ddl" })
                                                                    }

                                                                }
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-4" id="autoUpdate">
                                                            <div class="form-group">
                                                                @*<label>Employee Bifurcation :</label>*@
                                                                <label>Portfolio Access :</label>
                                                                <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option">
                                                                    @{
                                                                    foreach (var item in ViewData["ProjectTypeItems"] as IEnumerable<SelectListItem>)
                                                                    {

                                                                        if (ViewData["ListPKSubJobChecked"] != null)
                                                                        {
                                                                            if (Convert.ToString(ViewData["ListPKSubJobChecked"]).Split(',').Contains(item.Value.ToString()))
                                                                            {
                                                                                    <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                            }
                                                                            else
                                                                            {
                                                                                    <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                                <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                        }
                                                                    }
                                                                    }
                                                                </select>
                                                            </div>
                                                        </div>


                                                        </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Status:</label>
                                                                @if (Model != null)
                                                            {
                                                                if (Model.IsActive == true)
                                                                {
                                                                        <div class="radio">
                                                                            <label class="radio-green">
                                                                                <input type="radio" class="with-gap1" name="IsActive" id="Active" value="true" checked="checked"><label class="radio-lbl-green" for="Active">Active</label>
                                                                            </label>
                                                                            <label class="radio-green">
                                                                                <input type="radio" class="with-gap1" name="IsActive" id="DeActive" value="false"><label class="radio-lbl-green" for="DeActive">DeActive</label>
                                                                            </label>
                                                                        </div>
                                                                }
                                                                else if (Model.IsActive == false)
                                                                {
                                                                        <div class="radio">
                                                                            <label class="radio-green">
                                                                                <input type="radio" class="with-gap1" name="IsActive" id="Active" value="true"><label class="radio-lbl-green" for="Active">Active</label>
                                                                            </label>
                                                                            <label class="radio-green">
                                                                                <input type="radio" class="with-gap1" name="IsActive" id="DeActive" value="false" checked="checked"><label class="radio-lbl-green" for="DeActive">InActive</label>
                                                                            </label>
                                                                        </div>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                    <div class="radio">
                                                                        <label class="radio-green">
                                                                            <input type="radio" class="with-gap1" name="IsActive" id="Active" checked value="true"><label class="radio-lbl-green" for="Active">Active</label>
                                                                        </label>
                                                                        <label class="radio-green">
                                                                            <input type="radio" class="with-gap1" name="IsActive" id="DeActive" value="false"><label class="radio-lbl-green" for="DeActive">InActive</label>
                                                                        </label>
                                                                    </div>
                                                            }

                                                                @*@Html.DropDownListFor(m => m.IsActive, new List<SelectListItem>
              {
             new SelectListItem{ Text="---SELECT---", Value = "" },
              new SelectListItem{ Text="Active", Value = "1" },
              new SelectListItem{ Text="In-Active", Value = "0" },


    },

              new { @class = "form-control", @id = "IsActive" })*@
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                @Html.CheckBoxFor(model => model.IsLocked, new { @id = "chkLocked", @onclick = "ShowHideDiv(this)" })<label for="InActive" style="color:red;">&nbsp;&nbsp; Profile Locked </label>
                                                                
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <label><u>Personal Details</u></label>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Date of Birth:</label>
                                                            @Html.TextBoxFor(model => model.DOB, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date Of Birth", @class = "form-control form-control-custom dateofbirths", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>PAN :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.PanNo, new { @placeholder = "Enter PAN No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.PanNo, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Aadhar Number :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.AadharNo, new { @placeholder = "Enter Aadhar No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Personal Email ID:</label>
                                                            @Html.TextBoxFor(model => model.EmailID, new { placeholder = "Enter Email ID", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Mobile Number:</label>
                                                            @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Enter Mobile Number", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Emergency Contact Number. :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.EmergencyMobile_No, new { @placeholder = "Enter Emergency Mobile Number", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.EmergencyMobile_No, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Residence Number:</label>
                                                            @Html.TextBoxFor(model => model.ResidenceNo, new { placeholder = "Enter Residence Number", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.ResidenceNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>TUVI Landline Number:</label>
                                                            @Html.TextBoxFor(model => model.OfficeNo, new { placeholder = "Enter Office Number", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.OfficeNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>

                                                
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Residing Address:</label>
                                                            @Html.TextAreaFor(model => model.Address1, new { placeholder = "Enter Address 1", @class = "form-control", @rows = "4" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Permanant Address:</label>
                                                            @Html.TextAreaFor(model => model.Address2, new { placeholder = "Enter Address 2", @class = "form-control", @rows = "4" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*<label>Residing Address ZIP Code:</label>*@
                                                            <label>Residing Address PIN code:</label>
                                                            @Html.TextBoxFor(model => model.ZipCode, new { placeholder = "Enter ZIP Code", @class = "form-control form-control-custom CPIN", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*<label>Residing Address ZIP Code:</label>*@
                                                            <label>Permanent address PIN Code:</label>
                                                            @Html.TextBoxFor(model => model.PermanantPin, new { placeholder = "Enter PIN Code", @class = "form-control form-control-custom CPIN" , @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.PermanantPin, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                @*</div>*@
                                                
                                                
                                                  <div class="row">
                                                      <div class="col-xs-12 col-sm-4">
                                                          <div class="form-group">
                                                              <label>Gender:</label>
                                                              @*@if (Model != null)
                                                              {*@
                                                                 


                                                              @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Male", Value = "Male" },
                                                                     new SelectListItem{ Text="Female", Value = "Female" },
                                                                     new SelectListItem{ Text="Non-binary", Value = "Non-binary" },
                                                                     new SelectListItem{ Text="Transgender", Value = "Transgender" },
                                                                     new SelectListItem{ Text="Intersex", Value = "Intersex" },
                                                           },

                                                                     new { @class = "form-control", @id = "Gender" })
                                                          </div>
                                                      </div>

                                                      <div class="col-xs-12 col-sm-4">
                                                          <div class="form-group">
                                                              <label>Marital Status:</label>

                                                              @*@Html.TextBoxFor(model => model.Marital_Status, new { @placeholder = "Enter Marital Status", @class = "form-control" })
                                                              @Html.ValidationMessageFor(model => model.Marital_Status, "", new { @class = "text-danger validation-msg" })*@
                                                              @Html.DropDownListFor(m => m.Marital_Status, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Single", Value = "Single" },
                                                                     new SelectListItem{ Text="Married", Value = "Married" },
                                                                     new SelectListItem{ Text="Divorced", Value = "Divorced" },
                                                                     new SelectListItem{ Text="Widowed", Value = "Widowed" },

                                                                     
                                                           },

                                                                     new { @class = "form-control", @id = "Marital_Status" })
                                                          </div>
                                                      </div>
                                                      <div class="col-xs-12 col-sm-4">
                                                          <div class="form-group">
                                                              <label>Language Known:</label>
                                                              @Html.TextBoxFor(model => model.LanguageSpoken, new { placeholder = "Enter Language Spoken", @class = "form-control form-control-custom" })
                                                          </div>
                                                      </div>
                                                  </div>


                                              

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Blood Group:</label>

                                                            @Html.DropDownListFor(m => m.BloodGroup, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="A-positive (A+)", Value = "A-positive (A+)" },
                                                                     new SelectListItem{ Text="A-negative (A-)", Value = "A-negative (A-)" },
                                                                     new SelectListItem{ Text="B-positive (B+)", Value = "B-positive (B+)" },
                                                                     new SelectListItem{ Text="B-negative (B-)", Value = "B-negative (B-)" },
                                                                     new SelectListItem{ Text="AB-positive (AB+)", Value = "AB-positive (AB+)" },
                                                                     new SelectListItem{ Text="AB-negative (AB-)", Value = "AB-negative (AB-)" },
                                                                     new SelectListItem{ Text="O-positive (O+)", Value = "O-positive (O+)" },
                                                                     new SelectListItem{ Text="O-negative (O-)", Value = "O-negative (O-)" },


                                                           },

                                                                     new { @class = "form-control", @id = "BG" })
                                                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger validation-msg" })

                                                            
                                                            
                                                          
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Shirt Size :</label>

@Html.DropDownListFor(m => m.ShirtSize, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="38 - XS", Value = "38 - XS" },
                                                                     new SelectListItem{ Text="39 - S", Value = "39 - S" },
                                                                     new SelectListItem{ Text="40 - M", Value = "40 - M" },
                                                                     new SelectListItem{ Text="41 - M", Value = "41 - M" },
                                                                     new SelectListItem{ Text="42 - L", Value = "42 - L" },
                                                                     new SelectListItem{ Text="43 - L", Value = "43 - L" },
                                                                     new SelectListItem{ Text="44 - XL", Value = "44 - XL" },
                                                                     new SelectListItem{ Text="45 - XL", Value = "45 - XL" },
                                                                     new SelectListItem{ Text="46 - XXL", Value = "46 - XXL" },
                                                                     new SelectListItem{ Text="47 - XXL", Value = "47 - XXL" },
                                                                     new SelectListItem{ Text="48 - XXXL", Value = "48 - XXXL" },
                                                                     


                                                           },
                                                           

                                                                     new { @class = "form-control", @id = "ShirtSize" })
                                                            @Html.ValidationMessageFor(model => model.ShirtSize, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Shoes Size:</label>

                                                            @Html.DropDownListFor(m => m.ShoesSize, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="5.5 - 23.5 CM", Value = "5.5 - 23.5 CM" },
                                                                     new SelectListItem{ Text="6 - 24.1 CM", Value = "6 - 24.1 CM" },
                                                                     new SelectListItem{ Text="6.5 - 24.4 CM", Value = "6.5 - 24.4 CM" },
                                                                     new SelectListItem{ Text="7 - 24.8 CM", Value = "7 - 24.8 CM" },
                                                                     new SelectListItem{ Text="7.5 - 25.4 CM", Value = "7.5 - 25.4 CM" },
                                                                     new SelectListItem{ Text="8 - 25.7 CM", Value = "8 - 25.7 CM" },
                                                                     new SelectListItem{ Text="8.5 - 26 CM", Value = "8.5 - 26 CM" },
                                                                     new SelectListItem{ Text="9 - 26.7 CM", Value = "9 - 26.7 CM" },
                                                                     new SelectListItem{ Text="9.5 - 27 CM", Value = "9.5 - 27 CM" },
                                                                     new SelectListItem{ Text="10 - 27.3 CM", Value = "10 - 27.3 CM" },
                                                                     new SelectListItem{ Text="10.5 - 27.9 CM", Value = "10.5 - 27.9 CM" },
                                                                     new SelectListItem{ Text="11 - 28.3 CM", Value = "11 - 28.3 CM" },
                                                                     new SelectListItem{ Text="11.5 - 28.6 CM", Value = "11.5 - 28.6 CM" },
                                                                     new SelectListItem{ Text="12.5 - 29.4 CM", Value = "12.5 - 29.4 CM" },
                                                                     new SelectListItem{ Text="13.5 - 30.2 CM", Value = "13.5 - 30.2 CM" },
                                                                     new SelectListItem{ Text="14.5 - 31 CM", Value = "14.5 - 31 CM" },
                                                                     new SelectListItem{ Text="15.5 - 31.8 CM", Value = "15.5 - 31.8 CM" },

                                                           },

                                                                     new { @class = "form-control", @id = "ShoesSize" })
                                                            @Html.ValidationMessageFor(model => model.ShoesSize, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>


                                                   



                                                </div>
                                                   
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Medical History:</label>

                                                            @Html.TextBoxFor(model => model.Medical_History, new { @placeholder = "Enter Medical History", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Medical_History, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Allergies:</label>

                                                            @Html.TextBoxFor(model => model.Allergies, new { @placeholder = "Enter Allergies (if any) ", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Allergies, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*<label>Total Year of Experience:</label>*@
                                                            <label>Previous Experience In Years E.g.(02:05)(YY:MM):</label>

                                                            @*<input type="text" class="form-control" placeholder="Phone Here">*@
                                                            @Html.TextBoxFor(model => model.TotalyearofExprience, new { @placeholder = "Enter Total Year of Experience ", @class = "form-control", @id = "TYE" })
                                                            @Html.ValidationMessageFor(model => model.TotalyearofExprience, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>TUVI Stamp No:</label>

                                                            @Html.TextBoxFor(model => model.TUVIStampNo, new { @placeholder = "Enter Stamp No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.TUVIStampNo, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Current Assignments:</label>
                                                            @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                            @Html.DropDownListFor(m => m.OPE, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Regional – Inspection at different vendor locations", Value = "Regional – Inspection at different vendor locations" },
                                                                     new SelectListItem{ Text="Site – Deputed on Man Month Basis at Client / vendor location", Value = "Site – Deputed on Man Month Basis at Client / vendor location" },
                                                                     new SelectListItem{ Text="Office – Working from office", Value = "Office – Working from office" },
                                                                     new SelectListItem{ Text="Regional & Office – Marketing and customer visits / Inspection at vendor location", Value = "Regional & Office – Marketing and customer visits / Inspection at vendor location" },
                                                                   
                                                                     





                                                           },

                                                                     new { @class = "form-control", @id = "CA" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            
                                                            <label>Site Details:</label>

                                                            @*<input type="text" class="form-control" placeholder="Phone Here">*@
                                                            @Html.TextBoxFor(model => model.SiteDetail, new { @placeholder = "Site Detail", @class = "form-control", @id = "TYE" })
                                                            @Html.ValidationMessageFor(model => model.TotalyearofExprience, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <label><u>Educational Qualification</u></label>
                                                    <div class="row">                                                        
                                                        <script>
                                                            $('.select2').select2();

                                                            $(function () {
                                                                $("#Uni").change(function () {
                                                                    GetUniversityName();
                                                                });
                                                            })

                                                            $(function () {
                                                                $("#ddlCourse").change(function () {
                                                                    alert(123);
                                                                    GetCourceName();
                                                                });
                                                            })

                                                            $(function () {
                                                                $("#ddlDegree").change(function () {
                                                                    
                                                                    GetBranchName(this.val());
                                                                });
                                                            })

                                                            $(document).ready(function () {
                                                                GetUniversityName();
                                                                GetCourceName();
                                                            })

                                                            function GetUniversityName() {
                                                                var UName = $('#Uni :selected').text();
                                                                if(UName=='Other')
                                                                {
                                                                    $('#OtherUni').show();
                                                                }
                                                                else
                                                                {
                                                                    $('#OtherUni').hide();
                                                                }
                                                            }

                                                            function GetBranchName(strDegree)
                                                            {
                                                                var UName = $('#Uni :selected').text();
                                                                if (UName == 'Other') {
                                                                    $('#OtherUni').show();
                                                                }
                                                                else {
                                                                    $('#OtherUni').hide();
                                                                }
                                                            }
                                                            function GetCourceName() {
                                                                
                                                                var CName = $('#ddlCourse :selected').text();

                                                                if (CName == 'S.S.C') {
                                                                    $('#ddlDegree').hide();
                                                                }
                                                                else if (CName == 'H.S.C') {
                                                                    $('#ddlDegree').hide();
                                                                }
                                                                else
                                                                {
                                                                    $('#ddlDegree').show();
                                                                }
                                                            }

                                                        </script>
                                                    </div>
                                         
                                                <div id="DomesticCurrency" style='align:center'>
                                                    <div class="form-page-title" style="width:110%;"> <label>Educational Qualification</label> </div>

                                                    <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%;font-family:Arial;font-size:14px;">
                                                        <tr style="background-color:lightgray;color:black">
                                                            <td width="120px" style="text-align: center">
                                                                Course
                                                            </td>
                                                            <td width="120px" style="text-align: center">
                                                                Degree
                                                            </td>
                                                            <td width="80px" style="text-align: center">
                                                                Major field of study
                                                            </td>
                                                            <td width="120px" style="text-align: center">
                                                                IndiUniversity
                                                            </td>

                                                            <td width="120px" style="text-align: center">
                                                                Last Year % / CGPA
                                                            </td>
                                                            <td width="120px" style="text-align: center">
                                                                Aggregate % / CGPA
                                                            </td>
                                                            <td></td>
                                                           
                                                        </tr>

                                                        @{
                                                            int v = 0;
                                                        }

                                                        @if (ViewBag.lstDOrderType != null)
                                                        {
                                                            if (ViewBag.lstDOrderType.Count != 0)
                                                            {
                                                                foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.Users>)
                                                                {
                                                                    v = v + 1;
                                                                    <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                        <td>

                                                                        @Html.DropDownListFor(m => m.lstEducationQualification[j].Course, new List<SelectListItem>
                                                                     {
                                                                     new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="S.S.C", Value = "S.S.C" , Selected = (item.Course == "S.S.C") ?true : false} ,
                                                                     new SelectListItem{ Text="H.S.C", Value = "H.S.C" , Selected = (item.Course == "H.S.C") ?true : false} ,
                                                                     new SelectListItem{ Text="Diploma", Value = "Diploma" , Selected = (item.Course == "Diploma") ?true : false} ,
                                                                     new SelectListItem{ Text="Graduate", Value = "Graduate" , Selected = (item.Course == "Graduate") ?true : false} ,
                                                                     new SelectListItem{ Text="PGD", Value = "PGD" , Selected = (item.Course == "PGD") ?true : false} ,
                                                                     new SelectListItem{ Text="PG", Value = "PG" , Selected = (item.Course == "PG") ?true : false} ,


                                                           },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse", @Value = item.Course })
                                                                        </td>

                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Bachelor of Engg./Tech", Value = "Bachelor of Engg./Tech" , Selected = (item.Degree == "Bachelor of Engg./Tech") ?true : false} ,
                                                                     new SelectListItem{ Text="AMIE", Value = "AMIE" , Selected = (item.Degree == "AMIE") ?true : false} ,
                                                                     new SelectListItem{ Text="Bachelor of Arts", Selected = (item.Degree == "Bachelor of Arts") ?true : false} ,
                                                                     new SelectListItem{ Text="Bachelor of Science",Selected = (item.Degree == "Bachelor of Science") ?true : false} ,
                                                                     new SelectListItem{ Text="Bachelor of Commerce",Selected = (item.Degree == "Bachelor of Commerce") ?true : false} ,
                                                                     new SelectListItem{ Text="BBA", Value = "BBA" ,Selected = (item.Degree == "BBA") ?true : false} ,
                                                                     new SelectListItem{ Text="BMS", Value = "BMS" ,Selected = (item.Degree == "BMS") ?true : false} ,
                                                                     new SelectListItem{ Text="BBS", Value = "BBS" ,Selected = (item.Degree == "BBS") ?true : false} ,


                                                           },
                                                             new { @class = "form-control CDegree", @id = "ddlDegree", @Value = item.Degree })
                                                                    </td>
                                                                       <td>
                                                                           @Html.TextBoxFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CMajorFieldOfStudy", @Value = item.MajorFieldOfStudy })
                                                                           @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstEducationQualification[j].University, new { @placeholder = "University", @class = "form-control CUniversity", @Value = item.UniversityName })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].University, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstEducationQualification[j].LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA" , @Value = item.LastYearCGPA })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstEducationQualification[j].AggregateCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CAggregateCGPA", @Value = item.AggregateCGPA })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @if (v == 1)
                                                                            {
                                                                                <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }


                                                                        </td>



                                                                    </tr>

                                                                    j++;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                    <td>

                                                                        @Html.DropDownListFor(m => m.Course, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="S.S.C", Value = "S.S.C" },
                                                                     new SelectListItem{ Text="H.S.C", Value = "H.S.C" },
                                                                     new SelectListItem{ Text="Diploma", Value = "Diploma" },
                                                                     new SelectListItem{ Text="Graduate", Value = "Graduate" },
                                                                     new SelectListItem{ Text="PGD", Value = "PGD" },
                                                                     new SelectListItem{ Text="PG", Value = "PG" },


                                                           },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                        {
                                                                            new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                            new SelectListItem{ Text="Bachelor of Engg./Tech", Value = "Bachelor of Engg./Tech" },
                                                                            new SelectListItem{ Text="AMIE", Value = "AMIE" },
                                                                            new SelectListItem{ Text="Bachelor of Arts", Value = "Bachelor of Arts" },
                                                                            new SelectListItem{ Text="Bachelor of Science", Value = "Bachelor of Science" },
                                                                            new SelectListItem{ Text="Bachelor of Commerce", Value = "Bachelor of Commerce" },
                                                                            new SelectListItem{ Text="BBA", Value = "BBA" },
                                                                            new SelectListItem{ Text="BMS", Value = "BMS" },
                                                                            new SelectListItem{ Text="BBS", Value = "BBS" },

                                                                        },
                                                                        new { @class = "form-control CDegree", @id = "ddlDegree" })

                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CMajorFieldOfStudy" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.University, new { @placeholder = "University", @class = "form-control CUniversity" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].University, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.AggregateCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CAggregateCGPA" })
                                                                        @Html.ValidationMessageFor(model => model.AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @if (v == 1)
                                                                        {
                                                                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                        }
                                                                        else
                                                                        {
                                                                            <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                        }


                                                                    </td>



                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                <td>

                                                                    @Html.DropDownListFor(m => m.Course, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="S.S.C", Value = "S.S.C" },
                                                                     new SelectListItem{ Text="H.S.C", Value = "H.S.C" },
                                                                     new SelectListItem{ Text="Diploma", Value = "Diploma" },
                                                                     new SelectListItem{ Text="Graduate", Value = "Graduate" },
                                                                     new SelectListItem{ Text="PGD", Value = "PGD" },
                                                                     new SelectListItem{ Text="PG", Value = "PG" },


                                                           },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse" })
                                                                </td>
                                                                <td>
                                                                    @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Bachelor of Engg./Tech", Value = "Bachelor of Engg./Tech" },
                                                                     new SelectListItem{ Text="AMIE", Value = "AMIE" },
                                                                     new SelectListItem{ Text="Bachelor of Arts", Value = "Bachelor of Arts" },
                                                                     new SelectListItem{ Text="Bachelor of Science", Value = "Bachelor of Science" },
                                                                     new SelectListItem{ Text="Bachelor of Commerce", Value = "Bachelor of Commerce" },
                                                                     new SelectListItem{ Text="BBA", Value = "BBA" },
                                                                     new SelectListItem{ Text="BMS", Value = "BMS" },
                                                                     new SelectListItem{ Text="BBS", Value = "BBS" },


                                                           },
                                                             new { @class = "form-control CDegree", @id = "ddlDegree" })
                                                                </td>

                                                                <td>
                                                                    @Html.TextBoxFor(model => model.MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CMajorFieldOfStudy" })
                                                                    @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                </td>

                                                                <td>
                                                                    @Html.TextBoxFor(model => model.University, new { @placeholder = "University", @class = "form-control CUniversity" })
                                                                    @Html.ValidationMessageFor(model => model.lstEducationQualification[j].University, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA" })
                                                                    @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.AggregateCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CAggregateCGPA" })
                                                                    @Html.ValidationMessageFor(model => model.lstEducationQualification[j].AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @*@if (v == 1)
                                                                    {*@
                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                    @*}
                                                                    else
                                                                    {
                                                                        <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                    }*@


                                                                </td>



                                                            </tr>
                                                        }

                                                    </table><br />
                                                </div>
                                                @*</div>*@
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                              
                                                
                                               

                                                  



                                                   

                                                    @*<div class="row">

                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Fax No:</label>

                                                                @Html.TextBoxFor(model => model.Fax_No, new { @placeholder = "Enter Fax No", @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Fax_No, "", new { @class = "text-danger validation-msg" })
                                                            </div>
                                                        </div>

                                                    </div>

                                                    <div class="row">
                                                        
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Transfer Date:</label>
                                                                @Html.TextBoxFor(model => model.TransferDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date Of Transfer", @class = "form-control form-control-custom dateofjoinings", autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.TransferDate, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        
                                                    </div>*@

                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <div class="col-xs-4">
                                                            <label>Type of Document</label>
                                                            @if (ViewBag.DocTypeList != null)
                {
                                                                @Html.DropDownListFor(m => m.DocType, ViewBag.DocTypeList as IEnumerable<SelectListItem>, "--Select Attachment Type--", new { @class = "form-control form-control-custom", @id = "DOCType", })
                                                                @Html.ValidationMessageFor(model => model.DocType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                        <div class="form-group" style="margin-top:20px">
                                                            <input type="file" class="filepond" name="DocUpload" id="DocUpload" multiple />
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnAddDoc" title="Submit"><i class="fa fa-plus-circle"></i>Add Document</button>
                                                </div>

                                                <div id="divDocuments">
                                                    @if (Model.UserAttachment != null)
                                                    {
                                                        <br />
                                                        <table width="100%" align="left">
                                                            <tr>
                                                                <td>
                                                                    <h2 class="dynamic-page-title dynamic-page-title-2"><i class="fa fa-address-book"></i>List of Documents</h2>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td align="left">
                                                                    <table class="display dataTable no-footer" style="width:100%" id="DocumentTable">
                                                                        <tr style="background-color:lightgray">
                                                                            <td>Document Type</td>
                                                                            <td>File Name</td>
                                                                            <td>&nbsp;</td>
                                                                        </tr>
                                                                        @foreach (var item in ViewData["DocAttachments"] as IEnumerable<TuvVision.Models.Users>)
                                                                        {
                                                                            string[] arrFile = item.FileName.Split(',');
                                                                            string[] arrValue = null;
                                                                            <tr style="background-color:#f0f0f0">
                                                                                <td width="35%">@item.AttType</td>
                                                                                <td>
                                                                                    @for (int cnt = 0; cnt < arrFile.Length; cnt++)
                                                                                    {

                                                                                        arrValue = arrFile[cnt].ToString().Split('#');

                                                                                        strFileName = arrValue[0].ToString();
                                                                                        strPKId = arrValue[1].ToString();
                                                                                        <a class="title" href="@Url.Action("DownloadFormat", "Users", new {  @d= strPKId})">@strFileName</a>



                                                                                    }
                                                                                </td>
                                                                                <td width="8%">
                                                                                    <a href="javascript:void(0);" data-id="@strPKId" class="deleteItemFormat">X</a>
                                                                                </td>

                                                                            </tr>
                                                                        }

                                                                    </table>
                                                                </td>
                                                            </tr>
                                                        </table>

                                                    }
                                                </div>

                                                 

                                                   

                                                
                                                    


                                                    @Html.HiddenFor(m => m.Signature)
                                                    @Html.HiddenFor(m => m.FilePath)
                                                    <!--Button Controls-->
                                                    <div class="col-xs-12 text-center">
                                                        <div class="form-group">
                                                            <button type="button" class="btn btn-default news-btn" id="btnReset" value="Reset" title="Reset">Reset</button>
                                                            @if (Model != null)
                                                            {
                                                                if (Model.PK_UserID != "")
                                                                {
                                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Save @*Update User*@</button>
                                                                }
                                                                else
                                                                {
                                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Insert User</button>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Insert User</button>
                                                            }
                                                        </div>
                                                    </div>
                                                    <!--Button Controls-->
</form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.col -->

                    </div><!-- /.row -->
                </div><!-- /.data table col -->

            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
        <!--End of main content 3-->
 }
@********************************************************************************Script Started Here************************************************@
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />

<script>
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#Auditee').multiselect({
            includeSelectAllOption: true
        });

    });

    $(function () {
        $('#BrAuditee').multiselect({
            includeSelectAllOption: true
        });

    });

</script>

<script>
    $("#FileUpload").change(function () {
        debugger;
        var Pk_Id = null;
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('FileUpload');
        //Iterating through each files selected in fileInput
        for (i = 0; i < fileInput.files.length; i++) {
            //Appending each file to FormData object
            formdata.append(fileInput.files[i].name, fileInput.files[i]);
        }
        var fileExtension = ['jpeg', 'jpg', 'gif', 'png'];
        if ($.inArray($("#FileUpload").val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only formats are allowed : " + fileExtension.join(', '));
        }

        //Creating an XMLHttpRequest and sending
        var xhr = new XMLHttpRequest();
        var link = '@Url.Action("TemporaryFilePathUserSignature", "Users")';
        xhr.open('POST', link, 'true');
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                debugger;
                var data = xhr.responseText;
                data = data.replace(/"/g, "");
                $("#FilePath").val(data);
            }
        }
    })

</script>

<script>
    $("#UserName").change(function () {
        debugger;
        var ExistsUserName = $("#UserName").val();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CheckingUserNameExist", "Users")",
            data: { ExistingUserName: ExistsUserName },
            dataType: "json",
            cache: false,
            success: function (response) {
                if (response == "Success") {
                    alert("User Already Exists in System !! Please try another User Name!!!");
                    $("#UserName").val('');
                    //$("#UserName").focus();
                }
                //else
                //{
                //    alert("User is Available!!");
                //}
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        Reset()  
        
        $("#btnUserSave").on('click', function (event) {
        //$("#btnUserSave").click(function myfunction() {
            debugger;

         

            if (ValidateForm() == false) {
                return false;
            }
            else {

                var DArray = [];
                $('.trEduQualification').each(function () {
                    var trD = {};


                    var Course = $(this).find('.CCourse').val();

                    trD['Course'] = Course;
                    DArray.push(trD);
                });


              

                var UserDetails =
               {
                   PK_UserID: $("#PK_UserID").val(),
                   FirstName: $("#FirstName").val(),
                   MiddleName: $("#MiddleName").val(),
                   LastName: $("#LastName").val(),
                   UserName: $("#UserName").val(),
                   DOB: $("#DOB").val(),
                   PanNo: $("#PanNo").val(),
                   AadharNo: $("#AadharNo").val(),
                   TUVUIN: $("#TUVUIN").val(),
                   DateOfJoining: $("#DateOfJoining").val(),
                   BrAuditee: $("#BrAuditee option:selected").val(),
                   CostCenter: $("#Pk_CC_Id option:selected").val(),
                   EmployementCategory: $("#EC option:selected").val(),
                   EmployeeGradeId: $("#EGI option:selected").val(),
                   EmployeeCode: $("#EmployeeCode").val(),
                   SAPEmployeeCode: $("#SAPEmployeeCode").val(),
                   SAP_VendorCode: $("#SAP_VendorCode").val(),
                   ReportingOne: $("#R1 option:selected").val(),
                   ReportingTwo: $("#R2 option:selected").val(),
                   OPE: $("#OPE option:selected").val(),
                   Designation: $("#Designation").val(),
                   TuvEmailId: $("#TuvEmailId").val(),
                   ReasonForUpdate: $("#RFU option:selected").val(),
                   EmployeeGradeIdOld: $("#EGO option:selected").val(),
                   UserRole: $("#ddlUserName option:selected").val(),
                   Auditee: $("#Auditee option:selected").val(),

                   Auditee: $(".with-gap option:selected").val(),

                   IsLocked: $("#IsLocked").val(),
                   EmailID: $("#EmailID").val(),
                   MobileNo: $("#MobileNo").val(),
                   EmergencyMobile_No: $("#EmergencyMobile_No").val(),
                   ResidenceNo: $("#ResidenceNo").val(),
                   OfficeNo: $("#OfficeNo").val(),
                   Address1: $("#Address1").val(),
                   Address2: $("#Address2").val(),
                   ZipCode: $("#ZipCode").val(),
                   PermanantPin: $("#PermanantPin").val(),
                   Gender: $("#Gender").val(),
                   Marital_Status: $("#Marital_Status").val(),
                   LanguageSpoken: $("#LanguageSpoken").val(),
                   Medical_History: $("#Medical_History").val(),
                   Allergies: $("#Allergies").val(),
                   BloodGroup: $("#BG option:selected").val(),
                   ShirtSize: $("#ShirtSize").val(),
                   ShoesSize: $("#ShoesSize").val(),
                   TotalyearofExprience: $("#TotalyearofExprience").val(),
                   TUVIStampNo: $("#TUVIStampNo").val(),

                   
               }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateUser", "Users")',
                    dataType: 'json',
                    Async: false,
                    data: JSON.stringify({ QM: UserDetails, 'DArray': DArray }),
                    enctype: "multipart/form-data",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                       
                        if (response.result == 'Redirect') {
                            alert("User details has been save successfully!!!")
                            window.location = response.url;
                        }
                    
                    }
                });




                //$("#form1").submit()
            }
        });
    });
    function Reset() {
        $("#btnReset").click(function myfunction() {

            location.reload();
        });
    }

    function ValidateForm() {

        // alert(1);


    
        @*@ViewBag.Id = DArray;*@


        var brAuditee = document.getElementById("BrAuditee");


        if (brAuditee.selectedIndex == -1) {
            alert("Please select Branch!!!");
            $("#BrAuditee").focus()
            return false;
        }

        if ($("#ddlUserName")[0].selectedIndex == 0) {
            alert("Please select User Role!!!");
            $("#UserRole").focus()
            return false;
        }

      
        //if ($("#UploadedFile").val() == "" || $("#UploadedFile").val() == null) {
        //    alert("Please enter Product ImageURL!!!");
        //    $("#UploadedFile").focus()
        //    return false;
        //}
        else
        {
            return true;
        }
    }
</script>



<script>
    $("#btnUserSave1").on('click', function (event) {

        debugger;
        var a = "1";
        //var varGender = $('input[with-gap]:checked').val()
        var varGender = $("input[name='Gender']:checked").val();
        var varIsActive = $("input[name='IsActive']:checked").val();
        var brAuditee = document.getElementById("BrAuditee");


        if (brAuditee.selectedIndex == -1) {
            alert("Please select Branch!!!");
            $("#BrAuditee").focus()
            return false;
        }

        if ($("#ddlUserName")[0].selectedIndex == 0) {
            alert("Please select User Role!!!");
            $("#UserRole").focus()
            return false;
        }

        var DArray = [];
        $('.trEduQualification').each(function () {
            var trD = {};


            var Course = $(this).find('.CCourse').val();
            var Degree = $(this).find('.CDegree').val();
            var MajorFieldOfStudy = $(this).find('.CMajorFieldOfStudy').val();
            var University = $(this).find('.CUniversity').val();
            var LastYearCGPA = $(this).find('.CLastYearCGPA').val();
            var AggregateCGPA = $(this).find('.CAggregateCGPA').val();
           

            trD['Course'] = Course;
            trD['Degree'] = Degree;
            trD['MajorFieldOfStudy'] = MajorFieldOfStudy;
            trD['University'] = University;
            trD['LastYearCGPA'] = LastYearCGPA;
            trD['AggregateCGPA'] = AggregateCGPA;


            if (Course == 'Diploma' || Course == 'Graduate')
            {
                a = "2";
            }



            DArray.push(trD);
        });

       
        var selected = $("#BrAuditee option:selected");
        var ddlCountryValue = "";
        selected.each(function () {
            ddlCountryValue += $(this).val() + ",";
        });
        ddlCountryValue = ddlCountryValue.replace(/,\s*$/, "");

        var PortfolioAccesselected = $("#Auditee option:selected");
        var ddlPortfolioAccesselected = "";
        PortfolioAccesselected.each(function () {
            ddlPortfolioAccesselected += $(this).val() + ",";
        });
        ddlPortfolioAccesselected = ddlPortfolioAccesselected.replace(/,\s*$/, "");

        if (a = "1")
        {
            alert("Select")
            return false;
        }
        

        var UserDetails =
                {
                    PK_UserID: $("#PK_UserID").val(),
                    FirstName: $("#FirstName").val(),
                    MiddleName: $("#MiddleName").val(),
                    LastName: $("#LastName").val(),
                    UserName: $("#UserName").val(),
                    DOB: $("#DOB").val(),
                    PanNo: $("#PanNo").val(),
                    AadharNo: $("#AadharNo").val(),
                    TUVUIN: $("#TUVUIN").val(),
                    DateOfJoining: $("#DateOfJoining").val(),
                    Branch: ddlCountryValue,
                    CostCenter: $("#Pk_CC_Id option:selected").val(),
                    EmployementCategory: $("#EC option:selected").val(),
                    EmployeeGradeId: $("#EGI option:selected").val(),
                    EmployeeCode: $("#EmployeeCode").val(),
                    SAPEmployeeCode: $("#SAPEmployeeCode").val(),
                    SAP_VendorCode: $("#SAP_VendorCode").val(),
                    ReportingOne: $("#R1 option:selected").val(),
                    ReportingTwo: $("#R2 option:selected").val(),
                    OPE: $("#OPE option:selected").val(),
                    Designation: $("#Designation").val(),
                    TuvEmailId: $("#TuvEmailId").val(),
                    ReasonForUpdate: $("#RFU option:selected").val(),
                    EmployeeGradeIdOld: $("#EGO option:selected").val(),
                    UserRole: $("#ddlUserName option:selected").val(),
                    Employee_Type :ddlPortfolioAccesselected,
                    //Auditee: $("#Auditee option:selected").val(),
                    IsActive:varIsActive,
                    IsLocked: $("#chkLocked").val(),
                    EmailID: $("#EmailID").val(),
                    MobileNo: $("#MobileNo").val(),
                    EmergencyMobile_No: $("#EmergencyMobile_No").val(),
                    ResidenceNo: $("#ResidenceNo").val(),
                    OfficeNo: $("#OfficeNo").val(),
                    Address1: $("#Address1").val(),
                    Address2: $("#Address2").val(),
                    ZipCode: $("#ZipCode").val(),
                    PermanantPin: $("#PermanantPin").val(),
                    Gender: varGender,
                    Marital_Status: $("#Marital_Status").val(),
                    LanguageSpoken: $("#LanguageSpoken").val(),
                    Medical_History: $("#Medical_History").val(),
                    Allergies: $("#Allergies").val(),
                    BloodGroup: $("#BG option:selected").val(),
                    ShirtSize: $("#ShirtSize").val(),
                    ShoesSize: $("#ShoesSize").val(),
                    TotalyearofExprience: $("#TotalyearofExprience").val(),
                    TUVIStampNo: $("#TUVIStampNo").val(),
                    CurrentAssignment: $("#CurrentAssignment option:selected").val(),
                    SiteDetail: $("#SiteDetail").val(),
                }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateUser", "Users")',
            dataType: 'json',
            Async: false,
            data: JSON.stringify({ URS: UserDetails, 'DArray': DArray }),
            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                if (response.result == 'Redirect') {
                    alert("User Details has been Save successfully!!!")
                    window.location = response.url;
                }

            }
        })



    });

</script>





<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>


<script>
    FilePond.setOptions({
        server: '@Url.Action("TemporaryFilePathDocumentAttachment", "Users")'
    });
</script>


<style>
    .addCSS {
        pointer-events: none;
    }
</style>

<script>
    $(document).ready(function () {
        debugger;
        var PKID = $("#PKId").val();
        if(PKID=='36')
        {

            // $('#UserHide').show();
            var DL = document.getElementById("UserHide");
            DL.className += "";
        }
        else
        {
            var DL = document.getElementById("UserHide");
            DL.className += "addCSS";

            //$('#UserHide').hide();
        }
    })

    $(function () {
        $("#btnAddDoc").click(function () {
            var docType = $("#DOCType").val();
            var UserID = $("#PK_UserID").val();


            $.ajax({
                type: 'POST',
                url: '@Url.Action("InsertDocument", "Users")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ "DocType": docType, "UserID": UserID }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {


                    if (response == "TYPEERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }
                        if (docType == "1" || docType == "2") {
                            alert("File formats should be JPG, JPEG, PNG");
                            return false;
                        }
                        else if (docType == "3") {
                            alert("CV File formats should be doc , docx");
                            return false;
                        }
                        else {
                            alert("File formats should be JPG, JPEG, PNG,PDF");
                            return false;
                        }

                    }
                    if (response == "ERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }
                        alert("There is some error while uploading the file");
                        return false;
                    }
                    if (response == "SUCCESS") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }
                        alert("File Uploaded Successfully");

                    }

                    $("#divDocuments").load(location.href + " #divDocuments");
                }

            });

        });
    });
</script>

<script>
    $(document).ready(function () {
        $('.deleteItemFormat').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFileFormat")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>
<script type="text/javascript">

    var DTRowCount = 1;

    $(document).ready(function () {

        $(document).on("click", ".classAdd", function () { //
            debugger;

            if ($('#DTestTable tr').length - 1 >= DTRowCount) {
                var count = $('#DTestTable tr').length - 1;
                DTRowCount = count;
            }
            //if (count < 3) {
            DTRowCount += 1;
            var contactdiv = '<tr class="trEduQualification" style="background-color:#f0f0f0">' +
          '<td>' +


      ' <select name="Course"  class="form-control CCourse" id="ddlCourse' + DTRowCount + '"  onchange="DDropdownChange()"> <option value="">Select</option> <option value="S.S.C">S.S.C</option> <option value="H.S.C">H.S.C</option> <option value="Diploma">Diploma</option><option value="Graduate">Graduate</option> <option value="PGD">PGD</option>option value="PG">PG</option></select>  </td>' +


          '<td><select name="Degree"  class="form-control CDegree" id="ddlDegree' + DTRowCount + '"  onchange="DDropdownChange()"> <option value="">Select</option> <option value="Bachelor of Engg./Tech">Bachelor of Engg./Tech</option> <option value="AMIE">AMIE</option> <option value="Bachelor of Arts">Bachelor of Arts</option><option value="Bachelor of Science">Bachelor of Science</option> <option value="Bachelor of Commerce">Bachelor of Commerce</option><option value="BBA">BBA</option><option value="BMS">BMS</option><option value="BBS">BBS</option></select>  </td>' +
          '<td><input name="MajorFieldOfStudy"  class="form-control CMajorFieldOfStudy" onkeyup="ccc()" id="IMajorFieldOfStudy' + DTRowCount + '"/></td>' +
          '<td><input name="University"  class="form-control CUniversity" id="IUniversity' + DTRowCount + '"/></td>' +
          '<td><input name="LastYearCGPA"  class="form-control CLastYearCGPA" id="ILastYearCGPA' + DTRowCount + '"/></td>' +


          '<td><input type="number" name="AggregateCGPA"  class="form-control CAggregateCGPA" onkeyup="c()" Id="ICAggregateCGPA' + DTRowCount + '" /></td>' +
          '<td><button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
          '</tr>';
            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class


        });
    });
</script>

<script>
    $(document).on("click", ".deleteContact", function () {
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        DTRowCount = DTRowCount - 1;
        
    });
</script>


<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTable");
    }
</script>

<script>
    $(function () {
        $('.CPIN').keypress(function (evt) {
            var maxLength = 6; // as it threat maxlength-5 custom class :)

            // assuming that data-mask will certify that only currency format will be valid
            var pureValue = $(this).val().replace('.', '').replace(',', '');

            if (pureValue.length >= maxLength)
                evt.preventDefault();
        })
    });
</script>