@model TuvVision.Models.AppealMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "AppealDashBoard";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

@*calender control*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>


<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>




@*<h2>AppealDashBoard</h2>*@
@using (Html.BeginForm("AppealDashBoard", "MisAppeal", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Appeal Register Management</h3>
                    <a href="@Url.Action("CreateAppeal", "MisAppeal")" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" style="margin-left: 16px"><i class="fa fa-plus-circle"></i> Add New Appeal</a>
                    <button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","MisAppeal")'">
                        Export To Excel
                    </button>

                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->

            <div class="row">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label>From Date:(Appeal Date)</label>
                        @*@Html.TextBoxFor(model => model.FromDate, new { placeholder = "Select From Date", @class = "form-control form-control-custom CompanyName Abc", @Autocomplete = "off" })*@
                        @Html.TextBoxFor(model => model.FromDate, "{0:yyyy-MM-dd}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromDate", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-4">
                    <div class="form-group">
                        <label>To Date:(Appeal Date)</label>
                        @*@Html.TextBoxFor(model => model.FromDate, new { placeholder = "Select From Date", @class = "form-control form-control-custom CompanyName Abc", @Autocomplete = "off" })*@
                        @Html.TextBoxFor(model => model.ToDate, "{0:yyyy-MM-dd}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToDate", autocomplete = "off" })
                    </div>

                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Search:</label>
                        @*@Html.TextBoxFor(model => model.FromDate, new { placeholder = "Select From Date", @class = "form-control form-control-custom CompanyName Abc", @Autocomplete = "off" })*@
                        <input type="submit" value="Search" class="btn btn-primary form-control" />

                    </div>

                </div>
                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Reset:</label>

                        @Html.ActionLink("Reset", "AppealDashBoard", "MisAppeal", new { @class = "btn btn-primary form-control" })
                    </div>

                </div>
            </div>

            <div class="col-xs-12">
                @*<table id="example" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th class="remove-search less-width">Action</th>
                                <th>Appeal ID</th>
                                <th>Created By</th>
                                <th>Created Date</th>
                                <th>Mode Of Appeal</th>
                                <th>Modified Date</th>
                                <th>Appeal Date</th>
                                <th>Status</th>
                                <th>Branch</th>
                                <th>Attachment</th>

                                <th>Appeal Reference Number</th>
                                <th>Appellant(Client/Vendor)</th>
                                <th>Details of Appeal</th>
                                <th>TUVI Control Number</th>
                                <th>Review And Analysis</th>
                                <th>Disposal Action</th>
                                <th>Disposal By</th>
                                <th>Date of Disposal</th>
                                <th>Remarks</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{

                            }
                            @foreach (var item in ViewData["AppealList"] as IEnumerable<TuvVision.Models.AppealMaster>)
                            {
                                <tr>
                                    <td style="width:125px;">
                                        <a href="@Url.Action("CreateAppeal", "Appeal", new {@appeal_ID = item.Appeal_ID })" title="Edit"><span class="fa fa-pencil"></span>&nbsp;</a>
                                        <a href="@Url.Action("Delete", "Appeal", new { @id = item.Appeal_ID })" class="btn btn-danger btn-custom" onclick="return confirm('Are you sure you want to Delete this Record?')"><span class="fa fa-trash-o"></span>&nbsp;</a>
                                        @{
                                            if ((Convert.ToString(TempData["result"])) != "" && Convert.ToString(TempData["Result"]) != null)
                                            {
                                                TempData["Result"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Appeal has been Deleted Successfully!!!!");
                                                </script>
                                            }
                                        }
                                        @{
                                            if ((Convert.ToString(TempData["insertAppeal"])) != "" && Convert.ToString(TempData["insertAppeal"]) != null)
                                            {
                                                TempData["insertAppeal"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Appeal Added Successfully!!!!");
                                                </script>
                                            }
                                            if ((Convert.ToString(TempData["UpdateAppeal"])) != "" && Convert.ToString(TempData["UpdateAppeal"]) != null)
                                            {
                                                TempData["UpdateAppeal"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Appeal Updated Successfully");
                                                </script>
                                            }


                                        }
                                    </td>

                                    <td>@item.Appeal_ID</td>
                                    <td>@item.Created_by</td>
                                    <td>@item.Created_Date</td>
                                    <td>@item.Mode_Of_Appeal</td>
                                    <td>@item.Modified_Date</td>
                                    <td>@item.Date_of_Appeal</td>
                                    <td>@item.Status</td>
                                    <td>@item.Branch</td>
                                    <td>@item.Attachment</td>

                                    <td>@item.Appeal_Referance_No</td>
                                    <td>@item.Appellant</td>
                                    <td>@item.Details_Of_Appeal</td>
                                    <td>@item.TUV_Control_No</td>
                                    <td>@item.Review_And_Analysis</td>
                                    <td>@item.Disposal_Action</td>
                                    <td>@item.Disposal_By</td>
                                    <td>@item.Date_Of_Disposal</td>
                                    <td>@item.Remarks</td>

                                </tr>
                                            }
                        </tbody>
                    </table>*@

            </div><!-- /.data table col -->

            <div class="col-xs-12">
                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lstAppeal1)
                            .Build(columns =>
                            {
                                //< a href = "@Url.Action("CreateAppeal", "Appeal", new {@appeal_ID = item.Appeal_ID })" title = "Edit" >< span class="fa fa-pencil"></span>&nbsp;</a>
                                //           <a href = "@Url.Action("Delete", "Appeal", new { @id = item.Appeal_ID })" class="btn btn-danger btn-custom" onclick="return confirm('Are you sure you want to Delete this Record?')"><span class="fa fa-trash-o"></span>&nbsp;</a>


                                columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateAppeal", new { appeal_ID = o.Appeal_ID }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { id = o.Appeal_ID }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));

                                columns.Add(c => c.Appeal_ID).Titled("Appeal ID");
                                columns.Add(c => c.Date_of_Appeal).Titled("Appeal Date");
                                columns.Add(c => c.Appeal_Referance_No).Titled("Appeal Reference Number");
                                columns.Add(c => c.Appellant).Titled("Appellant(Customer/Vendor)");
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.Mode_Of_Appeal).Titled("Mode Of Appeal");
                                columns.Add(c => c.TUV_Control_No).Titled("TUVI Job Number");
                                columns.Add(c => c.Details_Of_Appeal).Titled("Details of Appeal");
                                columns.Add(c => c.Review_And_Analysis).Titled("Review And Analysis");
                                columns.Add(c => c.Disposal_Action).Titled("Disposal Action");
                                columns.Add(c => c.Disposal_By).Titled("Disposal By");
                                columns.Add(c => c.Date_Of_Disposal).Titled("Date of Disposal");
                                columns.Add(c => c.Attachment).Titled("Attachment");
                                columns.Add(c => c.Status).Titled("Status");
                                columns.Add(c => c.Remarks).Titled("Remarks");
                                columns.Add(c => c.Created_by).Titled("Created By");
                                columns.Add(c => c.Created_Date).Titled("Created Date");
                                columns.Add(c => c.Modified_Date).Titled("Modified Date");
                                columns.Add(c => c.Modified_By).Titled("Modified By");


                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                            )


                        </td>
                    </tr>
                </table>

            </div>

        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
}




@*Date Picker for From Date*@

<script>
    $(function () {
        $(".FromDate").datepicker({
            //dateFormat: 'yy-mm-dd',//check change
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToDate").datepicker({
            //dateFormat: 'yy-mm-dd',//check change
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>



