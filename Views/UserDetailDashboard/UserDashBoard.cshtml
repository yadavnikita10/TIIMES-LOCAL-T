@model TuvVision.Models.ProfileUser
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;

@helper CustomRenderingOfColumn(TuvVision.Models.ProfileUser ProfileUser)
{
if (ProfileUser.Verified.ToString().ToUpper() == "NO")
{
        <span style='color:red; font-weight:bold;'>@ProfileUser.Verified.ToString().ToUpper()</span>
}
else
{
        <span style='color: black; font-weight:bold;'>@ProfileUser.Verified.ToString().ToUpper()</span>
}
}

@helper CustomRenderingOfColumn2(TuvVision.Models.ProfileUser ProfileUser)
{
if (ProfileUser.ActiveStatus.ToString().ToUpper() == "ACTIVE")
{
        <span style='color:black; font-weight:bold;'>@ProfileUser.ActiveStatus.ToString().ToUpper()</span>
}
else
{
        <span style='color:red ; font-weight:bold;'>@ProfileUser.ActiveStatus.ToString().ToUpper()</span>
}
}

@helper CustomRenderingOfColumn1(TuvVision.Models.ProfileUser ProfileUser)
{
    <img src="~/Content/Sign/@ProfileUser.Image" />
}

@helper CustomRenderingOfColumnEduAtta(TuvVision.Models.ProfileUser ProfileUser)
{


if (ProfileUser.EduQualAtta != "")
{
    foreach (var d in ProfileUser.EduQualAtta.Split(','))
    {

            @*<li>*@

        //var aa =
        <a class="title" href="@Url.Action("DownloadFormat1", "Users", new {  @d= d })">
            <img src="@Url.Content("~/View1.png")" />
        </a>
                            @*</li>*@
    }

}
else
{

}

}

@helper CustomRenderingOfColumnProAtta(TuvVision.Models.ProfileUser ProfileUser)
{
if (ProfileUser.ProfQualAtta != "")
{
    foreach (var dd in ProfileUser.ProfQualAtta.Split(','))
    {

            @*<li>*@
            <a class="title" href="@Url.Action("DownloadFormat", "Users", new {  @d= dd })">
                <img src="@Url.Content("~/View1.png")" />
            </a>
                            @*</li>*@
    }


}
else
{

}

}



@{
    ViewBag.Title = "UserDashBoard";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

@*Ashwini Scripts here for datatable starts here
        <script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

        <!--export to excel-->
        <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
    <script src="~/AllJsAndCss/js/datatable-custom2.js"></script>*@
@*Ashwini Scripts here for datatable ends here*@
@*<script>
        $(document).ready(function () {
            $("#UserDetails").DataTable();
        });
    </script>*@
@using (Html.BeginForm())
{
    <!--Start of header-->
    <!--Start of main content 3-->
    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">User Details</h3>
                    @if (Session["RoleID"].ToString() == "36")
                    {
                        @*<a href="@Url.Action("CreateUser", "Users",new { @UserID = "Superadmin" })" style="margin-left: 10px" class="btn btn-info dynamic-function-btn dynamic-function-btn-2">Add New User</a>*@
                    }
                    <button type="button" id="a" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","UserDetailDashboard")'">
                        Export To Excel
                    </button>
                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->

            <div class="col-xs-12">
                @*<table id="example" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th class="hidden"></th>
                                <th class="remove-search less-width">Action</th>
                                <th>Employee Code</th>
                                <th>Name</th>
                                <th>Branch</th>
                                <th>Image</th>
                                <th>Employee Grade</th>
                                <th>SAP Code</th>
                                <th>Date Of Joining</th>
                                <th>Designation</th>
                                <th>Address 2</th>
                                <th>Address 1</th>
                                <th>Cost Center</th>
                                <th>Additional Qualification</th>
                                <th>Qualification</th>
                                <th>Mobile No</th>
                                <th>Emergency Mobile No</th>
                                <th>Email ID</th>
                                <th>TUV Email-Id</th>
                                <th>Date Of Birth</th>
                                <th>Gender</th>
                                <th>Blood Group</th>
                                <th>Shoes Size</th>
                                <th>Pan No</th>
                                <th>Aadhar No</th>
                                <th>CV</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr class="hidden">
                                <td></td>
                                <td>Action</td>
                                <td>Employee Code</td>
                                <td>Name</td>
                                <td>Branch</td>
                                <td>Image</td>
                                <td>EmployeeGrade</td>
                                <td>SAP Code</td>
                                <td>Date Of Joining</td>
                                <td>Designation</td>
                                <td>Address2</td>
                                <td>Address1</td>
                                <td>Cost Center</td>
                                <td>Additional Qualification</td>
                                <td>Qualification</td>
                                <td>Mobile No</td>
                                <td>Emergency Mobile No</td>
                                <td>Email ID</td>
                                <td>Tuv EmailId</td>
                                <td>Date of birth</td>
                                <td>Gender</td>
                                <td>Blood Group</td>
                                <td>Shoes Size</td>
                                <td>Pan No</td>
                                <td>Aadhar No</td>
                                <td>CV</td>
                                <td>Status</td>
                            </tr>
                            <tr class="hidden">
                                <td></td>

                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>

                            </tr>

                            @{

                            }
                            @foreach (var item in ViewData["UserList"] as IEnumerable<TuvVision.Models.ProfileUser>)
                            {
                            <tr>
                                <td class="hidden"></td>
                                <td style="width:125px;">
                                    <a href="@Url.Action("CreateUser", "Users", new {@UserID = item.PK_UserID })" title="Edit"><span class="fa fa-pencil"></span>&nbsp;</a>
                                    <a href="@Url.Action("Delete", "Users", new {@UserID = item.PK_UserID })" onclick="return confirm('Are you sure you want to Delete this record?')" title="Delete"><span class="fa fa-trash-o"></span>&nbsp;</a>
                                    @{
                                        if ((Convert.ToString(TempData["InsertUsers"])) != "" && Convert.ToString(TempData["InsertUsers"]) != null)
                                        {
                                            TempData["InsertUsers"] = null;
                                            <script type="text/javascript" language="javascript">
                                                                    alert("User Added Successfully!!!!");
                                            </script>
                                        }
                                        if ((Convert.ToString(TempData["UpdateUsers"])) != "" && Convert.ToString(TempData["UpdateUsers"]) != null)
                                        {
                                            TempData["UpdateUsers"] = null;
                                            <script type="text/javascript" language="javascript">
                                                                        alert("User Updated Successfully");
                                            </script>
                                        }
                                        if ((Convert.ToString(TempData["DeleteUser"])) != "" && Convert.ToString(TempData["DeleteUser"]) != null)
                                        {
                                            TempData["DeleteUser"] = null;
                                            <script type="text/javascript" language="javascript">
                                                                        alert("User Deleted Successfully");
                                            </script>
                                        }

                                    }
                                </td>

                               <td>@item.EmployeeCode</td>
                                <td>@item.FirstName @item.LastName</td>
                                <td>@item.Branch</td>
                                <td>@item.Image</td
                                <td><img src="~/Content/Uploads/Images/@item.Image" /></td>
                                <td>@item.EmployeeGrade</td>
                                <td>@item.SAP_VendorCode</td>
                                <td>@item.DateOfJoining.Value.ToString("dd/MM/yyyy")</td>
                                <td>@item.Designation</td>
                                <td>@item.Address2</td>
                                <td>@item.Address1</td>
                                <td>@item.Cost_Center</td>
                                <td>@item.Additional_Qualification</td>
                                <td>@item.Qualification</td>
                                <td>@item.MobileNo</td>
                                <td>@item.EmergencyMobile_No</td>
                                <td>@item.EmailID</td>
                                <td>@item.TuvEmailId</td>
                                <td>@item.DOB.Value.ToString("dd/MM/yyyy")</td>
                                <td>@item.Gender</td>
                                <td>@item.BloodGroup</td>
                                <td>@item.ShoesSize</td>
                                <td>@item.PanNo</td>
                                <td>@item.AadharNo</td>
                                @if (item.CV !="")
                                {
                                    <td><a download="" href="~/Content/Uploads/Images/@item.CV">CV</a></td>
                                }
                                else
                                {
                                    <td><a>NA</a></td>
                                }

                                <td>@item.IsActive</td>

                            </tr>
                           }
                        </tbody>
                    </table>*@<!-- /.data table col -->

            </div>



            <div class="col-lg-12">
                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.LstDashboard)
                            .Build(columns =>
                            {
                                //< a href = "@Url.Action("ContactDetails","CompanyMasters",new { @CNT_ID = item.PK_ContID })" style = "margin-right:15px;" title = "Edit" >< i class="fa fa-pencil"></i></a>
                                //                   <a href = "@Url.Action("DeleteContact","CompanyMasters",new {@CNT_ID=item.PK_ContID })" onclick="return confirm('Are you sure you want to delete Contact record?')" title="Delete"><i class="fa fa-trash"></i></a>


                                //columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink("IRNForm", "InspectionReleaseNote", new { PK_IVR_ID = o.PK_IVR_ID }, new { @class = "fa fa-pencil", title = "Edit" }));
                                //columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateUser", new { UserID = o.PK_UserID }, new { @class = "fa fa-pencil", title = "Edit" }));
                                //columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { UserID = o.PK_UserID }, new { @class = "fa fa-trash", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));

                                columns.Add(c => c.FirstName).Titled("First Name");
                                columns.Add(c => c.MiddleName).Titled("Middle Name");

                                columns.Add(c => c.LastName).Titled("Last Name");
                                //columns.Add(c => c.UserName).Titled("User Name");



                                columns.Add(c => c.DateOfJoining).Titled("Date Of Joining");
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.Cost_Center).Titled("Cost Center");
                                columns.Add(c => c.EmployementCategory).Titled("Employement Category");

                                columns.Add(c => c.EmployeeGrade).Titled("Employee Grade");
                                columns.Add(c => c.EmployeeCode).Titled("HR Employee Code");
                                columns.Add(c => c.SAPEmployeeCode).Titled("SAP Employee Code");
                                columns.Add(c => c.SAP_VendorCode).Titled("SAP Vendor Code");
                                //columns.Add(c => c.Reporting_Person_One).Titled("Reporting_Person_One");
                                //columns.Add(c => c.ReportingTwo).Titled("Reporting_Person_Two"); //checking remainig
                                //columns.Add(c => c.OPE).Titled("Eligible for OPE");
                                columns.Add(c => c.Designation).Titled("Designation");
                                columns.Add(c => c.TuvEmailId).Titled("TUVI Email ID");

                                //columns.Add(c => c.OrgChangeDate).Titled("OrgChangeDate");//checking remainig
                                //columns.Add(c => c.ReasonForUpdate).Titled("Reason For Update");
                                columns.Add(c => c.MainBranch).Titled("Main Branch");
                                columns.Add(c => c.OBSTYPE).Titled("OBS Type");
                                //columns.Add(c => c.PK_UserID).Titled("TIIMES UIN");
                                //columns.Add(c => c.UserRole).Titled("Role");
                                //columns.Add(c => c.PortfolioAccess).Titled("Portfolio Access"); //portfoliotype
                                //columns.Add(c => c.ActiveStatus).Titled("Status").RenderedAs(c => CustomRenderingOfColumn2(c)).Sortable(true);
                                //columns.Add(c => c.IsLocked).Titled("Profile Locked");

                                columns.Add(c => c.DOB).Titled("Date Of Birth");
                                //columns.Add(c => c.DOB).Titled("Date Of Birth"); //age 
                                //columns.Add(c => c.PFUANNumber).Titled("PF-UAN  Number");
                                //columns.Add(c => c.PAN).Titled("PAN");
                                //columns.Add(c => c.AadharNo).Titled("Aadhar Number");
                                columns.Add(c => c.Email).Titled("Personal Email ID");
                                columns.Add(c => c.MobileNo).Titled("Mobile No");
                                columns.Add(c => c.EmergencyMobile_No).Titled("Emergency Mobile No");
                                columns.Add(c => c.ResidenceNo).Titled("Residence Number");
                                columns.Add(c => c.OfficeNo).Titled("TUVI Landline Number");
                                columns.Add(c => c.ResidenceAddress).Titled("Residing Address");
                                columns.Add(c => c.PermanentAddress).Titled("Permanent Address");
                                columns.Add(c => c.ZipCode).Titled("Residing Address PIN code");
                                columns.Add(c => c.PerAddrPin).Titled("Permanent Address PIN code");
                                //columns.Add(c => c.Marital_Status).Titled("Marital Status");
                                //columns.Add(c => c.LanguageSpoken).Titled("LanguageSpoken");

                                columns.Add(c => c.BloodGroup).Titled("Blood Group");
                                columns.Add(c => c.ShoesSize).Titled("Shoes Size");
                                columns.Add(c => c.ShirtSize).Titled("Shirt Size");

                                //columns.Add(c => c.Medical_History).Titled("Medical History");
                                //columns.Add(c => c.Allergies).Titled("Allergies");


                                //ezperiece before joing tuv

                                columns.Add(c => c.TUVIStampNo).Titled("TUVI Stamp No");
                                columns.Add(c => c.currentAssignment).Titled("current Assignment");

                                columns.Add(c => c.Course).Titled("Course");
                                columns.Add(c => c.Degree).Titled("Degree");

                                columns.Add(c => c.MajorFieldOfStudy).Titled("Field of study");
                                columns.Add(c => c.YearOfPassing).Titled("Year Of Passing");
                                columns.Add(c => c.University).Titled("University");
                                columns.Add(c => c.LastYearPerc).Titled("Last Year %/CGPA");
                                columns.Add(c => c.AggregatePerc).Titled("Aggregate %/CGPA");

                                columns.Add(c => c.FileName).Titled("Certification");
                                //columns.Add(c => c.FileName).Titled("Certification").RenderedAs(model =>
                                //{
                                //    if (!string.IsNullOrEmpty(model.FileName))
                                //    {
                                //        var output = "<ul>";
                                //        var fileNames = model.FileName.Split('!'); // Split by '!' to separate multiple file names

                                //        foreach (var fileName in fileNames)
                                //        {
                                //            var attach = fileName.Split(',');
                                //            if (attach.Length > 0)
                                //            {
                                //                foreach (var item in attach)
                                //                {
                                //                    var linkText = Convert.ToString(item);
                                //                    var PK_id = model.Fk_UserId;
                                //                    var linkUrl = Url.Action("DownloadFormat1", "UserDetailDashboard", new { d = linkText, PK_id });

                                //                    output += $"<li><a href='{linkUrl}' download='{linkText}'>{linkText}</a></li>";
                                //                }
                                //                //var linkText = attach[0].ToString();
                                //                //var PK_id = model.Fk_UserId;
                                //                //var linkUrl = Url.Action("DownloadFormat2", "UserDetailDashboard", new { d = linkText, PK_id });

                                //                //output += $"<li><a href='{linkUrl}' download='{linkText}'>{linkText}</a></li>";
                                //            }

                                //        }
                                //        output += "</ul>";
                                //        return new HtmlString(output);

                                //    }
                                //    else
                                //    {
                                //        return "";
                                //    }
                                //}).Sortable(true);


                                columns.Add(c => c.certNo).Titled("Certification No.");
                                columns.Add(c => c.CertIssueDate).Titled("Issue Date");
                                columns.Add(c => c.CertValidDate).Titled("Valid Till");







                                //columns.Add().Titled("Education Qualification Certificates").RenderedAs(c => CustomRenderingOfColumnEduAtta(c)).Sortable(true);
                                //columns.Add().Titled("Professional Qualification Certificates").RenderedAs(c => CustomRenderingOfColumnProAtta(c)).Sortable(true);
                                //columns.Add(c => c.ProffesionalQualificationDetails).Titled("Professional Qualification  Details");


                                //columns.Add(c => c.EyeTest).Titled("Eye Test Year");
                                //columns.Add(c => c.UploadedDocument).Titled("Uploaded Document");




                                //columns.Add(c => c.FirstName + ' ' + c.LastName).Titled("Name").Filterable(true).FilteredAs("custom").Sortable(true).Css("aa");

                                //// columns.Add(c => c.Image).Titled("Photo").RenderedAs(c => CustomRenderingOfColumn1(c)).Sortable(true);

                                ////columns.Add(c => c.Additional_Qualification).Titled("Professional Qualification");

                                //columns.Add(c => c.PanNo).Titled("PAN");
                                //columns.Add(c => c.Verified).Titled("Verification").RenderedAs(c => CustomRenderingOfColumn(c)).Sortable(true);
                                //columns.Add(c => c.ModifiedBy).Titled("Modified By");
                                //columns.Add(c => c.strModifiedDate).Titled("Modified Date");


                                //columns.Add(c => c.Service_Type).Titled("Service_Type");

                                //columns.Add(c => c.Dateofbirth).Titled("Dateofbirth");
                                //columns.Add(c => c.ProfCertificates).Titled("ProfCertificates");


                                //columns.Add(c => c.TotalyearofExprience).Titled("TotalyearofExprience");
                                //columns.Add(c => c.ExperienceInMonth).Titled("ExperienceInMonth");
                                //columns.Add(c => c.Dateofjoining).Titled("Dateofjoining");

                                //columns.Add(c => c.SAP_Emp_code).Titled("SAP_Emp_code");
                                //columns.Add(c => c.Employee_Type).Titled("Employee_Type");
                                //columns.Add(c => c.Cost_center).Titled("Cost_center");
                                //columns.Add(c => c.ReportingTwo).Titled("ReportingTwo");



                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No Data Found")
                            .Filterable()
                            .Sortable()
                            )
                        </td>
                    </tr>
                </table>
            </div>
        </div><!-- /.container-fluid -->
        <!--End of header-->
    </div>
  <!--End of main content 3-->
}


<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>

<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>
