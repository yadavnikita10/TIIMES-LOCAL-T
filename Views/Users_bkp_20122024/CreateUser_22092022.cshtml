@using TuvVision.Models;
@model TuvVision.Models.Users
@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Shared/_TuvVision.cshtml";

    int j = 0;
    int k = 0;
    int jpq = 0;
    List<string> EditProdName = ViewBag.EditproductName as List<string>;
}

<title>Users </title>



@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js" crossorigin="anonymous"></script>*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" crossorigin="anonymous"></script>

<script src="~/AllJsAndCss/moment-precise-range.js"></script>


<!--  required libraries  -->
@*DATEPICKER*@

<script type="text/javascript" src="../../Scripts/jquery-1.5.1.min.js"></script>


@*DATEPICKER*@
@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>


<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />


<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>




@*below two js for search inside dropdown*@
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>

<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />







@*Bootstrap Time Picker*@
@*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/TimePicker/bootstrap-timepicker.css" rel="stylesheet" />
    <link href="~/TimePicker/MvcBootstrapTimepicker.css" rel="stylesheet" />
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="~/TimePicker/bootstrap-timepicker.js" type="text/javascript"></script>
    <script src="~/TimePicker/MvcBootstrapTimepicker.js" type="text/javascript"></script>*@

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" rel="stylesheet" />
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" />*@

<script>
    $(document).ready(function () {

        if ('@ViewBag.lstDOrderType' == null) {

            $('.CDegree').each(function () {
                $(this).css('display', 'block');
            });

            $('.CDiploma').each(function () {
                //    alert(1);
                $(this).css('display', 'none');
            });

            $('.CPGD').each(function () {
                $(this).css('display', 'none');
            });
        }


    });

    function AcceptSelNumber(obj) {

        if ($(obj).val() > 100) {

            $(obj).val('');
            return false;
            //    $(obj).val('100');
        }
    }



    $(function () {
        $(".dateofjoinings").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });


    function BindYearOfPassing() {
        $(".CYearOfPassing").datepicker({
            dateFormat: 'yy',//check change
            viewMode: "years",
            changeMonth: false,
            changeYear: true,
            yearRange: "-100:+50"

            //dateFormat: "yyyy",
            //viewMode: "years",
            //minViewMode: "years",
            //autoclose: true

        });
    }

    $(function () {
        $(".CYearOfPassing").datepicker({
            dateFormat: 'yy',//check change
            viewMode: "years",
            changeMonth: false,
            changeYear: true,
            yearRange: "-100:+50"

            //dateFormat: "yyyy",
            //viewMode: "years",
            //minViewMode: "years",
            //autoclose: true

        });
    });

    //$(".CYearOfPassing").datepicker({
    //    format: "yyyy",
    //    viewMode: "years",
    //    minViewMode: "years"
    //});

</script>
<script>

    function BindIssueDate() {

        $(".CCertIssueDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    }
    $(function () {
        $(".CCertIssueDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });

    function BindValidDate() {
        $(".CCertValidTill").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    }
    $(function () {
        $(".CCertValidTill").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });


    $(function () {
        $(".OrgChangeDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });



    $(function () {
        $(".dateofbirths").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function SiteDisplay(CAssign) {
        if (CAssign == "Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.") {
            $("#divSiteDetails").css('display', 'block')
        }
        else { $("#divSiteDetails").css('display', 'none') }

    }


</script>
<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
</style>

<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
    /*-- Delete color-profile --*/
    ul.AttachmentFormat {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.AttachmentFormat > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.AttachmentFormat > li a.title1 {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.AttachmentFormat > li a.deleteItemFormat {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
    /*EndCode*/
</style>


@{
    List<string> EditSectorCode = ViewBag.EditSectorCode as List<string>;
    List<string> EditAnalystName = ViewBag.EditAnalystName as List<string>;
    string strFileName = string.Empty;
    string strPKId = string.Empty;
}

@using (Html.BeginForm())
{
    @Html.Hidden("PK_UserID")
    @Html.HiddenFor(m => m.PKId)
    @Html.HiddenFor(m => m.LoginUserRoleId)
    @Html.HiddenFor(m => m.UserPrimaryKey)
    @Html.HiddenFor(m => m.arrEducationQualification)
    @Html.HiddenFor(m => m.PK_UserID)
    @Html.HiddenFor(m => m.After7Days)

    @Html.AntiForgeryToken()
     <!--Start of main content 3-->
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        @*<div class="col-xs-12 text-right">
                            <a href="@Url.Action("UserDashBoard", "Users")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                        </div>*@

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                @if (Model != null)
                                {
                                    if (Model.PK_UserID != "" && Model.PK_UserID != null)
                                    {
                                        <h3 class="form-page-title">Update User</h3>
                                    }
                                    else
                                    {
                                        <h3 class="form-page-title">Insert User</h3>
                                    }
                                }
                                else
                                {
                                    <h3 class="form-page-title">Insert User</h3>
                                }

                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-9">
                                                        <label><u>Profile Photo</u></label>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <label><u>Signature</u></label>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-9">
                                                        @if (Model.IData == null)
                                                        {
                                                            <img src="~/Content/Uploads/Images/NoImage.jpg" height="75px" width="75px"/>

                                                        }
                                                        else
                                                        {

                                                            <img src="data:image/jpg;base64,@Convert.ToBase64String(Model.IData)" height="75px" width="75px" />
                                                        }
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">@*Signature*@
                                                        @if (Model.SignatureData == null)
                                                        {
                                                            <img src="~/Content/Uploads/Images/NoImage.jpg" height="75px" width="75px" />

                                                        }
                                                        else
                                                        {

                                                            <img src="data:image/jpg;base64,@Convert.ToBase64String(Model.SignatureData)" height="75px" width="75px" />
                                                        }
                                                    </div>
                                                </div>


                                              

                                               

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <label><u>Title</u></label>
                                                    </div>
                                                    <div id="idFirstName">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>First Name:</label>
                                                                @Html.TextBoxFor(model => model.FirstName, new { placeholder = "Enter First Name", @class = "form-control form-control-custom" })
                                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Middle Name (Father/Mother):</label>
                                                            @Html.TextBoxFor(model => model.MiddleName, new { placeholder = "Enter Middle Name", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div id="idLastName">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Last Name(Surname):@*<span style="color:#ff0000;">*</span>*@</label>
                                                                @Html.TextBoxFor(model => model.LastName, new { placeholder = "Enter Last Name", @class = "form-control form-control-custom" })
                                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        </div>
                                                    <div id="idUserName">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>TIIMES User Name:</label>
                                                                @Html.TextBoxFor(model => model.UserName, new { placeholder = "Enter User Name", @class = "form-control form-control-custom" })
                                                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        </div>
                                                        
                                                    </div>

                                                <div id="IdReadOnly">
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>



                                                    <div class="row">
                                                        <div class="col-xs-6">
                                                            <label><u> Administrative </u></label>
                                                        </div>
                                                        <div id="IdHide2">


                                                            <div class="col-xs-6 text-right">
                                                                <button type="button" class="btn btn-default insert-form-btn" id="btnViewHistory" style="margin-bottom:5px" title="Submit">View History</button>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    @*<div class="col-xs-12">
                <div class="col-xs-6">
                    <label><u> Administrative </u></label>
                </div>
                <div class="col-xs-6 text-right">
                    <button type="button" class="btn btn-default insert-form-btn" id="btnViewHistory" style="margin-bottom:5px" title="Submit">View History</button>

                </div>
            </div>*@

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Date Of Joining</label>
                                                                @Html.TextBoxFor(model => model.DateOfJoining, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date Of Joining", @class = "form-control form-control-custom dateofjoinings", autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Branch:</label>


                                                                <select id="BrAuditee" class="form-control form-multiselect-city" multiple="multiple" name="BrAuditeeName" placeholder="Select Option">
                                                                    @{
                                                                        foreach (var item in ViewData["BranchNameItems"] as IEnumerable<SelectListItem>)
                                                                        {

                                                                            if (ViewData["ListBranchchecked"] != null)
                                                                            {
                                                                                if (Convert.ToString(ViewData["ListBranchchecked"]).Split(',').Contains(item.Value.ToString()))
                                                                                {
                                                                                    <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                            }
                                                                        }
                                                                    }
                                                                </select>

                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Cost Centre:</label>
                                                                @if (ViewBag.SubCatlist != null)
                                                                {
                                                                    @Html.DropDownListFor(m => m.CostCenter, ViewBag.SubCatlist as IEnumerable<SelectListItem>, "--Select Cost center--", new { @class = "form-control", @id = "Pk_CC_Id", })
                                                                    @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger validation-msg" })
                                                                }
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3" id="IdEmploymentCate">
                                                            <div class="form-group">
                                                                <label>Employment category:</label>
                                                                @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                                @Html.DropDownListFor(m => m.EmployementCategory, new List<SelectListItem>
                                                                     {
                                                                     new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Payroll", Value = "Payroll" },
                                                                     new SelectListItem{ Text="Regular Contract", Value = "Regular Contract" },
                                                                     new SelectListItem{ Text="Exclusive Contract with PF", Value = "Exclusive Contract with PF" },
                                                                     new SelectListItem{ Text="Exclusive Contract", Value = "Exclusive Contract" },
                                                                     new SelectListItem{ Text="Empanelled Direct", Value = "Empanelled Direct" },
                                                                     new SelectListItem{ Text="Empanelled Agency", Value = "Empanelled Agency" },


                                                           },

                                                                     new { @class = "form-control", @id = "EC" })
                                                            </div>
                                                        </div>





                                                    </div>
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Employee Grade:</label>
                                                                @Html.DropDownListFor(model => model.EmployeeGradeId, new SelectList(@ViewBag.EmployeeGrade, "Code", "Name"), "---Select Title---", new { @id = "EGI", @class = "form-control" })

                                                                @Html.ValidationMessageFor(model => model.EmployeeGradeId, "", new { @class = "text-danger validation-msg", @id = "EGI" })


                                                            </div>


                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>HR Employee Code:</label>
                                                                @Html.TextBoxFor(model => model.EmployeeCode, new { placeholder = "Enter Employee Code", @class = "form-control form-control-custom" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>SAP Employee Code:</label>
                                                                @Html.TextBoxFor(model => model.SAPEmployeeCode, new { placeholder = "SAP Employee Code", @class = "form-control form-control-custom" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">

                                                            <div class="form-group">
                                                                <label>SAP Vendor Code:</label>
                                                                @Html.TextBoxFor(model => model.SAP_VendorCode, new { placeholder = "Enter SAP Vendor Code", @class = "form-control form-control-custom" })
                                                            </div>

                                                        </div>






                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Reporting Person One (Manager): </label>
                                                                @Html.DropDownListFor(m => m.ReportingOne, (SelectList)ViewBag.Employees, "Select Reporting Person One", new { @class = "form-control form-control-custom-ddl", @id = "R1" })
                                                                @*@Html.DropDownListFor(model => model.ReportingOne, new SelectList(@ViewBag.Employees, "PK_UserID", "FullName"), "---Select Reporting One---", new { @class = "form-control form-control-custom-ddl" })*@
                                                                @Html.ValidationMessageFor(model => model.ReportingOne, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">
                                                                <label>Reporting Person Two (PCH):</label>
                                                                @Html.DropDownListFor(m => m.ReportingTwo, (SelectList)ViewBag.Employees, "Select Reporting person 2", new { @class = "form-control form-control-custom-ddl", @id = "R2" })
                                                                @*@Html.DropDownListFor(model => model.ReportingTwo, new SelectList(@ViewBag.Employees, "PK_UserID", "FullName"), "---Select Reporting Tqo---", new { @class = "form-control form-control-custom-ddl" })*@
                                                            </div>
                                                        </div>
                                                        <div id="IdHide1">

                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>Eligible for OPE:</label>
                                                                    @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                                    @Html.DropDownListFor(m => m.OPE, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="YES", Value = "YES" },
                                                                     new SelectListItem{ Text="NO", Value = "NO" },


                                                           },

                                                                     new { @class = "form-control", @id = "OPE" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>Designation:</label>
                                                                @Html.TextBoxFor(model => model.Designation, new { placeholder = "Enter Designation", @class = "form-control form-control-custom" })
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-3">
                                                            <div class="form-group">
                                                                <label>TUVI Email ID:</label>
                                                                @Html.TextBoxFor(model => model.TuvEmailId, new { placeholder = "Enter TUV Email", @class = "form-control form-control-custom" })
                                                                @*@Html.ValidationMessageFor(model => model.TuvEmailId, "", new { @class = "text-danger" })*@
                                                            </div>
                                                        </div>

                                                        <div id="IdOrgChangeDateMain">

                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    <label>Organisational Change Date:</label>
                                                                    @Html.TextBoxFor(model => model.OrgChangeDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Organisational Change Date", @class = "form-control form-control-custom OrgChangeDate", autocomplete = "off" })
                                                                    @Html.ValidationMessageFor(model => model.OrgChangeDate, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div id="IdHide3">
                                                            <div class="col-xs-12 col-sm-3" id="HideFirstTime">
                                                                <div class="form-group">
                                                                    <label>Reason for update:</label>
                                                                    @Html.DropDownListFor(m => m.ReasonForUpdate, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Transfer To Other Branch", Value = "Transfer To Other Branch" },
                                                                     new SelectListItem{ Text="Promotion", Value = "Promotion" },
                                                                     new SelectListItem{ Text="Re-designation", Value = "Re-designation" },
                                                                     new SelectListItem{ Text="Organizational Change", Value = "Organizational Change" },
                                                                     new SelectListItem{ Text="Correction", Value = "Correction" },
                                                                    new SelectListItem{ Text="Left Organisation", Value = "Left Organisation" },


                                                           },

                                                                     new { @class = "form-control", @id = "RFU" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        @*</div>*@
                                                    </div>

                                                    @*</div>*@

                                                    <div class="row">
                                                        <div class="col-xs-12" id="divHistory" style="overflow:auto;width:99%;height:350px;display:none;">
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <hr class="custom-hr1">
                                                                </div>
                                                            </div>

                                                            <table class="display dataTable no-footer" style="overflow-y:auto;width:350%" id="WOSummaryTable">
                                                                <tr style="background-color:#f0f0f0">

                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Employee Grade</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Employee Code</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">SAP Vendor Code</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Status</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Role</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Designation</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Branch</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Employee Type</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Cost Center</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Tuv Email Id</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Reporting Person One</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Reporting Person Two</td>
                                                                    <td style="text-align:center;width:20px;font-size:smaller;">Locked Status</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">SAP Employee Code</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">OPE Eligible</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Employement Category</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Reason For Update</td>
                                                                    <td style="text-align:center;width:80px;font-size:smaller;">Org.Change Date</td>


                                                                </tr>
                                                                @if (Model.dtUserHistory != null && Model.dtUserHistory.Rows.Count != 0)
                                                                {

                                                                    for (int cnt = 0; cnt < Model.dtUserHistory.Rows.Count; cnt++)
                                                                    {
                                                                        System.Data.DataRow row = Model.dtUserHistory.Rows[cnt];
                                                                        System.Data.DataRow prerow = cnt > 0 ? Model.dtUserHistory.Rows[cnt - 1] : null;


                                                                        <tr style="background-color:white">
                                                                            @for (int colcnt = 0; colcnt < Model.dtUserHistory.Columns.Count; colcnt++)
                                                                            {
                                                                                if (prerow == null)
                                                                                {
                                                                                    <td style="background-color:white; text-align:center;width:80px;font-size:smaller;">@row[colcnt]</td>
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (row[colcnt].ToString() == prerow[colcnt].ToString())
                                                                                    {
                                                                                        <td style="background-color:white; text-align:center;width:80px;font-size:smaller;">@row[colcnt]</td>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <td style="background-color:#709eed;text-align:center;width:80px;font-size:smaller;">@row[colcnt]</td>
                                                                                    }
                                                                                }
                                                                            }
                                                                        </tr>

                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr style="background-color:white">
                                                                        <td colspan="17" style="text-align:left;color:red; width:20px;font-size:smaller;">No History Available!</td>
                                                                    </tr>
                                                                }

                                                            </table><br />


                                                        </div>


                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>



                                                    <div id="UserHide">
                                                        <label><u> TIIMES </u></label>
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-3" style="pointer-events:none;">
                                                                <div class="form-group">
                                                                    <label>UIN:</label>
                                                                    @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                                    @Html.TextBoxFor(model => model.PK_UserID, new { @placeholder = "Enter UIN", @class = "form-control", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.PK_UserID, "", new { @class = "text-danger validation-msg" })
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    <label> Role: </label>
                                                                    @{
                                                                        if (Model != null)
                                                                        {
                                                                            if (ViewBag.UserRole != null)
                                                                            {
                                                                                @Html.DropDownListFor(model => model.UserRole, new SelectList(@ViewBag.UserRole, "Code", "Name"), "---Select User Type---", new { @id = "ddlUserName", @class = "form-control form-control-custom-ddl" })
                                                                            }
                                                                            else if (ViewData["RoleNameItems"] != null)
                                                                            {
                                                                                @Html.DropDownListFor(model => model.UserRole, (IEnumerable<SelectListItem>)ViewData["RoleNameItems"], "---Select User Type---", new { @id = "ddlUserName", @class = "form-control col-md-7 col-xs-12 form-control-custom-ddl" })
                                                                            }
                                                                            else
                                                                            {
                                                                                @Html.DropDownListFor(model => model.UserRole, new SelectList(@ViewBag.UserRole, "Code", "Name"), "---Select User Type---", new { @id = "ddlUserName", @class = "form-control form-control-custom-ddl" })
                                                                            }
                                                                        }

                                                                    }
                                                                </div>
                                                            </div>

                                                            <div class="col-xs-12 col-sm-5" id="autoUpdate">
                                                                <div class="form-group">
                                                                    @*<label>Employee Bifurcation :</label>*@
                                                                    <label>Portfolio Access :</label>
                                                                    <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option">
                                                                        @{
                                                                            foreach (var item in ViewData["ProjectTypeItems"] as IEnumerable<SelectListItem>)
                                                                            {

                                                                                if (ViewData["ListPKSubJobChecked"] != null)
                                                                                {
                                                                                    if (Convert.ToString(ViewData["ListPKSubJobChecked"]).Split(',').Contains(item.Value.ToString()))




                                                                                    {
                                                                                        <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                                }
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>


                                                            </div>


                                                        </div>
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-3">

                                                                <div class="form-group">
                                                                    <label>Status:</label>
                                                                    @if (Model.PK_UserID != "" && Model.PK_UserID != null)
                                                                    {
                                                                        if (Model.IsActive == true)
                                                                        {
                                                                            <select class="form-control" id="IsActive">
                                                                                <option value="">---Select---</option>
                                                                                <option value="1" selected>Active</option>
                                                                                <option value="0">InActive</option>
                                                                            </select>

                                                                        }
                                                                        else if (Model.IsActive == false)
                                                                        {

                                                                            <select class="form-control" id="IsActive">
                                                                                <option value="">---Select---</option>
                                                                                <option value="1">Active</option>
                                                                                <option value="0" selected>InActive</option>

                                                                            </select>
                                                                        }
                                                                    }
                                                                    else
                                                                    {

                                                                        <select class="form-control" id="IsActive">
                                                                            <option value="">---Select---</option>
                                                                            <option value="1" selected>Active</option>
                                                                            <option value="0">InActive</option>
                                                                        </select>

                                                                    }

                                                                </div>



                                                            </div>
                                                            <div class="col-xs-12 col-sm-3">
                                                                <div class="form-group">
                                                                    <label for="InActive" style="color:red;">Profile Locked :</label>

                                                                    @if (Model.PK_UserID != "" && Model.PK_UserID != null)






                                                                    {
                                                                        if (Model.IsLocked == true)

                                                                        {




                                                                            <select class="form-control" id="IsLocked">
                                                                                <option value="">---Select---</option>
                                                                                <option value="YES" selected>YES</option>
                                                                                <option value="NO">NO</option>

                                                                            </select>

                                                                        }
                                                                        else if (Model.IsLocked == false)
                                                                        {

                                                                            <select class="form-control" id="IsLocked">
                                                                                <option value="">---Select---</option>
                                                                                <option value="YES">YES</option>
                                                                                <option value="NO" selected>NO</option>

                                                                            </select>


                                                                        }
                                                                    }
                                                                    else
                                                                    {

                                                                        <select class="form-control" id="IsLocked">
                                                                            <option value="">---Select---</option>
                                                                            <option value="YES">YES</option>
                                                                            <option value="NO" selected>NO</option>
                                                                        </select>

                                                                    }
                                                                </div>
                                                            </div>



                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <hr class="custom-hr1">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>

                                                @*</div>*@

                                                <label><u>Personal Details</u></label>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Date of Birth:</label>
                                                            @Html.TextBoxFor(model => model.DOB, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Date Of Birth", @class = "form-control form-control-custom dateofbirths", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                        <div class="form-group">
                                                            <label>Age</label>
                                                            @Html.TextBoxFor(model => model.AgeCalculator, new { @placeholder = "Age", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.AgeCalculator, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>PF-UAN Number</label>
                                                            @Html.TextBoxFor(model => model.PFUANNumber, new { @placeholder = "PF UAN Number", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.PFUANNumber, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>PAN :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.PanNo, new { @placeholder = "Enter PAN No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.PanNo, "", new { @class = "text-danger validation-msg" })
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Aadhar Number :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.AadharNo, new { @placeholder = "Enter Aadhar No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Personal Email ID:</label>
                                                            @Html.TextBoxFor(model => model.EmailID, new { placeholder = "Enter Personal Email ID", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Mobile Number:</label>
                                                            @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Enter Mobile Number", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger", @onkeypress = "return isNumberKey(event);" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Emergency Contact Number. :</label>
                                                            @*<input type="text" class="form-control" placeholder="Status Here">*@
                                                            @Html.TextBoxFor(model => model.EmergencyMobile_No, new { @placeholder = "Enter Emergency Mobile Number", @class = "form-control", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.EmergencyMobile_No, "", new { @class = "text-danger validation-msg"})

                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Residence Number:</label>
                                                            @Html.TextBoxFor(model => model.ResidenceNo, new { placeholder = "Enter Residence Number", @class = "form-control form-control-custom", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.ResidenceNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>TUVI Landline Number:</label>
                                                            @Html.TextBoxFor(model => model.OfficeNo, new { placeholder = "Enter Office Number", @class = "form-control form-control-custom", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.OfficeNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>


                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Residing Address:</label>

                                                            @Html.TextAreaFor(model => model.Address1, new { placeholder = "Enter Residing Address", @class = "form-control", @rows = "4" })


                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Permanant Address:</label>

                                                            @Html.TextAreaFor(model => model.Address2, new { placeholder = "Enter Permanant Address ", @class = "form-control", @rows = "4" })


                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*<label>Residing Address ZIP Code:</label>*@
                                                            <label>Residing Address PIN code:</label>
                                                            @Html.TextBoxFor(model => model.ZipCode, new { placeholder = "Enter Residing Address PIN code", @class = "form-control form-control-custom CPIN", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*<label>Residing Address ZIP Code:</label>*@
                                                            <label>Permanent address PIN Code:</label>
                                                            @Html.TextBoxFor(model => model.PermanantPin, new { placeholder = "Enter Permanent address PIN Code", @class = "form-control form-control-custom CPIN", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.PermanantPin, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>




                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Gender:</label>


                                                            @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>

                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Male", Value = "Male" },
                                                                     new SelectListItem{ Text="Female", Value = "Female" },
                                                                     new SelectListItem{ Text="Non-binary", Value = "Non-binary" },
                                                                     new SelectListItem{ Text="Transgender", Value = "Transgender" },
                                                                     new SelectListItem{ Text="Intersex", Value = "Intersex" },
                                                           },

                                                                     new { @class = "form-control", @id = "Gender" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Marital Status:</label>

                                                            @*@Html.TextBoxFor(model => model.Marital_Status, new { @placeholder = "Enter Marital Status", @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Marital_Status, "", new { @class = "text-danger validation-msg" })*@
                                                            @Html.DropDownListFor(m => m.Marital_Status, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Single", Value = "Single" },
                                                                     new SelectListItem{ Text="Married", Value = "Married" },
                                                                     new SelectListItem{ Text="Divorced", Value = "Divorced" },
                                                                     new SelectListItem{ Text="Widowed", Value = "Widowed" },


                                                           },

                                                                     new { @class = "form-control", @id = "Marital_Status" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Language Known:</label>
                                                            <select id="LangAuditee" class="form-control form-multiselect-city" multiple="multiple" name="LangAuditee" placeholder="Select Option">
                                                                @{
                                                                    foreach (var item in ViewData["LangNameItems"] as IEnumerable<SelectListItem>)
                                                                    {

                                                                        if (ViewData["ListBranchchecked"] != null)
                                                                        {
                                                                            if (Convert.ToString(ViewData["ListLangchecked"]).Split(',').Contains(item.Value.ToString()))
                                                                            {
                                                                                <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                        }
                                                                    }
                                                                }
                                                            </select>

                                                        </div>
                                                    </div>










                                                </div>













                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Blood Group:</label>

                                                            @Html.DropDownListFor(m => m.BloodGroup, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="A-positive (A+)", Value = "A-positive (A+)" },
                                                                     new SelectListItem{ Text="A-negative (A-)", Value = "A-negative (A-)" },
                                                                     new SelectListItem{ Text="B-positive (B+)", Value = "B-positive (B+)" },
                                                                     new SelectListItem{ Text="B-negative (B-)", Value = "B-negative (B-)" },
                                                                     new SelectListItem{ Text="AB-positive (AB+)", Value = "AB-positive (AB+)" },
                                                                     new SelectListItem{ Text="AB-negative (AB-)", Value = "AB-negative (AB-)" },
                                                                     new SelectListItem{ Text="O-positive (O+)", Value = "O-positive (O+)" },
                                                                     new SelectListItem{ Text="O-negative (O-)", Value = "O-negative (O-)" },


                                                           },

                                                                     new { @class = "form-control", @id = "BG" })
                                                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger validation-msg" })







                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Shirt Size :</label>

                                                            @Html.DropDownListFor(m => m.ShirtSize, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="38 - XS", Value = "38 - XS" },
                                                                     new SelectListItem{ Text="39 - S", Value = "39 - S" },
                                                                     new SelectListItem{ Text="40 - M", Value = "40 - M" },
                                                                     new SelectListItem{ Text="41 - M", Value = "41 - M" },
                                                                     new SelectListItem{ Text="42 - L", Value = "42 - L" },
                                                                     new SelectListItem{ Text="43 - L", Value = "43 - L" },
                                                                     new SelectListItem{ Text="44 - XL", Value = "44 - XL" },
                                                                     new SelectListItem{ Text="45 - XL", Value = "45 - XL" },
                                                                     new SelectListItem{ Text="46 - XXL", Value = "46 - XXL" },
                                                                     new SelectListItem{ Text="47 - XXL", Value = "47 - XXL" },
                                                                     new SelectListItem{ Text="48 - XXXL", Value = "48 - XXXL" },



                                                           },


                                                                     new { @class = "form-control", @id = "ShirtSize" })
                                                            @Html.ValidationMessageFor(model => model.ShirtSize, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Shoes Size:</label>

                                                            @Html.DropDownListFor(m => m.ShoesSize, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="5.5 - 23.5 CM", Value = "5.5 - 23.5 CM" },
                                                                     new SelectListItem{ Text="6 - 24.1 CM", Value = "6 - 24.1 CM" },
                                                                     new SelectListItem{ Text="6.5 - 24.4 CM", Value = "6.5 - 24.4 CM" },
                                                                     new SelectListItem{ Text="7 - 24.8 CM", Value = "7 - 24.8 CM" },
                                                                     new SelectListItem{ Text="7.5 - 25.4 CM", Value = "7.5 - 25.4 CM" },
                                                                     new SelectListItem{ Text="8 - 25.7 CM", Value = "8 - 25.7 CM" },
                                                                     new SelectListItem{ Text="8.5 - 26 CM", Value = "8.5 - 26 CM" },
                                                                     new SelectListItem{ Text="9 - 26.7 CM", Value = "9 - 26.7 CM" },
                                                                     new SelectListItem{ Text="9.5 - 27 CM", Value = "9.5 - 27 CM" },
                                                                     new SelectListItem{ Text="10 - 27.3 CM", Value = "10 - 27.3 CM" },
                                                                     new SelectListItem{ Text="10.5 - 27.9 CM", Value = "10.5 - 27.9 CM" },
                                                                     new SelectListItem{ Text="11 - 28.3 CM", Value = "11 - 28.3 CM" },
                                                                     new SelectListItem{ Text="11.5 - 28.6 CM", Value = "11.5 - 28.6 CM" },
                                                                     new SelectListItem{ Text="12.5 - 29.4 CM", Value = "12.5 - 29.4 CM" },
                                                                     new SelectListItem{ Text="13.5 - 30.2 CM", Value = "13.5 - 30.2 CM" },
                                                                     new SelectListItem{ Text="14.5 - 31 CM", Value = "14.5 - 31 CM" },
                                                                     new SelectListItem{ Text="15.5 - 31.8 CM", Value = "15.5 - 31.8 CM" },

                                                           },

                                                                     new { @class = "form-control", @id = "ShoesSize" })
                                                            @Html.ValidationMessageFor(model => model.ShoesSize, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>






                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Medical History:</label>

                                                            @Html.TextBoxFor(model => model.Medical_History, new { @placeholder = "Enter Medical History", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Medical_History, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Allergies:</label>

                                                            @Html.TextBoxFor(model => model.Allergies, new { @placeholder = "Enter Allergies (if any) ", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Allergies, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>


                                                </div>
                                                <label>Experience before Joining TUVI In @*In Years E.g.(02:05)(YY:MM):*@</label>
                                                <div class="row">
                                                    
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">

                                                            <label>Years and</label>

                                                            @Html.TextBoxFor(model => model.TotalyearofExprience, new { @placeholder = "", @class = "form-control CTYE", @id = "TYE", @onkeypress = "return isNumberKey(event);" })
                                                            @*@Html.TextBoxFor(model => model.ExperienceInMonth, new { @placeholder = "Month ", @class = "form-control", @id = "TYEM", @onkeypress = "return isNumberKey(event);" })*@
                                                            @Html.ValidationMessageFor(model => model.TotalyearofExprience, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">

                                                            <label>Months</label>

                                                            @Html.TextBoxFor(model => model.ExperienceInMonth, new { @placeholder = "", @class = "form-control", @id = "TYEM", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.ExperienceInMonth, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                        <div class="form-group">

                                                            <label>Total Experience</label>

                                                            @Html.TextBoxFor(model => model.DynamicCalTotalYearExp, new { @placeholder = " ", @class = "form-control", @id = "DynamicCalTotalYearExp", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.DynamicCalTotalYearExp, "", new { @class = "text-danger validation-msg" })

                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>TUVI Stamp No:</label>

                                                            @Html.TextBoxFor(model => model.TUVIStampNo, new { @placeholder = "Enter Stamp No", @class = "form-control", @onkeypress = "return isNumberKey(event);" })
                                                            @Html.ValidationMessageFor(model => model.TUVIStampNo, "", new { @class = "text-danger validation-msg"})

                                                        </div>
                                                    </div>
                                                   
                                                    <div class="col-xs-12 col-sm-8">
                                                        <div class="form-group">
                                                            <label>Can inspect below item (Self declaration by inspectors):</label>
                                                            <select id="IdItemToBeInspected" class="form-control form-multiselect-city" multiple="multiple" name="IdItemToBeInspected" placeholder="Select Option">
                                                                @{
                                                                    foreach (var item in ViewData["AllItemToBeInspected"] as IEnumerable<SelectListItem>)
                                                                    {

                                                                        if (ViewData["ListBranchchecked"] != null)
                                                                        {
                                                                            
                                                                            if (Convert.ToString(ViewData["ListItemToBeInspectedchecked"]).Split(',').Contains(item.Value.ToString()))
                                                                            {
                                                                                <option selected="selected" value="@item.Value">@item.Text&nbsp; &nbsp;</option>

                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.Value">@item.Text&nbsp; &nbsp;</option>
                                                                        }
                                                                    }
                                                                }
                                                            </select>

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Current Assignments:</label>
                                                            @*@Html.TextBoxFor(model => model.OPE, new { placeholder = "Enter OPE", @class = "form-control form-control-custom" })*@
                                                            @Html.DropDownListFor(m => m.CurrentAssignment, new List<SelectListItem>
                                                {
                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                    //new SelectListItem{ Text="Regional – Inspection at different vendor locations", Value = "Regional – Inspection at different vendor locations" },
                                                    //new SelectListItem{ Text="Site – Deputed on Man Month Basis at Client / vendor location", Value = "Site – Deputed on Man Month Basis at Client / vendor location" },
                                                    //new SelectListItem{ Text="Office – Working from office", Value = "Office – Working from office" },
                                                    //new SelectListItem{ Text="Regional & Office – Marketing and customer visits / Inspection at vendor location", Value = "Regional & Office – Marketing and customer visits / Inspection at vendor location" },
                                                    new SelectListItem{ Text="Regional - Daily inspection at different location.", Value = "Regional - Daily inspection at different location." },
                                                    new SelectListItem{ Text="Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.", Value = "Site/fixed location Deputed at single vendor/customer location for inspection/QA activity." },
                                                    new SelectListItem{ Text="Office - Major work performed from office (Coodinators/Managers/PCH)", Value = "Office - Major work performed from office (Coodinators/Managers/PCH)" },
                                                    new SelectListItem{ Text="Marketing - Marketing On-Site/off-Site", Value = "Marketing - Marketing On-Site/off-Site" },
                                                    new SelectListItem{ Text="QA - Quality Assurance", Value = "QA - Quality Assurance" },
                                                    new SelectListItem{ Text="ASME/PED/Special assignments", Value = "ASME/PED/Special assignments" },
                                                },

                                                                     new { @class = "form-control", @id = "CA", @onchange = "SiteDisplay(this.value);" })
                                                        </div>
                                                    </div>

                                                 
                                                             
                                                                <div class="col-xs-12 col-sm-6" id="divSiteDetails" style="display:none;">
                                                                    <div class="form-group">

                                                                        <label>Customer/vendor name:</label>


                                                                        @*<input type="text" class="form-control" placeholder="Phone Here">*@
                                                                        @Html.TextBoxFor(model => model.SiteDetail, new { @placeholder = "Site Detail", @class = "form-control" })
                                                                        @Html.ValidationMessageFor(model => model.TotalyearofExprience, "", new { @class = "text-danger validation-msg" })
                                                                    </div>
                                                                </div>
                                                            </div>

                                                <div id="IdHideAddUser">



                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>
                                                    @*<label><u>Educational Qualification</u></label>*@
                                                    <div class="row">
                                                        <script>
                                                            $('.select2').select2();

                                                            $(function () {
                                                                $("#Uni").change(function () {
                                                                    GetUniversityName();
                                                                });
                                                            })

                                                            function GetBranchName(obj) {
                                                                var strdegree = $(obj).val();
                                                                var row = $(obj).closest("tr");
                                                                var objBranch = row.find('.CDBranch');

                                                                $.ajax({
                                                                    type: "POST",
                                                                    url: '@Url.Action("GetDegreeName", "Users")',
                                                                    dataType: 'json',
                                                                    Async: false,
                                                                    data: JSON.stringify({ "strDegree": strdegree }),
                                                                    enctype: "multipart/form-data",
                                                                    contentType: "application/json; charset=utf-8",

                                                                    success: function (res) {
                                                                        $(objBranch).empty();
                                                                        for (var i = 0; i < res.length; i++) {
                                                                            var opt = new Option(res[i].BranchName, res[i].DBrId);
                                                                            $(objBranch).append(opt);

                                                                        }


                                                                    }

                                                                });
                                                            }

                                                            function GetCourceName(obj) {
                                                                debugger;
                                                                var strCourse = $(obj).val();
                                                                var row = $(obj).closest("tr");
                                                                var objBranch = row.find('.CDBranch');

                                                                if (strCourse == 'Diploma') {
                                                                    var objdiploma = row.find('.CDiploma');
                                                                    var objdeg = row.find('.CDegree');
                                                                    var objPGD = row.find('.CPGD');
                                                                    var objPG = row.find('.CPG');
                                                                    $(objdeg).css('display', 'none')
                                                                    $(objdiploma).css('display', 'block')
                                                                    $(objPGD).css('display', 'none')
                                                                    $(objPG).css('display', 'none')
                                                                    return false;
                                                                }
                                                                else if (strCourse == 'PGD') {
                                                                    var objdiploma = row.find('.CDiploma');
                                                                    var objdeg = row.find('.CDegree');
                                                                    var objPGD = row.find('.CPGD');
                                                                    var objPG = row.find('.CPG');
                                                                    $(objdeg).css('display', 'none')
                                                                    $(objdiploma).css('display', 'none')
                                                                    $(objPGD).css('display', 'block')
                                                                    $(objPG).css('display', 'none')

                                                                    $(objPGD).prop('disabled', true);
                                                                    $(objPGD).css("background-color", "Lightgrey");
                                                                    $(objBranch).prop('disabled', true);
                                                                    $(objBranch).css("background-color", "Lightgrey");
                                                                    return false;
                                                                }
                                                                else if (strCourse == 'PG')
                                                                {
                                                                    var objdiploma = row.find('.CDiploma');
                                                                    var objdeg = row.find('.CDegree');
                                                                    var objPGD = row.find('.CPGD');
                                                                    var objPG = row.find('.CPG');
                                                                    $(objdeg).css('display', 'none')
                                                                    $(objdiploma).css('display', 'none')
                                                                    $(objPGD).css('display', 'none')
                                                                    $(objPG).css('display', 'block')
                                                                }
                                                                else {

                                                                    var objdiploma = row.find('.CDiploma');
                                                                    var objdeg = row.find('.CDegree');
                                                                    var objPGD = row.find('.CPGD');
                                                                    var objPG = row.find('.CPG');

                                                                    $(objdeg).css('display', 'block')
                                                                    $(objdiploma).css('display', 'none')
                                                                    $(objPGD).css('display', 'none')
                                                                    $(objPG).css('display', 'none')

                                                                    if (strCourse == 'S.S.C' || strCourse == 'H.S.C') {

                                                                        $(objdeg).prop('disabled', true);
                                                                        $(objdeg).css("background-color", "Lightgrey");

                                                                        $(objBranch).prop('disabled', true);
                                                                        $(objBranch).css("background-color", "Lightgrey");
                                                                    }
                                                                    else {

                                                                        $(objdeg).prop('disabled', false);
                                                                        $(objdeg).css("background-color", "white");
                                                                        $(objBranch).prop('disabled', false);
                                                                        $(objBranch).css("background-color", "white");
                                                                    }
                                                                    return false;


                                                                }




                                                            }

                                                        </script>
                                                    </div>

                                                    <div id="DomesticCurrency" style='align:center'>
                                                        <div class="form-page-title" style="width:110%;"> <label><u>Educational Qualification</u></label> </div>

                                                        <table id="DTestTable" cellspacing="0" cellpadding="5" border="1" style="width: 110%;font-family:Arial;font-size:14px;">
                                                            <tr style="background-color:lightgray;color:black">
                                                                <td width="10%" style="text-align: left">
                                                                    Course
                                                                </td>
                                                                <td width="20%" style="text-align: left">
                                                                    Degree
                                                                </td>
                                                                <td width="20%" style="text-align: left">
                                                                    Field of study
                                                                </td>
                                                                <td width="10%" style="text-align: left">
                                                                    Year of Passing
                                                                </td>
                                                                <td width="15%" style="text-align: left">
                                                                    Institution/University
                                                                </td>



                                                                <td width="10%" style="text-align: left">
                                                                    Last Year % / CGPA
                                                                </td>
                                                                <td width="10%" style="text-align: left">
                                                                    Aggregate % / CGPA
                                                                </td>
                                                                <td></td>

                                                            </tr>

                                                            @{
                                                                int v = 0;
                                                            }

                                                            @if (ViewBag.lstDOrderType != null)
                                                            {
                                                                if (ViewBag.lstDOrderType.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.Users>)
                                                                    {
                                                                        v = v + 1;
                                                                        <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                            <td>

                                                                                @Html.DropDownListFor(m => m.lstEducationQualification[j].Course, new List<SelectListItem>
                                                                        {
                                                                             new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                             new SelectListItem{ Text="S.S.C", Value = "S.S.C" , Selected = (item.Course == "S.S.C") ?true : false} ,
                                                                             new SelectListItem{ Text="H.S.C", Value = "H.S.C" , Selected = (item.Course == "H.S.C") ?true : false} ,
                                                                             new SelectListItem{ Text="Diploma", Value = "Diploma" , Selected = (item.Course == "Diploma") ?true : false} ,
                                                                             new SelectListItem{ Text="Graduate", Value = "Graduate" , Selected = (item.Course == "Graduate") ?true : false} ,
                                                                             new SelectListItem{ Text="PGD", Value = "PGD" , Selected = (item.Course == "PGD") ?true : false} ,
                                                                             new SelectListItem{ Text="PG", Value = "PG" , Selected = (item.Course == "PG") ?true : false} ,
                                                                        },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse", @Value = item.Course, @onchange = "return GetCourceName(this);" })
                                                                            </td>

                                                                            <td>
                                                                                @if (item.Course == "Diploma")
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                    {
                                                                                        new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                        new SelectListItem{ Text="Technical", Value = "Tech" , Selected = (item.Degree == "Tech") ?true : false} ,
                                                                                        new SelectListItem{ Text="Non Technical", Value = "NTech" , Selected = (item.Degree == "NTech") ?true : false} ,
                                                                                    },

                                                                                    new { @class = "form-control CDiploma", @id = "ddlDiploma", @Value = item.Degree, @onchange = "GetBranchName(this);", @display = "block" })

                                                                                }
                                                                                else if (item.Course == "PGD")
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    //new SelectListItem{ Text="Master of Engineering", Value = "MEng" , Selected = (item.Degree == "MEng") ?true : false} ,
                                                                                    //new SelectListItem{ Text="Master of Technology", Value = "MTech" , Selected = (item.Degree == "MTech") ?true : false} ,
                                                                                },

                                                                                new { @class = "form-control CPGD", @id = "ddlPGD", @Value = item.Degree, @onchange = "GetBranchName(this);", @display = "block" })

                                                                                }
                                                                                else if (item.Course == "PG")
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    new SelectListItem{ Text="Master of Engineering", Value = "ME" , Selected = (item.Degree == "ME") ?true : false} ,
                                                                                    new SelectListItem{ Text="MTech", Value = "MTech" , Selected = (item.Degree == "MTech") ?true : false} ,
                                                                                    new SelectListItem{ Text="MBA", Value = "MBA" , Selected = (item.Degree == "MBA") ?true : false} ,
                                                                                    
                                                                                },

                                                                                new { @class = "form-control CPG", @id = "ddlPG", @Value = item.Degree, @onchange = "GetBranchName(this);", @display = "block" })

                                                                                }
                                                                                else if (item.Course == "S.S.C" || item.Course == "H.S.C")
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "",Selected=true },

                                                                                },

                                                                                new { @class = "form-control CDegree", @id = "ddlDegree", @Value = item.Degree, @display = "block" })

                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                     {
                                                                                        new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                        new SelectListItem{ Text="Bachelor of Engineering", Value = "BEng" , Selected = (item.Degree == "BEng") ?true : false} ,
                                                                                        new SelectListItem{ Text="Bachelor of Technology", Value = "BTech" , Selected = (item.Degree == "BTech") ?true : false} ,
                                                                                        new SelectListItem{ Text="AMIE", Value = "AMIE" , Selected = (item.Degree == "AMIE") ?true : false} ,
                                                                                        new SelectListItem{ Text="Bachelor of Arts", Value = "BA" , Selected = (item.Degree == "BA") ?true : false} ,
                                                                                        new SelectListItem{ Text="Bachelor of Science", Value = "BSc" , Selected = (item.Degree == "BSc") ?true : false} ,
                                                                                        new SelectListItem{ Text="Bachelor of Commerce", Value = "BCom" , Selected = (item.Degree == "BCom") ?true : false} ,
                                                                                        new SelectListItem{ Text="BBA", Value = "BBA" ,  Selected = (item.Degree == "BBA") ?true : false} ,
                                                                                        new SelectListItem{ Text="BMS", Value = "BMS" , Selected = (item.Degree == "BMS") ?true : false} ,
                                                                                        new SelectListItem{ Text="BBS", Value = "BBS" , Selected = (item.Degree == "BBS") ?true : false} ,
                                                                                    },

                                                                                     new { @class = "form-control CDegree", @id = "ddlDegree", @Value = item.Degree, @onchange = "GetBranchName(this);", @display = "block" })
                                                                                }

                                                                            </td>

                                                                            <td>
                                                                                @if (item.Course != "S.S.C" && item.Course != "H.S.C")
                                                                                {
                                                                                    @Html.TextBoxFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CDBranch", @Value = item.MajorFieldOfStudy })

                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.TextBoxFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CDBranch", @Value = item.MajorFieldOfStudy, @readonly = "readonly" })
                                                                                }
                                                                                @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @*@Html.TextBoxFor(model => model.lstEducationQualification[j].YearOfPassing, new { @placeholder = "Year Of Passing", @class = "form-control CYearOfPassing", @Value = item.YearOfPassing })*@
                                                                                @*@Html.DropDownListFor(model => model.lstEducationQualification[j].YearOfPassing, ViewBag.YearOfPassing as IEnumerable<SelectListItem>, "--Select Year--", new { @class = "form-control form-control-custom CYearOfPassing",@Value = item.YearOfPassing , @id= "ddlYearPassing" +j })*@
                                                                                @Html.DropDownListFor(m => m.lstEducationQualification[j].YearOfPassing, new SelectList(@ViewBag.YearOfPassing, "Name", "Name", item.YearOfPassing), "--Select Year--", new { @id = "ddlYearPassing", @class = "form-control CYearOfPassing" })
                                                                                @Html.HiddenFor(m => m.YearOfPassing)

                                                                                @Html.ValidationMessageFor(model => model.lstEducationQualification[j].YearOfPassing, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstEducationQualification[j].UniversityName, new { @placeholder = "University", @class = "form-control CUniversity", @Value = item.UniversityName })
                                                                                @Html.ValidationMessageFor(model => model.lstEducationQualification[j].UniversityName, "", new { @class = "text-danger validation-msg" })
                                                                            </td>

                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstEducationQualification[j].LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA", @Value = item.LastYearCGPA, @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                                @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstEducationQualification[j].AggregateCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CAggregateCGPA", @Value = item.AggregateCGPA, @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                                @Html.ValidationMessageFor(model => model.lstEducationQualification[j].AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @if (v == 1)
                                                                                {
                                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }


                                                                            </td>



                                                                        </tr>

                                                                        j++;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                        <td>

                                                                            @Html.DropDownListFor(m => m.Course, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="S.S.C", Value = "S.S.C" },
                                                                     new SelectListItem{ Text="H.S.C", Value = "H.S.C" },
                                                                     new SelectListItem{ Text="Diploma", Value = "Diploma" },
                                                                     new SelectListItem{ Text="Graduate", Value = "Graduate" },
                                                                     new SelectListItem{ Text="PGD", Value = "PGD" },
                                                                     new SelectListItem{ Text="PG", Value = "PG" },


                                                           },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse", @onchange = "return GetCourceName(this);" })
                                                                        </td>

                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                        {
                                                                            new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                             new SelectListItem{ Text="Bachelor of Engineering", Value = "BEng" } ,
                                                                             new SelectListItem{ Text="Bachelor of Technology", Value = "BTech" } ,
                                                                             new SelectListItem{ Text="AMIE", Value = "AMIE" } ,
                                                                             new SelectListItem{ Text="Bachelor of Arts", Value = "BA" } ,
                                                                             new SelectListItem{ Text="Bachelor of Science", Value = "BSc" } ,
                                                                             new SelectListItem{ Text="Bachelor of Commerce", Value = "BCom" } ,
                                                                             new SelectListItem{ Text="BBA", Value = "BBA" } ,
                                                                             new SelectListItem{ Text="BMS", Value = "BMS" } ,
                                                                             new SelectListItem{ Text="BBS", Value = "BBS" } ,

                                                                        },
                                                                        new { @class = "form-control CDegree", @id = "ddlDegree", @onchange = "GetBranchName(this);", @style = "display:none;" })

                                                                            @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                             {
                                                                                new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                new SelectListItem{ Text="Technical", Value = "Tech" } ,
                                                                                new SelectListItem{ Text="Non Technical", Value = "NTech" } ,
                                                                            },

                                                                            new { @class = "form-control CDiploma", @id = "ddlDiploma", @onchange = "GetBranchName(this);", @style = "display:none;" })

                                                                            @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    //new SelectListItem{ Text="Master of Engineering", Value = "MEng" } ,
                                                                                    //new SelectListItem{ Text="Master of Technology", Value = "MTech" } ,
                                                                                },






                                                                                new { @class = "form-control CPGD", @id = "ddlPGD", @onchange = "GetBranchName(this);", @style = "display:none;" })
                                                                            @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    new SelectListItem{ Text="Master of Engineering", Value = "ME" } ,
                                                                                    new SelectListItem{ Text="MBA", Value = "MBA" } ,
                                                                                },






                                                                                new { @class = "form-control CPG", @id = "ddlPG", @onchange = "GetBranchName(this);", @style = "display:none;" })















                                                                        </td>
                                                                        <td>
                                                                            @*@Html.TextBoxFor(model => model.MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CMajorFieldOfStudy" })*@
                                                                            @Html.DropDownListFor(model => model.MajorFieldOfStudy, new SelectList("", ""), "---Select---", new { @id = "DBranch", @class = "form-control CDBranch" })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @*@Html.TextBoxFor(model => model.YearOfPassing, new { @placeholder = "Year Of Passing", @class = "form-control CYearOfPassing" })*@
                                                                            @*@Html.DropDownListFor(model => model.YearOfPassing, ViewBag.YearOfPassing as IEnumerable<SelectListItem>, "--Select Year--", new { @class = "form-control form-control-custom CYearOfPassing" })*@
                                                                            @Html.DropDownListFor(m => m.YearOfPassing, new SelectList(@ViewBag.YearOfPassing, "Name", "Name"), "--Select Year--", new { @id = "ddlYearPassing", @class = "form-control CYearOfPassing" })


                                                                            @Html.ValidationMessageFor(model => model.YearOfPassing, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.UniversityName, new { @placeholder = "University", @class = "form-control CUniversity" })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].UniversityName, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA", @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                            @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.AggregateCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CAggregateCGPA", @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                            @Html.ValidationMessageFor(model => model.AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @if (v == 1)
                                                                            {
                                                                                <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }


                                                                        </td>



                                                                    </tr>


                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trEduQualification" style="background-color:#f0f0f0">
                                                                    <td style="text-align:left">

                                                                        @Html.DropDownListFor(m => m.Course, new List<SelectListItem>
                                                                     {
                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="S.S.C", Value = "S.S.C" },
                                                                     new SelectListItem{ Text="H.S.C", Value = "H.S.C" },
                                                                     new SelectListItem{ Text="Diploma", Value = "Diploma" },
                                                                     new SelectListItem{ Text="Graduate", Value = "Graduate" },
                                                                     new SelectListItem{ Text="PGD", Value = "PGD" },
                                                                     new SelectListItem{ Text="PG", Value = "PG" },


                                                           },
                                                                            new { @class = "form-control CCourse", @id = "ddlCourse", @onchange = "return GetCourceName(this);" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                     {
                                                                            new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                             new SelectListItem{ Text="Bachelor of Engineering", Value = "BEng" } ,
                                                                             new SelectListItem{ Text="Bachelor of Technology", Value = "BTech" } ,
                                                                             new SelectListItem{ Text="AMIE", Value = "AMIE" } ,
                                                                             new SelectListItem{ Text="Bachelor of Arts", Value = "BA" } ,
                                                                             new SelectListItem{ Text="Bachelor of Science", Value = "BSc" } ,
                                                                             new SelectListItem{ Text="Bachelor of Commerce", Value = "BCom" } ,
                                                                             new SelectListItem{ Text="BBA", Value = "BBA" } ,
                                                                             new SelectListItem{ Text="BMS", Value = "BMS" } ,
                                                                             new SelectListItem{ Text="BBS", Value = "BBS" } ,


                                                           },
                                                             new { @class = "form-control CDegree", @id = "ddlDegree", @onchange = "GetBranchName(this);", @style = "display:none;" })

                                                                        @Html.DropDownListFor(m => m.Degree, new List<SelectListItem>
                                                                             {
                                                                                new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                new SelectListItem{ Text="Technical", Value = "Tech" } ,
                                                                                new SelectListItem{ Text="Non Technical", Value = "NTech" } ,
                                                                            },

                                                                            new { @class = "form-control CDiploma", @id = "ddlDiploma", @onchange = "GetBranchName(this);", @style = "display:none;" })

                                                                        @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    //new SelectListItem{ Text="Master of Engineering", Value = "MEng" } ,
                                                                                    //new SelectListItem{ Text="Master of Technology", Value = "MTech" } ,
                                                                                },

                                                                                new { @class = "form-control CPGD", @id = "ddlPGD", @onchange = "GetBranchName(this);", @style = "display:none;" })
                                                                      
                                                                          @Html.DropDownListFor(m => m.lstEducationQualification[j].Degree, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                    new SelectListItem{ Text="Master of Engineering", Value = "ME" } ,
                                                                                    new SelectListItem{ Text="MTech", Value = "MTech" } ,
                                                                                    new SelectListItem{ Text="MBA", Value = "MBA" } ,
                                                                                },

                                                                                new { @class = "form-control CPG", @id = "ddlPG", @onchange = "GetBranchName(this);", @style = "display:none;" })




                                                                    </td>

                                                                    <td style="text-align:left">
                                                                        @*@Html.TextBoxFor(model => model.MajorFieldOfStudy, new { @placeholder = "MajorFieldOfStudy", @class = "form-control CMajorFieldOfStudy" })*@

                                                                        @Html.DropDownListFor(model => model.MajorFieldOfStudy, new SelectList("", ""), "---Select---", new { @id = "DBranch", @class = "form-control CDBranch" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].MajorFieldOfStudy, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @*@Html.TextBoxFor(model => model.YearOfPassing, new { @placeholder = "Year Of Passing", @class = "form-control CYearOfPassing" })*@
                                                                        @*@Html.DropDownListFor(model => model.YearOfPassing, ViewBag.YearOfPassing as IEnumerable<SelectListItem>, "--Select Year--", new { @class = "form-control form-control-custom CYearOfPassing" })*@

                                                                        @Html.DropDownListFor(m => m.YearOfPassing, new SelectList(@ViewBag.YearOfPassing, "Name", "Name"), "--Select Year--", new { @id = "ddlYearPassing", @class = "form-control CYearOfPassing" })
                                                                        @Html.ValidationMessageFor(model => model.YearOfPassing, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.UniversityName, new { @placeholder = "University", @class = "form-control CUniversity" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].UniversityName, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.LastYearCGPA, new { @placeholder = "LastYearCGPA", @class = "form-control CLastYearCGPA", @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].LastYearCGPA, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.AggregateCGPA, new { @placeholder = "AggregateCGPA", @class = "form-control CAggregateCGPA", @onkeypress = "return isNumberKey(event);", @onkeyup = "return AcceptSelNumber(this);" })
                                                                        @Html.ValidationMessageFor(model => model.lstEducationQualification[j].AggregateCGPA, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @*@if (v == 1)
                                {*@
                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>

                                                                    </td>



                                                                </tr>
                                                            }
                                                        </table><br />
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>


                                                    @*<label><u>Proffesional Certificates</u></label>*@


                                                    <div id="DivProffCert" style='align:center'>
                                                        <div class="form-page-title" style="width:110%;"> <label><u>Proffesional Qualification</u></label> </div>

                                                        <table id="DTestTablePFC" cellspacing="0" cellpadding="5" border="1" style="width: 110%;font-family:Arial;font-size:14px;">
                                                            <tr style="background-color:lightgray;color:black">
                                                                <td width="25%" style="text-align: left">
                                                                    Certification
                                                                </td>
                                                                <td width="25%" style="text-align: left">
                                                                    Certification No.
                                                                </td>
                                                                <td width="20%" style="text-align: left">
                                                                    Issue Date
                                                                </td>
                                                                <td width="20%" style="text-align: left">
                                                                    Valid Till
                                                                </td>


                                                                <td></td>

                                                            </tr>

                                                            @{
                                                                int vp = 0;
                                                            }

                                                            @if (ViewBag.lstProfCerts != null)
                                                            {
                                                                if (ViewBag.lstProfCerts.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstProfCerts as IEnumerable<TuvVision.Models.Users>)
                                                                    {
                                                                        vp = vp + 1;
                                                                        <tr class="trProfCertificates" style="background-color:#f0f0f0">
                                                                            <td style="text-align:left">
                                                                                @Html.TextBoxFor(model => model.lstProfCertificates[k].CertName, new { @placeholder = "Cert Name", @class = "form-control form-control-custom CCertName", @Value = item.CertName })
                                                                                @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertName, "", new { @class = "text-danger validation-msg" })
                                                                                <input type="hidden" id="HfCertName" name="HfCertName" />
                                                                                @Html.HiddenFor(model => model.lstProfCertificates[k].CertName)
                                                                            </td>

                                                                            <td style="text-align:left">
                                                                                @Html.TextBoxFor(model => model.lstProfCertificates[k].CertNo, new { @placeholder = "Cert No", @class = "form-control CCertNo", @Value = item.CertNo })
                                                                                @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertNo, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td style="text-align:left">
                                                                                @Html.TextBoxFor(model => model.lstProfCertificates[k].CertIssueDate, new { @placeholder = "Certificate Issue Date", @class = "form-control CCertIssueDate", @Value = item.CertIssueDate })
                                                                                @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertIssueDate, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td style="text-align:left">
                                                                                @Html.TextBoxFor(model => model.lstProfCertificates[k].CertValidTill, new { @placeholder = "Certificate Valid Till", @class = "form-control CCertValidTill", @Value = item.CertValidTill })
                                                                                @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertValidTill, "", new { @class = "text-danger validation-msg" })
                                                                            </td>

                                                                            <td style="text-align:left">
                                                                                @if (vp == 1)
                                                                                {
                                                                                    <button type="button" id="btnAddPFC" class="btn btn-xs btn-primary classAddPFC">Add</button>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <button type="button" id="btnDeletePFC" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }
                                                                            </td>

                                                                        </tr>

                                                                        k++;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr class="trProfCertificates" style="background-color:#f0f0f0">
                                                                        <td style="text-align:left">
                                                                            @Html.TextBoxFor(model => model.CertName, new { @placeholder = "Certificate Name", @class = "form-control form-control-custom CCertName" })
                                                                            @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertName, "", new { @class = "text-danger validation-msg" })
                                                                            <input type="hidden" id="HfCertName" name="HfCertName" />
                                                                            @Html.HiddenFor(model => model.CertName)
                                                                        </td>
                                                                        <td style="text-align:left">
                                                                            @Html.TextBoxFor(model => model.CertNo, new { @placeholder = "Certificate No", @class = "form-control CCertNo" })
                                                                            @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertNo, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td style="text-align:left">
                                                                            @Html.TextBoxFor(model => model.CertIssueDate, new { @placeholder = "Certificate Issue Date", @class = "form-control CCertIssueDate" })
                                                                            @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertIssueDate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td style="text-align:left">
                                                                            @Html.TextBoxFor(model => model.CertValidTill, new { @placeholder = "Certificate Valid Till", @class = "form-control CCertValidTill" })
                                                                            @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertValidTill, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td style="text-align:left">
                                                                            @if (vp == 1)
                                                                            {
                                                                                <button type="button" id="btnAddPFC" class="btn btn-xs btn-primary classAddPFC">Add</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" id="btnDeletePFC" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trProfCertificates" style="background-color:#f0f0f0">

                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.CertName, new { @placeholder = "Certificate Name", @class = "form-control form-control-custom CCertName" })
                                                                        @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertName, "", new { @class = "text-danger validation-msg" })

                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.CertNo, new { @placeholder = "Certificate No", @class = "form-control CCertNo" })
                                                                        @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertNo, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.CertIssueDate, new { @placeholder = "Certificate Issue Date", @class = "form-control CCertIssueDate" })
                                                                        @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertIssueDate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        @Html.TextBoxFor(model => model.CertValidTill, new { @placeholder = "Certificate Valid Till", @class = "form-control CCertValidTill" })
                                                                        @Html.ValidationMessageFor(model => model.lstProfCertificates[k].CertValidTill, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td style="text-align:left">
                                                                        <button type="button" id="btnAddPFC" class="btn btn-xs btn-primary classAddPFC">Add</button>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table><br />
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <hr class="custom-hr1">
                                                        </div>
                                                    </div>



                                                    <label><u>Eye Test Report</u></label>
                                                    <div class="row">



                                                        <div class="col-xs-4">

                                                            <label>Year</label>
                                                            @*@Html.DropDownListFor(m => m.Year, new List<SelectListItem>
                     {
                    new SelectListItem{ Text="---SELECT---", Value = "" },
                     new SelectListItem{ Text="2022-2023", Value = "2022-2023" },
                     new SelectListItem{ Text="2023-2024", Value = "2023-2024" },
                     new SelectListItem{ Text="2024-2025", Value = "2024-2025" },
                     new SelectListItem{ Text="2025-2026", Value = "2025-2026" },
                       },

                     new { @class = "form-control", @id = "PT", @onchange = "onchangeddlStatus(this.value);" })*@


                                                            @if (ViewBag.Year != null)
                                                            {
                                                                @Html.DropDownListFor(m => m.Year, ViewBag.Year as IEnumerable<SelectListItem>, "--Select Year--", new { @class = "form-control", @id = "PT", @onchange = "onchangeddlStatus(this.value);" })
                                                                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>

                                                        <div class="col-xs-12 col-sm-6">
                                                            <label></label>
                                                            <input type="file" class="filepond" name="DocUpload1" id="DocUpload1" />
                                                            <input hidden="hidden" id="DocUpload1" name="DocUpload1" class="hidden" />

                                                        </div>

                                                        <div class="col-xs-12 col-sm-2">
                                                            <div class="form-group">
                                                                @*<button type="button" class="btn btn-default insert-form-btn" id="btnAddDoc" title="Submit" style="margin-top:28px;"><i class="fa fa-plus-circle"></i>Add Document</button>*@
                                                                @*<button type="button" class="btn btn-default insert-form-btn" onclick="fncModalSave();" title="Add New Contact" style="margin-top:28px;" id="btnAddEyeTestDoc"><i class="fa fa-plus-circle"></i> Add Document</button>*@
                                                                <button type="button" class="btn btn-default insert-form-btn" title="Add New Contact" style="margin-top:28px;" id="btnAddEyeTestDoc"><i class="fa fa-plus-circle"></i> Add Document</button>
                                                            </div>
                                                        </div>


                                                        @*@if (ViewBag.DocTypeList != null)
                {
                    @Html.DropDownListFor(m => m.DocType, ViewBag.DocTypeList as IEnumerable<SelectListItem>, "--Select Attachment Type--", new { @class = "form-control form-control-custom", @id = "DOCType", })
                    @Html.ValidationMessageFor(model => model.DocType, "", new { @class = "text-danger validation-msg" })
                }*@





                                                        <div class="col-xs-12" id="divDocuments1">


                                                            @if (Model.EyeTestReport != null)
                                                            {
                                                                <br />
                                                                <table width="100%" align="left">
                                                                    <tr>
                                                                        <td>
                                                                            <h2 class="dynamic-page-title dynamic-page-title-2"><i class="fa fa-address-book"></i>Eye Test Report</h2>
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td align="left">
                                                                            <table class="display dataTable no-footer" style="width:100%" id="DocumentTable">
                                                                                <tr style="background-color:lightgray">
                                                                                    <td>Document Type</td>
                                                                                    <td>File Name</td>
                                                                                    <td>Year</td>
                                                                                    <td>&nbsp;</td>
                                                                                </tr>
                                                                                @foreach (var item in ViewData["DocAttachmentsEyeTest"] as IEnumerable<TuvVision.Models.Users>)
                                                                                {
                                                                                    string[] arrFile = item.FileName.Split(',');
                                                                                    string[] arrValue = null;
                                                                                    <tr style="background-color:#f0f0f0">
                                                                                        <td width="35%">@item.AttType</td>
                                                                                        <td>
                                                                                            @for (int cnt = 0; cnt < arrFile.Length; cnt++)
                                                                                            {

                                                                                                arrValue = arrFile[cnt].ToString().Split('#');





                                                                                                strFileName = arrValue[0].ToString();
                                                                                                strPKId = arrValue[1].ToString();
                                                                                                <a class="title" href="@Url.Action("DownloadFormat", "Users", new {  @d= strPKId})">@strFileName</a>



                                                                                            }
                                                                                        </td>
                                                                                        <td>@item.Year</td>
                                                                                        <td width="8%">
                                                                                            <a href="javascript:void(0);" data-id="@strPKId" class="deleteItemFormat">X</a>
                                                                                        </td>

                                                                                    </tr>
                                                                                }

                                                                            </table>
                                                                        </td>

                                                                    </tr>
                                                                </table>







                                                            }
                                                        </div>

                                                        <br />
                                                    </div>




                                                    <br /><br />
                                                    <div class="row">
                                                        @*<div class="col-xs-12">*@
                                                        <div class="col-xs-4">

                                                            <label>Upload Documents</label>
                                                            @if (ViewBag.DocTypeList != null)
                                                            {
                                                                @Html.DropDownListFor(m => m.DocType, ViewBag.DocTypeList as IEnumerable<SelectListItem>, "--Select Attachment Type--", new { @class = "form-control form-control-custom", @id = "DOCType", })
                                                                @Html.ValidationMessageFor(model => model.DocType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                        <div class="col-xs-6" style="margin-top:20px">
                                                            <input type="file" class="filepond" name="DocUpload" id="DocUpload" multiple />
                                                            <input hidden="hidden" id="DocUpload" name="DocUpload" class="hidden" />
                                                        </div>
                                                        @*<div class="form-group" style="margin-top:20px">

                </div>*@
                                                        @*</div>*@

                                                        @*<div class="row">*@
                                                        <div class="col-xs-2">

                                                            <button type="button" class="btn btn-default insert-form-btn" id="btnAddDoc" title="Submit" style="margin-top:28px;"><i class="fa fa-plus-circle"></i>Add Document</button>
                                                        </div>
                                                        @*</div>*@


                                                        <div class="col-xs-12" id="divDocuments">


                                                            @if (Model.UserAttachment != null)
                                                            {
                                                                <br />
                                                                <table width="100%" align="left">
                                                                    <tr>
                                                                        <td>
                                                                            <h2 class="dynamic-page-title dynamic-page-title-2"><i class="fa fa-address-book"></i>List of Documents</h2>
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td align="left">
                                                                            <table class="display dataTable no-footer" style="width:100%" id="DocumentTable">
                                                                                <tr style="background-color:lightgray">
                                                                                    <td>Document Type</td>
                                                                                    <td>File Name</td>
                                                                                    <td>&nbsp;</td>
                                                                                </tr>
                                                                                @foreach (var item in ViewData["DocAttachments"] as IEnumerable<TuvVision.Models.Users>)
                                                                                {
                                                                                    string[] arrFile = item.FileName.Split(',');
                                                                                    string[] arrValue = null;
                                                                                    <tr style="background-color:#f0f0f0">
                                                                                        <td width="35%">@item.AttType</td>
                                                                                        <td>
                                                                                            @for (int cnt = 0; cnt < arrFile.Length; cnt++)
                                                                                            {

                                                                                                arrValue = arrFile[cnt].ToString().Split('#');





                                                                                                strFileName = arrValue[0].ToString();
                                                                                                strPKId = arrValue[1].ToString();
                                                                                                <a class="title" href="@Url.Action("DownloadFormat", "Users", new {  @d= strPKId})">@strFileName</a>



                                                                                            }
                                                                                        </td>
                                                                                        <td width="8%">
                                                                                            <a href="javascript:void(0);" data-id="@strPKId" class="deleteItemFormat">X</a>
                                                                                        </td>

                                                                                    </tr>
                                                                                }

                                                                            </table>
                                                                        </td>

                                                                    </tr>
                                                                </table>







                                                            }
                                                        </div>
                                                    </div>
                                                </div>



                                                            @Html.HiddenFor(m => m.Signature)
                                                            @Html.HiddenFor(m => m.FilePath)
                                                            <!--Button Controls-->
                            <br />
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            @if (Model.LoginUserRoleId == 36 || Model.LoginUserRoleId == 1 || Model.LoginUserRoleId == 30 || Model.LoginUserRoleId == 54 || Model.LoginUserRoleId == 42)
                                                            {
                                                                if (Model.PK_UserID != Session["UserID"].ToString())
                                                                {
                                                                    if (Model.isVerified == true)
                                                                    {
                                                                        <div class="col-xs-12 col-sm-6">
                                                                            <div class="form-group">
                                                                                @Html.CheckBoxFor(model => model.isVerified, new { @onclick = "return false;" })
                                                                                <label for="InActive" style="color:black;">Users Personal Details Verified</label>

                                                                            </div>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="col-xs-12 col-sm-6">
                                                                            <div class="form-group">
                                                                                @Html.CheckBoxFor(model => model.isVerified)
                                                                                <label for="InActive" style="color:black;">Users Personal Details Verified</label>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <div class="col-xs-12 col-sm-6">
                                                                        <div class="form-group">
                                                                            @Html.CheckBoxFor(model => model.isVerified, new { @onclick = "return false;" })
                                                                            <label for="InActive" style="color:black;">Users Personal Details Verified</label>

                                                                        </div>
                                                                    </div>
                                                                }

                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-12 col-sm-6">
                                                                    <div class="form-group">
                                                                        @Html.CheckBoxFor(model => model.isVerified, new { @onclick = "return false;" })
                                                                        <label for="InActive" style="color:black;">Users Personal Details Verified</label>

                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>

                                                            <div class="row">
                                                                <div class="col-xs-12 text-center">
                                                                    <div class="form-group">

                                                                        @if (Model != null)
                                                                        {
                                                                            if (Model.PK_UserID == null)
                                                                            {

                                                                                <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Insert User</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Update User</button>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <button type="button" class="btn btn-default insert-form-btn" id="btnUserSave1" title="Submit"><i class="fa fa-plus-circle"></i> Insert User</button>
                                                                        }
                                                                    </div>
                                                                </div>

                                                            </div>


                                                            @*</div>*@
                                                            <!--Button Controls-->
</form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.col -->

                    </div><!-- /.row -->
                </div><!-- /.data table col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
        <!--End of header-->
    </div>
    <!--End of main content 3-->
                                                            }
@********************************************************************************Script Started Here************************************************@
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />

<script>
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#Auditee').multiselect({
            includeSelectAllOption: true
        });

    });

    $(function () {
        $('#BrAuditee').multiselect({
            includeSelectAllOption: true
        });

    });

    $(function () {
        $('#LangAuditee').multiselect({
            includeSelectAllOption: true
        });




    });
</script>

<script>
    $("#FileUpload").change(function () {
        debugger;
        var Pk_Id = null;
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('FileUpload');
        //Iterating through each files selected in fileInput
        for (i = 0; i < fileInput.files.length; i++) {
            //Appending each file to FormData object
            formdata.append(fileInput.files[i].name, fileInput.files[i]);
        }
        var fileExtension = ['jpeg', 'jpg', 'gif', 'png'];
        if ($.inArray($("#FileUpload").val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only formats are allowed : " + fileExtension.join(', '));
        }

        //Creating an XMLHttpRequest and sending
        var xhr = new XMLHttpRequest();
        var link = '@Url.Action("TemporaryFilePathUserSignature", "Users")';
        xhr.open('POST', link, 'true');
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                debugger;
                var data = xhr.responseText;
                data = data.replace(/"/g, "");
                $("#FilePath").val(data);
            }
        }
    })

</script>

<script>
    $("#UserName").change(function () {
        debugger;
        var ExistsUserName = $("#UserName").val();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CheckingUserNameExist", "Users")",
            data: { ExistingUserName: ExistsUserName },
            dataType: "json",
            cache: false,
            success: function (response) {
                if (response == "Success") {
                    alert("User Already Exists in System !! Please try another User Name!!!");
                    $("#UserName").val('');
                    
                }               
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        Reset()


        function Reset() {
            $("#btnReset").click(function myfunction() {

                location.reload();
            });
        }
    });
</script>



<script>
    $("#btnUserSave1").on('click', function (event) {


        debugger;
        var a = "1";
        var b = "1";
        var status = false;
        // var varGender = $("input[name='Gender']:checked").val();
        /// var varIsActive = $("input[name='IsActive']:checked").val();
        var varRoleId = $("#LoginUserRoleId").val();
        var PK_UserID = $("#PK_UserID").val();
        var isVerified = false;
        var varCurrentAssignment = $("#CA option:selected").val();

        if (varRoleId == '36')
        {
            var FirstName = $("#FirstName").val();
            var MiddleName = $("#MiddleName").val();
            var LastName = $("#LastName").val();
            var UserName = $("#UserName").val();
            var DateOfJoining = $("#DateOfJoining").val();
            var Branch = $("#BrAuditee option:selected").val();
            var CostCenter = $("#Pk_CC_Id option:selected").val();
            var EmployementCategory = $("#EC option:selected").val();
            var EmployeeGradeId = $("#EGI option:selected").val();
            var EmployeeCode = $("#EmployeeCode").val();
            var SAPEmployeeCode = $("#SAPEmployeeCode").val();
            var SAP_VendorCode = $("#SAP_VendorCode").val();
            var ReportingOne = $("#R1 option:selected").val();
            var ReportingTwo = $("#R2 option:selected").val();
            var OPE = $("#OPE option:selected").val();
            var Designation = $("#Designation").val();
            var TuvEmailId = $("#TuvEmailId").val();
            var UserId = $("#PK_UserID").val();
            var Role = $("#ddlUserName option:selected").val();
            var Portfolio = $("#Auditee option:selected").val();
            var status = $("#IsActive option:selected").val();
            var IsLocked = $("#IsLocked option:selected").val();
            var OrgChangeDt = $("#OrgChangeDate").val();
            var ReasonForUpd = $("#RFU").val();


            if (FirstName == "" || FirstName == null) {
                alert("Please Enter First Name !!!");
                $("#FirstName").focus()
                return false;
            }
            //if (MiddleName == "" || MiddleName == null) {
            //    alert("Please Enter Middle Name !!!");
            //    $("#MiddleName").focus()
            //    return false;
            //}
            if (LastName == "" || LastName == null) {
                alert("Please Enter Last Name  !!!");
                $("#LastName").focus()
                return false;
            }
            if (UserName == "" || UserName == null) {
                alert("Please Enter User Name !!!");
                $("#UserName").focus()
                return false;
            }
            if (DateOfJoining == "" || DateOfJoining == null) {
                alert("Please Enter Date Of Joining !!!");
                $("#DateOfJoining").focus()
                return false;
            }
            if (Branch == "" || Branch == null) {
                alert("Please Enter Branch !!!");
                $("#BrAuditee").focus()
                return false;
            }
            if (CostCenter == "" || CostCenter == null) {
                alert("Please Enter Cost Center !!!");
                $("#Pk_CC_Id").focus()
                return false;
            }

            //if (EmployementCategory == "" || EmployementCategory == null) {
            //    alert("Please Enter Employement Category !!!");
            //    $("#EC").focus()
            //    return false;
            //}


            if (EmployeeGradeId == "" || EmployeeGradeId == null) {
                alert("Please Enter Employee Grade !!!");
                $("#EGI").focus()
                return false;
            }

            //if (EmployeeCode == "" || EmployeeCode == null) {
            //    alert("Please Enter Employee Code!!!");
            //    $("#EmployeeCode").focus()
            //    return false;
            //}
            //if (SAPEmployeeCode == "" || SAPEmployeeCode == null) {
            //    alert("Please Enter SAP Employee Code!!!");
            //    $("#SAPEmployeeCode").focus()
            //    return false;
            //}

            //if (SAP_VendorCode == "" || SAP_VendorCode == null) {
            //    alert("Please Enter SAP Vendor Code!!!");
            //    $("#SAP_VendorCode").focus()
            //    return false;
            //}
            if (ReportingOne == "" || ReportingOne == null) {
                alert("Please Enter Reporting One!!!");
                $("#ReportingOne").focus()
                return false;
            }
            if (ReportingOne == "" || ReportingOne == null) {
                alert("Please Enter Reporting One!!!");
                $("#R1").focus()
                return false;
            }
            if (ReportingTwo == "" || ReportingTwo == null) {
                alert("Please Enter Reporting Two!!!");
                $("#R2").focus()
                return false;
            }
            if (OPE == "" || OPE == null) {
                alert("Please Enter OPE!!!");
                $("#OPE").focus()
                return false;
            }
            if (Designation == "" || Designation == null) {
                alert("Please Enter Designation!!!");
                $("#Designation").focus()
                return false;
            }
            if (TuvEmailId == "" || TuvEmailId == null) {
                alert("Please Enter Tuv Email Id!!!");
                $("#TuvEmailId").focus()
                return false;
            }
            //if (UserId == "" || UserId == null) {
            //    alert("Please Enter User Id!!!");
            //    $("#PK_UserID").focus()
            //    return false;
            //}
            if (Role == "" || Role == null) {
                alert("Please Enter Role!!!");
                $("#ddlUserName").focus()
                return false;
            }
            if (Portfolio == "" || Portfolio == null) {
                alert("Please Enter Portfolio!!!");
                $("#Auditee").focus()
                return false;
            }
            if (status == "" || status == null) {
                alert("Please Enter status!!!");
                $("#IsActive").focus()
                return false;
            }
            if (IsLocked == "" || IsLocked == null) {
                alert("Please Enter IsLocked!!!");
                $("#IsLocked").focus()
                return false;
            }
            if (OrgChangeDt != "" && OrgChangeDt != null) {
                if (ReasonForUpd == "" || ReasonForUpd == null) {
                    alert("Please enter reason for Update!!!");
                    $("#RFU").focus()
                    return false;
                }

            }
            if (ReasonForUpd != "" && ReasonForUpd != null) {
                if (OrgChangeDt == "" || OrgChangeDt == null) {
                    alert("Please enter Organisational Change Date!!!");
                    $("#OrgChangeDate").focus();
                    return false;
                }
            }

            if ($('#isVerified').prop('checked')) {
                isVerified = true;
            }
            else {
                isVerified = false;
            }

           

        }
        else if (varRoleId == '1' || varRoleId == '42' || varRoleId == '54' || varRoleId == '30')
        {



            if ($('#isVerified').prop('checked')) {
                isVerified = true;
            }
            else {
                isVerified = false;
            }

            if (PK_UserID != '@Session["UserID"].ToString()') {
                if (isVerified == false) {
                    alert("Kindly verify the Personal details of the User !!!");
                    $("#isVerified").focus();
                    return false;

                }
            }



            var DOB = $("#DOB").val();
            var PanNo = $("#PanNo").val();
            var EmailID = $("#EmailID").val();
            var MobileNo = $("#MobileNo").val();
            var EmergencyMobile_No = $("#EmergencyMobile_No").val();

            var Address1 = $("#Address1").val();
            var Address2 = $("#Address2").val();
            var ZipCode = $("#ZipCode").val();
            var PermanantPin = $("#PermanantPin").val();

            if (Address1 == "" || Address1 == null) {
                alert("Please Enter Residing Address !!!");
                $("#Address1").focus()
                return false;
            }
            if (Address2 == "" || Address2 == null) {
                alert("Please Enter permanent Address !!!");
                $("#Address2").focus()
                return false;
            }
            if (ZipCode == "" || ZipCode == null) {
                alert("Please Enter Residing Address PIN code !!!");
                $("#ZipCode").focus()
                return false;
            }
            if (PermanantPin == "" || PermanantPin == null) {
                alert("Please Enter Permanent address PIN code !!!");
                $("#ZipCode").focus()
                return false;
            }


            var Gender = $("#Gender").val();
            var TotalExpYear = $("#TYE").val();
            var TotalExpMonths = $("#TYEM").val();

            if (DOB == "" || DOB == null) {
                alert("Please Enter DOB !!!");
                $("#DOB").focus()
                return false;
            }
            if (PanNo == "" || PanNo == null) {
                alert("Please Enter Pan No !!!");
                $("#PanNo").focus()
                return false;
            }
            if (EmailID == "" || EmailID == null) {
                alert("Please Enter Email ID !!!");
                $("#EmailID").focus()
                return false;
            }
            if (MobileNo == "" || MobileNo == null) {
                alert("Please Enter MobileNo !!!");
                $("#MobileNo").focus()
                return false;
            }
            if (EmergencyMobile_No == "" || EmergencyMobile_No == null) {
                alert("Please Enter Emergency Mobile No !!!");
                $("#EmergencyMobile_No").focus()
                return false;
            }
            if (Gender == "" || Gender == null) {
                alert("Please Enter Gender !!!");
                $("#Gender").focus()
                return false;
            }
            if (TotalExpYear == "" || TotalExpYear == null) {
                alert("Please Enter Experience in Years and Months before TUVI Joining!!!");
                $("#TYE").focus()
                return false;
            }
            if (TotalExpMonths == "" || TotalExpMonths == null) {
                //alert("Please Enter Total Exp Months !!!");
                alert("Please Enter Experience in Years and Months before TUVI Joining!!!");
                $("#TYEM").focus()
                return false;
            }
            if (varCurrentAssignment == "" || varCurrentAssignment == null) {
                alert("Please Enter Current Assignment !!!");
                $("#CA").focus()
                return false;
            }

            var ddlvalue = $("#CA option:selected").val();
            var varCustName = $("#SiteDetail").val();
            if (ddlvalue == 'Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.') {
                if (varCustName == "" || varCustName == null) {
                    alert("Please Enter Customer/vendor name !!!");
                    $("#SiteDetail").focus()
                    return false;
                }
                else {

                }
            }
            else {

            }

        }
        else {

            //var IsLocked = $("#IsLocked option:selected").val();
            var DOB = $("#DOB").val();
            var PanNo = $("#PanNo").val();
            var EmailID = $("#EmailID").val();
            var MobileNo = $("#MobileNo").val();
            var EmergencyMobile_No = $("#EmergencyMobile_No").val();

            var Address1 = $("#Address1").val();
            var Address2 = $("#Address2").val();
            var ZipCode = $("#ZipCode").val();
            var PermanantPin = $("#PermanantPin").val();

            if (Address1 == "" || Address1 == null) {
                alert("Please Enter Residing Address !!!");
                $("#Address1").focus()
                return false;
            }
            if (Address2 == "" || Address2 == null) {
                alert("Please Enter permanent Address !!!");
                $("#Address2").focus()
                return false;
            }
            if (ZipCode == "" || ZipCode == null) {
                alert("Please Enter Residing Address PIN code !!!");
                $("#ZipCode").focus()
                return false;
            }
            if (PermanantPin == "" || PermanantPin == null) {
                alert("Please Enter Permanent address PIN code !!!");
                $("#ZipCode").focus()
                return false;
            }
            if (varCurrentAssignment == "" || varCurrentAssignment == null) {
                alert("Please Enter Current Assignment !!!");
                $("#CA").focus()
                return false;
            }


            var Gender = $("#Gender").val();
            var TotalExpYear = $("#TYE").val();
            var TotalExpMonths = $("#TYEM").val();

            if (DOB == "" || DOB == null) {
                alert("Please Enter DOB !!!");
                $("#DOB").focus()
                return false;
            }
            if (PanNo == "" || PanNo == null) {
                alert("Please Enter Pan No !!!");
                $("#PanNo").focus()
                return false;
            }
            if (EmailID == "" || EmailID == null) {
                alert("Please Enter Email ID !!!");
                $("#EmailID").focus()
                return false;
            }
            if (MobileNo == "" || MobileNo == null) {
                alert("Please Enter MobileNo !!!");
                $("#MobileNo").focus()
                return false;
            }
            if (EmergencyMobile_No == "" || EmergencyMobile_No == null) {
                alert("Please Enter Emergency Mobile No !!!");
                $("#EmergencyMobile_No").focus()
                return false;
            }
            if (Gender == "" || Gender == null) {
                alert("Please Enter Gender !!!");
                $("#Gender").focus()
                return false;
            }
            if (TotalExpYear == "" || TotalExpYear == null) {
                alert("Please Enter Total Exp Year !!!");
                $("#TYE").focus()
                return false;
            }
            if (TotalExpMonths == "" || TotalExpMonths == null) {
                alert("Please Enter Total Exp Months !!!");
                $("#TYEM").focus()
                return false;
            }

            var ddlvalue = $("#CA option:selected").val();
            var varCustName = $("#SiteDetail").val();
            if (ddlvalue == 'Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.') {
                if(varCustName=="" || varCustName==null)
                {
                    alert("Please Enter Customer/vendor name !!!");
                    $("#SiteDetail").focus()
                    return false;
                }
                else
                {

                }
            }
            else {

            }

            if ($("#Marital_Status option:selected").val() == "" || $("#Marital_Status option:selected").val() == null) {
                alert("Please Select Marital_Status!!!");
                $("#Marital_Status").focus()
                return false;
            }
            if ($("#LangAuditee option:selected").val() == "" || $("#LangAuditee option:selected").val() == null) {
                alert("Please Select Language Known!!!");
                $("#LangAuditee").focus()
                return false;
            }
            if ($("#BG option:selected").val() == "" || $("#BG option:selected").val() == null) {
                alert("Please Select Blood Group!!!");
                $("#BG").focus()
                return false;
            }
            if ($("#ShirtSize option:selected").val() == "" || $("#ShirtSize option:selected").val() == null) {
                alert("Please Select Shirt Size!!!");
                $("#ShirtSize").focus()
                return false;
            }
            if ($("#ShoesSize option:selected").val() == "" || $("#ShoesSize option:selected").val() == null) {
                alert("Please Select Shoes Size!!!");
                $("#ShoesSize").focus()
                return false;
            }

            




        }








        var varIsActive = $("#IsActive option:selected").val();
        var varGender = $("#Gender option:selected").val();

        if (varIsActive == "1") {
            status = true;
        }
        var brAuditee = document.getElementById("BrAuditee");




        var DArray = [];

        $('.trEduQualification').each(function () {
            var trD = {};

            var Course = $(this).find('.CCourse').val();
            if (Course == 'Diploma') {
                Degree = $(this).find('.CDiploma').val();
            }
            else if (Course == 'PGD') {
                Degree = $(this).find('.CPGD').val();
            }
            else if (Course == 'PG') {
                Degree = $(this).find('.CPG').val();
            }
            else {
                Degree = $(this).find('.CDegree').val();
            }
            var MajorFieldOfStudy = $(this).find('.CDBranch').val();
            var University = $(this).find('.CUniversity').val();
            var LastYearCGPA = $(this).find('.CLastYearCGPA').val();
            var AggregateCGPA = $(this).find('.CAggregateCGPA').val();
            var YearOfPassing = $(this).find('.CYearOfPassing').val();

            if (Course != '') {
                trD['Course'] = Course;
                trD['Degree'] = Degree;
                trD['MajorFieldOfStudy'] = MajorFieldOfStudy;
                trD['UniversityName'] = University;
                trD['LastYearCGPA'] = LastYearCGPA;
                trD['AggregateCGPA'] = AggregateCGPA;
                trD['YearOfPassing'] = YearOfPassing;

                if (Course == 'Diploma' || Course == 'Graduate') {
                    a = "2";
                }

                if (LastYearCGPA == "" || LastYearCGPA == "0") {
                    a = "3"
                }
                DArray.push(trD);
            }
        });


        var DArrayPFC = [];

        $('.trProfCertificates').each(function () {
            debugger;
            var trDPFC = {};

            var CertName = $(this).find('.CCertName').val();
            var CertNo = $(this).find('.CCertNo').val();
            var CertIssueDate = $(this).find('.CCertIssueDate').val();
            var CertvalidTill = $(this).find('.CCertValidTill').val();

            if (CertName != '' && CertIssueDate != '' && CertNo != '') {

                trDPFC['CertName'] = CertName;
                trDPFC['CertNo'] = CertNo;
                trDPFC['CertIssueDate'] = CertIssueDate;
                trDPFC['CertvalidTill'] = CertvalidTill;

                if (CertName != '' && CertIssueDate == '') {
                    b = "2";
                }


                DArrayPFC.push(trDPFC);
            }
        });



        var selected = $("#BrAuditee option:selected");
        var ddlCountryValue = "";
        selected.each(function () {
            ddlCountryValue += $(this).val() + ",";
        });
        ddlCountryValue = ddlCountryValue.replace(/,\s*$/, "");

        var PortfolioAccesselected = $("#Auditee option:selected");
        var ddlPortfolioAccesselected = "";
        PortfolioAccesselected.each(function () {
            ddlPortfolioAccesselected += $(this).val() + ",";
        });
        ddlPortfolioAccesselected = ddlPortfolioAccesselected.replace(/,\s*$/, "");

  

        var Langselected = $("#LangAuditee option:selected");
        var LangSelectedVal = "";
        Langselected.each(function () {
            LangSelectedVal += $(this).val() + ",";
        });
        LangSelectedVal = LangSelectedVal.replace(/,\s*$/, "");

   

        var varIdItemToBeInspected = $("#IdItemToBeInspected option:selected");
        var varIdItemToBeInspectedVal = "";
        varIdItemToBeInspected.each(function () {
            varIdItemToBeInspectedVal += $(this).val() + ",";
        });
        varIdItemToBeInspectedVal = varIdItemToBeInspectedVal.replace(/,\s*$/, "");

  
        if (varRoleId == '36')
        {

        }
        else
        {
            if (PK_UserID != "") {

                if (a == "1") {
                    alert("Either Diploma or Graduate Educational details has to be entered");
                    return false;
                }

                if (a == "3") {
                    alert("Kindly Enter Course Details");
                    return false;
                }


                if (b == "2") {
                    alert("Kindly enter Certificate Issue Date");
                    return false;
                }
                if (varRoleId == '36') {

                }
                else {
                    var x = confirm("I hereby declare that all the information provided above is true to the best of my knowledge?");
                    if (x) {

                    }
                    else {
                        return false;
                    }
                }


            }
        }
       


        var UserDetails =
                    {
                        PK_UserID: $("#PK_UserID").val(),
                        FirstName: $("#FirstName").val(),
                        MiddleName: $("#MiddleName").val(),
                        LastName: $("#LastName").val(),
                        UserName: $("#UserName").val(),
                        DOB: $("#DOB").val(),
                        PanNo: $("#PanNo").val(),
                        AadharNo: $("#AadharNo").val(),
                        TUVUIN: $("#PK_UserID").val(),
                        DateOfJoining: $("#DateOfJoining").val(),
                        Branch: ddlCountryValue,
                        CostCenter: $("#Pk_CC_Id option:selected").val(),
                        EmployementCategory: $("#EC option:selected").val(),
                        EmployeeGradeId: $("#EGI option:selected").val(),
                        EmployeeCode: $("#EmployeeCode").val(),
                        SAPEmployeeCode: $("#SAPEmployeeCode").val(),
                        SAP_VendorCode: $("#SAP_VendorCode").val(),
                        ReportingOne: $("#R1 option:selected").val(),
                        ReportingTwo: $("#R2 option:selected").val(),
                        OPE: $("#OPE option:selected").val(),
                        Designation: $("#Designation").val(),
                        TuvEmailId: $("#TuvEmailId").val(),
                        ReasonForUpdate: $("#RFU option:selected").val(),
                        OrgChangeDate: $("#OrgChangeDate").val(),
                        EmployeeGradeIdOld: $("#EGO option:selected").val(),
                        UserRole: $("#ddlUserName option:selected").val(),
                        Employee_Type: ddlPortfolioAccesselected,
                        //Auditee: $("#Auditee option:selected").val(),
                        IsActive: status,
                        IsLocked: $("#IsLocked option:selected").val(),
                        EmailID: $("#EmailID").val(),
                        MobileNo: $("#MobileNo").val(),
                        EmergencyMobile_No: $("#EmergencyMobile_No").val(),
                        ResidenceNo: $("#ResidenceNo").val(),
                        OfficeNo: $("#OfficeNo").val(),
                        Address1: $("#Address1").val(),
                        Address2: $("#Address2").val(),
                        ZipCode: $("#ZipCode").val(),
                        PermanantPin: $("#PermanantPin").val(),
                        Gender: varGender,
                        Marital_Status: $("#Marital_Status").val(),
                        ///LanguageSpoken: $("#LanguageSpoken").val(),
                        LanguageSpoken: LangSelectedVal,
                        Medical_History: $("#Medical_History").val(),
                        Allergies: $("#Allergies").val(),
                        BloodGroup: $("#BG option:selected").val(),
                        ShirtSize: $("#ShirtSize").val(),
                        ShoesSize: $("#ShoesSize").val(),
                        TotalyearofExprience: $("#TYE").val(),
                        ExperienceInMonth: $("#TYEM").val(),
                        TUVIStampNo: $("#TUVIStampNo").val(),
                        CurrentAssignment: $("#CA option:selected").val(),
                        SiteDetail: $("#SiteDetail").val(),
                        ItemToBeInspected: varIdItemToBeInspectedVal,
                        LoginUserRoleId:$("#LoginUserRoleId").val(),
                        isVerified: isVerified,
                        PFUANNumber: $("#PFUANNumber").val()
                    }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateUser", "Users")',
            dataType: 'json',
            Async: false,
            data: JSON.stringify({ URS: UserDetails, 'DArray': DArray, 'DArrayPFC': DArrayPFC }),
            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                if (response.result == 'Redirect') {
                    alert("User Details has been Save successfully!!!")
                    window.location = response.url;
                }

                if (response.result == 'Update') {
                    alert("User Details has been updated successfully!!!")
                    window.location = response.url;
                }
            }
        })


    });

</script>


<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->

<script>
    FilePond.parse(document.body);
</script>


<script>
    FilePond.setOptions({
        server: '@Url.Action("TemporaryFilePathDocumentAttachment", "Users")'
    });
</script>

@*<script>
    filepondEyeTest.parse(document.body);
</script>


<script>
    filepondEyeTest.setOptions({
        server: '@Url.Action("TemporaryFilePathEyeTestDocumentAttachment", "Users")'
    });
</script>*@


<style>
    .addCSS {
        pointer-events: none;
    }
</style>

<script>
    $(document).ready(function () {
        debugger;
        var PKID = $("#LoginUserRoleId").val();

        if (PKID == '36') {

            // $('#UserHide').show();
            var DL = document.getElementById("UserHide");
            DL.className += "";
        }
        else {
            var DL = document.getElementById("UserHide");
            DL.className += "addCSS";

            //$('#UserHide').hide();
        }
    })

    jQuery.fn.ValidateDocs = function () {
        var UserID = $("#PK_UserID").val();
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ValidateDocs", "Users")',
            dataType: 'json',
            Async: false,
            data: JSON.stringify({ "UserID": UserID }),
            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                return response;
            }

        });


    };


    $(function () {
        $("#btnViewHistory").click(function () {

            $("#divHistory").css('display', 'block');

        });
    });


    $(function () {
        $("#btnAddDoc").click(function () {
            debugger;
            var UserID = $("#PK_UserID").val();
            var Year = $("#PT").val();
            var docType = $("#DOCType").val();
           // var docType;
          
            

            $.ajax({
                type: 'POST',
                url: '@Url.Action("InsertDocument", "Users")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ "DocType": docType, "UserID": UserID, "Year": Year }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {


                    if (response.result == "TYPEERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }
                        //if (docType == "1" || docType == "2") {
                         if (docType == "1" || docType == "2") {
                            alert("File formats should be JPG, JPEG, PNG");
                            return false;
                        }
                        else if (docType == "3") {
                            alert("CV File formats should be doc , docx");
                            return false;
                        }
                        else {
                            alert("File formats should be JPG, JPEG, PNG,PDF");
                            return false;
                        }

                    }
                    if (response.result == "ERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }

                        let filePond1 = FilePond.find(document.getElementById("DocUpload1"));
                        if (filePond1 != null) {
                            filePond1.removeFiles();
                        }

                        $("#PT").val("");
                        alert("There is some error while uploading the file");
                        return false;
                    }
                    if (response.result == "SUCCESS") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }

                        let filePond1 = FilePond.find(document.getElementById("DocUpload1"));
                        if (filePond1 != null) {
                            filePond1.removeFiles();
                        }
                        $("#PT").val("");
                        //$("#divDocuments").load(location.href + " #divDocuments");
                        //$("#divDocuments1").load(location.href + " #divDocuments1");added by vaibhav
                        alert("File Uploaded Successfully");
                        $("#divDocuments").load(location.href + " #divDocuments");
                        $("#divDocuments1").load(location.href + " #divDocuments1");
                        //window.location = response.url;
                    }

                    //$("#divDocuments").load(location.href + " #divDocuments");
                    //$("#divDocuments1").load(location.href + " #divDocuments1");
                }

            });

        });
    });


    $(function () {
        $("#btnAddEyeTestDoc").click(function () {
            debugger;
            var UserID = $("#PK_UserID").val();
            var Year = $("#PT").val();
            var docType = "9";
            // var docType;


            if (Year == "")
                    {
                alert("Select Year")
                return false;
            }
            else
            {

           


            $.ajax({
                type: 'POST',
                url: '@Url.Action("InsertDocumentEyeTest", "Users")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ "DocType": docType, "UserID": UserID, "Year": Year }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {


                    if (response.result == "TYPEERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }
                        //if (docType == "1" || docType == "2") {
                        if (docType == "1" || docType == "2") {
                            alert("File formats should be JPG, JPEG, PNG");
                            return false;
                        }
                        else if (docType == "3") {
                            alert("CV File formats should be doc , docx");
                            return false;
                        }
                        else {
                            alert("File formats should be JPG, JPEG, PNG,PDF");
                            return false;
                        }

                    }
                    if (response.result == "ERROR") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }

                        let filePond1 = FilePond.find(document.getElementById("DocUpload1"));
                        if (filePond1 != null) {
                            filePond1.removeFiles();
                        }

                        $("#PT").val("");
                        alert("There is some error while uploading the file");
                        return false;
                    }
                    if (response.result == "SUCCESS") {
                        let filePond = FilePond.find(document.getElementById("DocUpload"));
                        if (filePond != null) {
                            //this will remove all files
                            filePond.removeFiles();
                        }

                        let filePond1 = FilePond.find(document.getElementById("DocUpload1"));
                        if (filePond1 != null) {
                            filePond1.removeFiles();
                        }
                        $("#PT").val("");
                        alert("File Uploaded Successfully");
                        $("#divDocuments").load(location.href + " #divDocuments");
                        $("#divDocuments1").load(location.href + " #divDocuments1");
                        
                       // window.location = response.url;
                    }

                    //$("#divDocuments").load(location.href + " #divDocuments");
                    //$("#divDocuments1").load(location.href + " #divDocuments1");
                }

            });

            }

        });
    });
</script>

<script>
    $(document).ready(function () {
        $('.deleteItemFormat').click(function (e) {

            debugger;
            var UserID = $("#PK_UserID").val();
            var id = $(this).data('id');
           
            var $ctrl = $(this);
            // var docType;
          
            
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteFileFormat", "Users")',
                    dataType: 'json',
                    Async: false,
                    data: JSON.stringify({ "id": id, "UserID": UserID}),
                    enctype: "multipart/form-data",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {

                        if (response.result == "OK") {
                            alert("Deleted Successfully");
                            $ctrl.closest('li').remove();
                            $("#divDocuments").load(location.href + " #divDocuments");
                            $("#divDocuments1").load(location.href + " #divDocuments1");
                            //window.location = response.url;

                        }
                        else if (response.result.Message) {
                            alert(response.result.Message);
                        }
                    }
                });
            }
        })
    })
</script>
 
@*<script>
    $(document).ready(function () {
        $('.deleteItemFormat').click(function (e) {
            debugger;
            var UserID = $("#PK_UserID").val();
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFileFormat")',
                    type: 'POST',
                    data: JSON.stringify({ "id": $(this).data('id'), "UserID": UserID }),
               }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                        window.location = data.url;
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>*@
<script type="text/javascript">

    var DTRowCount = 1;

    $(document).ready(function () {

        $(document).on("click", ".classAdd", function () { //
            debugger;

            if ($('#DTestTable tr').length - 1 >= DTRowCount) {
                var count = $('#DTestTable tr').length - 1;
                DTRowCount = count;
            }
            //if (count < 3) {
            DTRowCount += 1;
            var contactdiv = '<tr class="trEduQualification" style="background-color:#f0f0f0">' +
          '<td>' +

 ' <select name="Course"  class="form-control CCourse" id="ddlCourse' + DTRowCount + '"  onchange= "return GetCourceName(this);" > <option value="">Select</option> <option value="S.S.C">S.S.C</option> <option value="H.S.C">H.S.C</option> <option value="Diploma">Diploma</option><option value="Graduate">Graduate</option> <option value="PGD">PGD</option><option value="PG">PG</option></select></td>' +
           '<td style="text-align:left"><select name="Degree"  class="form-control CDegree" id="ddlDegree' + DTRowCount + '"  onchange = "GetBranchName(this);" style= "display:block;"> <option value="">Select</option> <option Value = "BEng">Bachelor of Engineering</option><option Value = "BTech">Bachelor of Technology</option><option value="AMIE">AMIE</option> <option value="BA">Bachelor of Arts</option><option value="BSc">Bachelor of Science</option> <option value="BCom">Bachelor of Commerce</option><option value="BBA">BBA</option><option value="BMS">BMS</option><option value="BBS">BBS</option></select><select name="Diploma"  class="form-control CDiploma" id="ddlDiploma' + DTRowCount + '"  onchange = "GetBranchName(this);" style= "display:none;"><option value="">---Select---</option> <option Value = "Tech">Technical</option><option Value = "NTech">Non Technical</option></select><select name="PGD"  class="form-control CPGD" id="ddlPGD' + DTRowCount + '"  onchange = "GetBranchName(this);" style= "display:none;"><option value="">---Select---</option> </select><select name="PG"  class="form-control CPG" id="ddlPG' + DTRowCount + '"  onchange = "GetBranchName(this);" style= "display:none;"><option value="">---Select---</option> <option value="ME">Master of Engineering</option><option value="MTech">MTech</option><option value="MBA">MBA</option></select></td>' +
          '<td style="text-align:left"><select name="DBranch"  class="form-control CDBranch" id="DBranch' + DTRowCount + '" > <option value="">---Select---</option></td>' +
      '<td style="text-align:left"><select name="YearOfPassing"  class="form-control CYearOfPassing" id="YearOfPassing' + DTRowCount + '" ><option value="">---Select---</option> @foreach (var item in ViewBag.YearOfPassing) {  <option value="@item.Code">@item.Name</option>}</select></td>' +

    '<td style="text-align:left" ><input name="University"  class="form-control CUniversity" id="University' + DTRowCount + '"/></td>' +
           //'<td><input name="YearOfPassing"  class="form-control CYearOfPassing" id="YearOfPassing' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><input name="LastYearCGPA" onkeypress = "return isNumberKey(event);" , onkeyup = "return AcceptSelNumber(this);" class="form-control CLastYearCGPA" id="ILastYearCGPA' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><input type="number" name="AggregateCGPA" onkeypress = "return isNumberKey(event);" onkeyup = "return AcceptSelNumber(this);" class="form-control CAggregateCGPA" onkeyup="c()" Id="ICAggregateCGPA' + DTRowCount + '" /></td>' +
          '<td style="text-align:left"><button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
          '</tr>';
            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class
            //BindYearOfPassing();
            //GetYear();

        });

        $(document).on("click", ".classAddPFC", function () { //
            debugger;

            if ($('#DTestTablePFC tr').length - 1 >= DTRowCount) {
                var count = $('#DTestTablePFC tr').length - 1;
                DTRowCount = count;
            }

            DTRowCount += 1;

            var contactdiv = '<tr class="trProfCertificates" style="background-color:#f0f0f0">' +
          '<td style="text-align:left"><input type="text" name="CertName" class="form-control form-control-custom CCertName" id="CertName' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><input type="text" name="CertNo"  class="form-control CCertNo" id="CertNo' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><input type="text" name="CertIssueDate"  class="form-control CCertIssueDate" id="CertIssueDate' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><input type="text" name="CertValidTill"  class="form-control CCertValidTill" id="CertValidTill' + DTRowCount + '"/></td>' +
          '<td style="text-align:left"><button type="button" id="btnDeletePFC" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
          '</tr>';
            $('#DTestTablePFC').append(contactdiv); // Adding these controls to Main table class
            BindAutoComplete();
            BindValidDate();
            BindIssueDate();


        });
    });
</script>

<script>
    $(document).on("click", ".deleteContact", function () {
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        DTRowCount = DTRowCount - 1;

    });
</script>


<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTable");
    }

    function addRowPFC() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTablePFC tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTablePFC");
    }
</script>

<script>
    $(function () {
        $('.CPIN').keypress(function (evt) {
            var maxLength = 6; // as it threat maxlength-5 custom class :)

            // assuming that data-mask will certify that only currency format will be valid
            var pureValue = $(this).val().replace('.', '').replace(',', '');

            if (pureValue.length >= maxLength)
                evt.preventDefault();
        })
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }


</script>

<script>
    $(".CCertName").autocomplete({
        source: function (request, response) {
            debugger
            $.ajax({
                url: '@Url.Action("GetCertName", "Users")',
                data: "{ 'prefix': '" + request.term + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    
                    response($.map(data, function (item) {
                        
                        return { label: item.CertName, value: item.CertName };
                    }));
                },
                error: function (response) {

                },
                failure: function (response) {

                }
            });
        },
        select: function (e, i) {

        },
        minLength: 2
    });

    function BindAutoComplete() {
        $(".CCertName").autocomplete({
            source: function (request, response) {
                debugger
                $.ajax({
                    url: '@Url.Action("GetCertName", "Users")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CertName, value: item.CertName };
                        }));
                    },
                    error: function (response) {

                    },
                    failure: function (response) {

                    }
                });
            },
            select: function (e, i) {

            },
            minLength: 2
        });

    }



</script>

<script>
    //$('.CTYE').on('keyup', keyUpHandler);

    //function keyUpHandler(e) {
    //    var element = this;
    //    var key = e.keyCode || e.which;
    //    insertTimingColor(element, key)
    //}

    //function insertTimingColor(element, key) {
    //    var inputValue = element.value;
    //    if (element.value.trim().length == 2 && key !== 8) {
    //        element.value = element.value + ':';
    //    }
    //}

    $('#MobileNo').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        debugger;
        CalYear();
        CurrentAssignmentChange();
        CalAgeInYearDays();

        var varURI = $("#LoginUserRoleId").val();
        var varAfter7days = $("#After7Days").val();

        var varHideFirstTime = document.getElementById("HideFirstTime");
        var IdHideAddUser = document.getElementById("IdHideAddUser");

        var DL = document.getElementById("IdReadOnly");
        var Hide = document.getElementById("IdHide1");
        var Hide2 = document.getElementById("IdHide2");
        var Hide3 = document.getElementById("IdHide3");
        var HideAfter7Days = document.getElementById("IdOrgChangeDateMain");
        var DLidFirstName = document.getElementById("idFirstName");
        var DLidLastName = document.getElementById("idLastName");
        var DLidUserName = document.getElementById("idUserName");

        var HideIdEmploymentCate = document.getElementById("IdEmploymentCate");

        var varPK_Userid = $("#PK_UserID").val();

        if (varPK_Userid == null || varPK_Userid == "")
        {
            //varHideFirstTime.style.visibility = 'hidden';
            //IdHideAddUser.style.visibility = 'hidden';
            $('#IdHideAddUser').css('display', 'none');
            $('#HideFirstTime').css('display', 'none');
        }
        else
        {
            varHideFirstTime.style.visibility = 'visible';
            IdHideAddUser.style.visibility = 'visible';
        }
        

       if(varURI==36)
       {
           if(varAfter7days=='Yes')
           {
               
           }
           else
           {
               HideAfter7Days.style.display = "none";
               Hide3.style.display = "none";
               
           }
       }
       else
       {
           DL.className += "addCSS";
           DLidFirstName.className += "addCSS";
           DLidLastName.className += "addCSS";
           DLidUserName.className += "addCSS";
           //Hide.style.visibility = 'hidden';
           Hide.style.display = "none";
           Hide2.style.display = "none";
           HideIdEmploymentCate.style.display = "none";
           Hide3.style.display = "none";
           HideAfter7Days.style.display = "none";

           //if (varAfter7days == 'Yes') {
               
           //}
           //else
           //{
           //    Hide3.style.display = "none";
           //}
           
       }


    })
   

    function CalYear() {
        //Get current date
        var varTYE = $("#TYE").val();
        var varTYEM = $("#TYEM").val();

        if (parseInt(varTYE, 10) > 70) {
            alert("Value can not be greater than 70")
            $("#TYE").val('');
            $("#TYE").focus();
            return false;
        }
        if (parseInt(varTYEM, 10) > 12) {
            alert("Value can not be greater than 12")
            $("#TYEM").val('');
            $("#TYEM").focus();
            return false;
        }


        var today = new Date();
        const yyyy = today.getFullYear();
        let mm = today.getMonth() + 1; // Months start at 0!
        let dd = today.getDate();

        if (dd < 10) dd = '0' + dd;
        if (mm < 10) mm = '0' + mm;
        today = dd + '/' + mm + '/' + yyyy;




        var startdate = $("#DateOfJoining").val(); //'26-12-2020';//
       

        //var newDate = moment(startdate, "DD-MM-YYYY").add(3, 'months').format('DD/MM/YYYY');
        //var newDate1 = moment(startdate, "DD-MM-YYYY").add(3, 'year').format('DD/MM/YYYY');
        var newDate = moment(startdate, "DD-MM-YYYY").subtract(varTYEM, 'months').format('DD/MM/YYYY');
        var newDate1 = moment(newDate, "DD-MM-YYYY").subtract(varTYE, 'year').format('DD/MM/YYYY');


        //var m1 = moment(newDate1, 'M/D/YYYY');
        //var m2 = moment(today, 'M/D/YYYY');
        var m1 = moment(newDate1, 'DD-MM-YYYY');
        var m2 = moment(today, 'DD-MM-YYYY');
        var diff = moment.preciseDiff(m1, m2);

        $("#DynamicCalTotalYearExp").val(diff);

        //console.log(diff);

        //return displayRes



    }


    $('#TYEM').keyup(function () {
        debugger;

        CalYear();
    });
    $('#TYE').keyup(function () {
        debugger;

        CalYear();
    });



    $("#PanNo").change(function () {
        debugger;
        var inputvalues = $(this).val();
        var incap = inputvalues.toUpperCase();
        var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
        if (!regex.test(incap)) {
            $("#PanNo").val("");
            alert("invalid PAN no");
            return regex.test(inputvalues);
        }
    });



    $("#AadharNo").change(function () {
        var aadhar = $("#AadharNo").val();
        var adharcardTwelveDigit = /^\d{12}$/;
        var adharSixteenDigit = /^\d{16}$/;
        if (aadhar != '') {
            if (aadhar.match(adharcardTwelveDigit)) {
                return true;
            }
            else if (aadhar.match(adharSixteenDigit)) {
                return true;
            }
            else {
                $("#AadharNo").val("");
                alert("Enter valid Aadhar Number");
                
                return false;
            }
        }
    });



    

    $("#MobileNo").change(function () {
        var val = $("#MobileNo").val();
        if (/^\d{10}$/.test(val)) {
            // value is ok, use it
        } else {
            $("#MobileNo").val("");
            alert("Enter 10 digit number.")
           
            
            return false
        }
    })
    
   

    //$('#SAP_VendorCode').keypress(function (evt) {
    //    var maxLength = 15; // as it threat maxlength-5 custom class :)

    //    // assuming that data-mask will certify that only currency format will be valid
    //    var pureValue = $(this).val().replace('.', '').replace(',', '');

    //    if (pureValue.length >= maxLength)
    //        evt.preventDefault();
    //})

    $('#TUVIStampNo').keypress(function (evt) {
        var maxLength = 4; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })

</script>

<script>

    //function fncModalSave() {
    //    debugger;

    //    var Year = $("#PT").val();

    //    if (Year == "")
    //    {
    //        alert("Select Year")
    //    }
    //    else
    //    {
    //        $("#DOCType").val("9");
            
    //        var link = document.getElementById('btnAddEyeTestDoc');
    //        link.click();
    //    }
        
    //}

</script>

<script>
    function CurrentAssignmentChange() {
        debugger;
        var ddlvalue = $("#CA option:selected").val();
        if(ddlvalue=='Site/fixed location Deputed at single vendor/customer location for inspection/QA activity.')
        {
            $("#divSiteDetails").css('display', 'block');
        }
        else
        {
            $("#divSiteDetails").css('display', 'none');
        }
    }
</script>


<script>
 //Age Calculate


    $("#DOB").change(function () {
        debugger;
        CalAgeInYearDays();
    })

    function CalAgeInYearDays() {

        var today = new Date();
        const yyyy = today.getFullYear();
        let mm = today.getMonth() + 1; // Months start at 0!
        let dd = today.getDate();

        if (dd < 10) dd = '0' + dd;
        if (mm < 10) mm = '0' + mm;
        today = dd + '/' + mm + '/' + yyyy;




        var startdate = $("#DOB").val(); //'26-12-2020';//
        //var varTYE = $("#TYE").val();
        //var varTYEM = $("#TYEM").val();

        //var newDate = moment(startdate, "DD-MM-YYYY").subtract(varTYEM, 'months').format('DD/MM/YYYY');
        //var newDate1 = moment(newDate, "DD-MM-YYYY").subtract(varTYE, 'year').format('DD/MM/YYYY');


        var m1 = moment(startdate, 'DD-MM-YYYY');
        var m2 = moment(today, 'DD-MM-YYYY');
        var diff = moment.preciseDiff(m1, m2);

        $("#AgeCalculator").val(diff);

    }



    @*function GetYear() {
        debugger;
        for (var i = 0; i < @ViewBag.YearOfPassing.Count(); i++) {
            var opt = new Option(ViewBag.Students[i].YearOfPassingName, ViewBag.Students[i].YearOfPassing);
            $(YearOfPassing).append(opt);

        }
    }*@
</script>
<script>
    $("#EmployeeCode").change(function () {
        debugger;
        var ExistsUserName = $("#EmployeeCode").val();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CheckingHrEmployeeCode", "Users")",
            data: { ExistingUserName: ExistsUserName },
            dataType: "json",
            cache: false,
            success: function (response) {
                if (response == "Success") {
                    alert("Hr Employee Already Exists in System !!!");
                    $("#EmployeeCode").val('');
                    //$("#UserName").focus();
                }
                //else
                //{
                //    alert("User is Available!!");
                //}
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });



</script>
<script>
    $("#TuvEmailId").change(function () {

        var str1 = $("#TuvEmailId").val();
        var str2 = "tuv-nord.com";
        var str3 = "co.in";

        if (str1.indexOf(str2) != -1){

        }
        else if (str1.indexOf(str3) != -1)
        {

        }
        else
        {
            $("#TuvEmailId").val('');
            alert("Enter Valid TUV Email");
        }

    });

</script>