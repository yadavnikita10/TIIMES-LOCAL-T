@model TuvVision.Models.Users
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;

@{
    ViewBag.Title = "CVDocumentsDetails";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>


<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>*@
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

<style>
    .ifa {
        pointer-events: none;
    }

    .dataTables_filter, .dataTables_info {
        display: none;
    }
</style>

<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <!-- /.col -->
            <!--Table was here-->
            <div class="row">
                <div class="col-xs-12">
                    <div class="col-xs-12 col-sm-4">

                        <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Employee CV Details</h3>

                    </div>
                    @*@Html.HiddenFor(model => model.PK_UserID)*@
                    <div class="col-md-12 row" style="margin-left: 1px;margin-top:10px">
                        <div class="col-md-10">
                            <label>Search Term</label>
                            <input id="txtSearchTerm" class="form-control" placeholder="Enter Search Term here" />
                        </div>
                        <div class="col-md-2"><input type="button" value="Search" class="btn btn-primary" onclick="SearchTermInCV()" style="margin-top: 23px;" /></div>
                    </div>
                    <div class="col-lg-12" id="Lessiondata">
                        @*<table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                                <tr>
                                    <td>
                                        @(
                            Html.Grid(Model.lstPQ)
                                .Build(columns =>
                                {
                                    columns.Add(c => c.UserName).Titled("User Name").Filterable(true).FilteredAs("custom").Sortable(true).Css("aa");
                                    columns.Add(c => c.Branch).Titled("Branch Name").Filterable(true).FilteredAs("custom").Sortable(true).Css("aa");
                                    columns.Add(c => c.OBSTYPE).Titled("OBS Type");
                                    columns.Add(c => c.Branch).Titled("Branch");
                                    columns.Add(c => c.TotalyearofExprience).Titled("Total year of Exprience");
                                    columns.Add(c => c.Designation).Titled("Designation");
                                    columns.Add(c => c.Qualification).Titled("Qualification");
                                    columns.Add(c => c.CoreField).Titled("Core Field Study");
                                    columns.Add(c => c.CVUpdate).Titled("CV Update");
                                    columns.Add().Titled("CV").Encoded(false).RenderedAs(o =>
                                    {
                                        var imgSrc = Url.Content("~/Content/2666421.png"); // Resolve the URL to the image
                                        var imgTag = $"<img src='{imgSrc}' alt='CV Image' />";
                                        var linkTag = $"<a href='#' title='CV' onclick='return onCVLinkClick(\"{o.PK_UserID}\")'>{imgTag}</a>";
                                        return new HtmlString(linkTag);
                                    });

                                })
                                .Pageable(pager =>
                                {
                                    pager.ShowPageSizes = true;
                                    pager.PagesToDisplay = 3;
                                    pager.CurrentPage = 1;
                                    pager.RowsPerPage = 2;
                                })
                                .UsingFilterMode(GridFilterMode.Row)
                                .Empty("No Data Found")
                                .Filterable()
                                .Sortable()
                                        )
                                    </td>
                                </tr>
                            </table>*@




                        <table id="example" class="display custom-table dataTable no-footer" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th class="hidden">pk_userid</th>
                                    <th>Name</th>
                                    <th>Branch</th>
                                    <th>Download CV</th>

                                    <th>Total year of Exprience</th>

                                    <th>Designation</th>
                                    <th>Qualification</th>

                                    <th>Core Field Study</th>
                                    <th>CV Update</th>

                                    <th>OBS Type</th>

                                </tr>
                            </thead>

                            @*<tbody>*@
                            @{
                                var items = ViewData["CVListData"] as IList<TuvVision.Models.Users>;


                                if (items != null)
                                {
                                    <tbody id="cvBody">
                                        @foreach (var obj in ViewData["CVListData"] as IEnumerable<TuvVision.Models.Users>)
                                        {
                                            <tr>
                                                <td class="hidden">@obj.PK_UserID</td>
                                                @*<td>
                                    <a href="#" title="CV" onclick="return onCVLinkClick('@obj.PK_UserID')">
                                        <img src="~/Content/2666421.png" alt="CV Image" style="max-width: 20%" />
                                    </a>
                                </td>*@

                                                <td>@obj.UserName</td>
                                                <td>@obj.Branch</td>
                                                <td>
                                                    <a href="~/CV/@obj.CV" download style="color:#001ED2;">
                                                        @obj.CV
                                                    </a>
                                                </td>

                                                <td>@obj.TotalyearofExprience</td>
                                                <td>@obj.Designation</td>
                                                <td>@obj.Qualification</td>

                                                <td>@obj.CoreField</td>
                                                <td>@obj.CVUpdate</td>
                                                <td>@obj.OBSTYPE</td>


                                            </tr>
                                        }

                                    </tbody>
                                }
                            }

                        </table>






                    </div>
                </div>



            </div><!-- /.container-fluid -->
            <!--End of header-->
        </div>
    </div>
</div>



@*<script>
        var CustomTextFilter = (function (base) {
            MvcGridExtends(CustomTextFilter, base);

            function CustomTextFilter(column) {
                base.call(this, column);

                this.methods = ['contains'];
                column.grid.lang.custom = { contains: 'Contains' };
            }

            // Other extension points can be found at MvcGridFilter declaration

            return CustomTextFilter;
        })(MvcGridFilter);

        new MvcGrid(document.querySelector('.mvc-grid'), {
            filters: {
                'custom': CustomTextFilter
            }
        });
    </script>

    <script>
        [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
            new MvcGrid(element);
        });
    </script>*@


<script>
    function onCVLinkClick(userID) {
        var shouldCallCreateCV = true;

        if (shouldCallCreateCV) {

            $.ajax({
                type: "GET",
                url: '@Url.Action("CreateUser", "Users")',
                data: { UserID: userID },
                success: function (response) {
                    // Once the user creation is successful, redirect to CreateCV page
                    window.location.href = '@Url.Action("CreateCV", "Users")';
                },
                error: function (xhr, status, error) {
                    console.log("Error occurred while creating user: " + error);
                }
            });

            return false; // Prevent the default action
        } else {
            // Navigate to the CreateUser page with the specified UserID
            var url = '@Url.Action("CreateUser", "Users")?UserID=' + userID;
            $('#cvLink_' + userID).attr('href', url);
            return true; // Allow the default action to proceed
        }
    }


    function SearchTermInCV() {

        var SearchTerm = $('#txtSearchTerm').val().trim();
        if (SearchTerm == "") {
            location.href = '@Url.Action("CVDocumentsDetails", "Users")';
            //'http://localhost:54895/Users/CVDocumentsDetails'
        }
        else {
            $.ajax({
                type: "GET",
                url: '@Url.Action("SearchTermInCV", "Users")',
                data: { SearchTerm: SearchTerm },
                success: function (response) {
                    debugger;
                    if ($.fn.DataTable.isDataTable('#example')) {
                        $('#example').DataTable().destroy();
                    }
                    $('#cvBody').empty();
                    for (var i = 0; i < response.length; i++) {
                        $('#cvBody').append('<tr><td class="hidden">' + response[i].PK_UserID + '</td><td>' + response[i].UserName + '</td><td>'
                            + response[i].Branch + '</td><td><a href="../CV/' + response[i].CV + '" download style="color:#001ED2;">' + response[i].CV + '</a></td><td>'
                            + response[i].TotalyearofExprience + '</td><td>' + response[i].Designation + '</td><td>' +
                                                            response[i].Qualification + '</td><td>' + response[i].CoreField + '</td><td>' + response[i].CVUpdate + '</td><td>' + response[i].OBSTYPE + '</td></tr>');
                    }
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    console.log("Error occurred while creating user: " + error);
                }
            });
        }
    }

</script>










