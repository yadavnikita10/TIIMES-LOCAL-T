@*@model IEnumerable<TuvVision.Models.RangeInspectionMaster>*@
@model TuvVision.Models.RangeInspectionMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "ListRangeInspectionMaster";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}
<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <div class="col-xs-12">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Add Range Inspection Master-TCE</h3>
                <button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateRangeInspectionMaster", "RangeInspectionMaster")'">Create Range Inspection </button>
                <button type="button"  value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","RangeInspectionMaster")'"
                        >
                    Export To Excel
                </button>

             </div><!-- /.col -->

            <div class="col-xs-12">
                <hr class="custom-hr">
            </div><!-- /.col -->
            <!--Table was here-->

        </div>
        <div class="col-xs-12">
            @*<table id="example" class="display" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th class="hidden">PK_RangeInspectionId</th>
                        <th>Range Inspection</th>
                        <th>Field Inspection Name</th>

                        <th class="remove-search">Action</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var b in Model)
                    {
                        <tr>
                            <td class="hidden">@b.PK_RangeInspectionId</td>

                            <td>@b.RangeInspection</td>
                            <td>@b.FK_FieldInspectionName</td>
                            <td cRemarkslass="action-btn" style="text-align:center;">
                                <a href="@Url.Action("CreateRangeInspectionMaster", "RangeInspectionMaster", new { PK_RangeInspectionId = @b.PK_RangeInspectionId })" class="btn btn-info btn-xs" title="Edit"><i class="fa fa-pencil"></i></a>

                                <a href="@Url.Action("Delete", "RangeInspectionMaster", new { PK_RangeInspectionId = @b.PK_RangeInspectionId })" class="delete" onclick="return confirm('Are you sure you wish to Delete selected Record?');" title="Delete"><i class="fa fa-trash"></i></a>
                            </td>

                        </tr>
                    }
                </tbody>

            </table>*@

        </div>

        <div class="col-xs-12">
            <table class="display dataTable no-footer evaluation" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lmd1)
                            .Build(columns =>
                            {


                                columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateRangeInspectionMaster", new { PK_RangeInspectionId = o.PK_RangeInspectionId }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { PK_RangeInspectionId = o.PK_RangeInspectionId }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));

                                columns.Add(c => c.PK_RangeInspectionId).Titled("PK_Range Inspection Id").Hidden();
                                columns.Add(c => c.RangeInspection).Titled("Range Inspection");
                                columns.Add(c => c.FK_FieldInspectionName).Titled("Field Inspection Name");
                                columns.Add(c => c.MinimumEducationQua).Titled("Minimum Educational Qualification");
                                columns.Add(c => c.MinimumRequirmentForLevel3).Titled("Minimum Requirement for Level 3");


                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>

        </div>

        </div>

</div>



<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>
<style>
    table.evaluation > tbody {
        width: 100% !important;
        display: table;
    }

        table.evaluation > tbody > tr td table {
            width: 100% !important;
            display: table;
        }
</style>

