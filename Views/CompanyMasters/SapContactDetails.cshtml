@model TuvVision.Models.CompanyMaster

@{
    ViewBag.Title = "SapContactDetails";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

@{
    var CompanyName = ViewBag.SelectedCompanyName as string;
    var address = ViewBag.Address as string;
    var ActionType = ViewBag.ActionType as string;
    var CompId = ViewBag.CompanyId as string;
}
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />

@if ((Convert.ToString(TempData["ContactExist"])) != "" && Convert.ToString(TempData["ContactExist"]) != null)
{
    TempData["ContactExist"] = null;
    <script type="text/javascript" language="javascript">
        alert("Contact Detail already exist for this Company!!!!");
    </script>
}




@using (Html.BeginForm("SapContactDetails", "CompanyMasters", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form" }))
{
    @Html.Hidden("PK_ContID")
    @Html.HiddenFor(m => m.FK_CMP_ID)
    <!--Start of main content 3-->
    <div class="main-content3 xs-max-height grey-bg-f3">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        @*<div class="col-xs-12 text-right">
                            <a href="@Url.Action("ContactDashBoard","CompanyMasters")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>
                        </div>*@

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                @if (Model == null)
                                {
                                    <h3 class="form-page-title">Add New Contact</h3>
                                }
                                else
                                {
                                    <h3 class="form-page-title">Edit Contact</h3>
                                }
                                <div class="row">

                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form>
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <span style="color:#E12F24;">
                                                            <strong>Notes </strong> :
                                                        </span> 1) <span style="color:#FA3746;">*</span> - Mandatory.<br />

                                                    </div>

                                                </div>
                                                <div class="col-xs-12">
                                                    <hr class="custom-hr1">
                                                </div>
                                                <div class="col-xs-12 col-sm-6">
                                                    <div class="form-group">
                                                        <label>Customer Name:<span style="color:#ff0000;">*</span></label>
                                                        @if (ViewBag.SelectedCompanyName == null)
                                                        {
                                                            @Html.TextBoxFor(model => model.CompanyName, new { placeholder = "Enter Customer Name", @class = "form-control form-control-custom", @readonly = "readonly" })
                                                            @*<input type="hidden" id="hfCompanyName" name="CustomerId" />*@
                                                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                                        }
                                                        else
                                                        {
                                                            @*<span class="form-control">@CompanyName</span>*@
                                                            @*<span class="form-control">@Model.CompanyName</span>*@
                                                            @Html.TextBoxFor(model => model.CompanyName, new { placeholder = "Enter Company Name", @class = "form-control form-control-custom", @readonly = "readonly" })

                                                        }
                                                        <input type="hidden" name="CompId" id="CompId" />



                                                    </div>
                                                    @Html.Hidden("hidCompany")
                                                </div>
                                                <div class="col-xs-12 col-sm-6">
                                                    <div class="form-group">
                                                        <label>Customer Code: <span style="color:#ff0000;">*</span></label>
                                                        @Html.TextBoxFor(model => model.SapNo, new { @placeholder = "Enter Sap Number", @class = "form-control", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(model => model.SapNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Contact Person Name: <span style="color:#ff0000;">*</span></label>
                                                        @Html.TextBoxFor(model => model.ContactName, new { @placeholder = "Enter Contact Person Name", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Designation:<span style="color:#ff0000;">*</span></label>
                                                        @*@{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.TitleName != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.TitleName, new SelectList(@ViewBag.TitleName, "Code", "Name"), "---Select Title---", new { @id = "ddlTitle", @class = "form-control" })
                                                                    }
                                                                }
                                                                if (ViewData["TitleNameItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.TitleName, (IEnumerable<SelectListItem>)ViewData["TitleNameItems"], "---Select Title---", new { @id = "ddlTitle", @class = "form-control" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.TitleName, new SelectList(@ViewBag.TitleName, "Code", "Name"), "---Select Title---", new { @id = "ddlTitle", @class = "form-control" })
                                                                }

                                                            }*@
                                                        @Html.TextBoxFor(model => model.TitleName, new { @placeholder = "Enter Designation", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.TitleName, "", new { @class = "text-danger" })


                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Email Id:<span style="color:#ff0000;">*</span></label>
                                                        @Html.TextBoxFor(model => model.Email, new { @placeholder = "Enter Email Id", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Landline Number: </label>
                                                        @Html.TextBoxFor(model => model.HomePhone, new { @placeholder = "Enter Landline Number", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                @*<div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Pan Number: <span style="color:#ff0000;">*</span></label>
                                                            @*<input type="text" class="form-control" placeholder="PAN Here">
                                                            @Html.TextBoxFor(model => model.Pan_No, new { @placeholder = "Pan Card Number Here", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Pan_No, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>*@
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Mobile Number: <span style="color:#ff0000;">*</span></label>
                                                        @Html.TextBoxFor(model => model.Mobile, new { @placeholder = "Enter Mobile Number", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Fax Number:</label>
                                                        @Html.TextBoxFor(model => model.Fax_No, new { @placeholder = "Enter Fax Number", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Fax_No, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        @*<label>Primary Contact (check if yes):</label>*@
                                                        @if (Model != null)
                                                        {
                                                            if (Model.IsMainContact == true)
                                                            {
                                                                <div>
                                                                    <label>
                                                                        <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" checked="checked" /><b>Primary Contact</b>
                                                                    </label>
                                                                </div>
                                                            }
                                                            else if (Model.IsMainContact == false)
                                                            {
                                                                <div class="checkbox">
                                                                    <label>
                                                                        <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" /><b>Primary Contact</b>
                                                                    </label>
                                                                </div>
                                                            }

                                                        }
                                                        else
                                                        {
                                                            <div class="checkbox">
                                                                <label>
                                                                    <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" /> <b>Primary Contact</b>
                                                                    <input name="IsMainContact" type="hidden" value="false" />
                                                                </label>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Status:<span style="color:#ff0000;">*</span></label>
                                                        @*@{

                                                                if (ViewData["StatusNameItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.ContactStatus, (IEnumerable<SelectListItem>)ViewData["StatusNameItems"], "---Select Status---", new { @id = "ddlStatusName", @class = "form-control col-md-7 col-xs-12 form-control-custom-ddl" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.ContactStatus, new SelectList(@ViewBag.StatusName, "Code", "Name"), "---Select Status---", new { @id = "ddlStatusName", @class = "form-control form-control-custom-ddl" })
                                                                }
                                                                @Html.ValidationMessageFor(model => model.ContactStatus, "", new { @class = "text-danger" })
                                                            }*@
                                                        @Html.DropDownListFor(m => m.ContactStatus, new List<SelectListItem>
                                                                     {
                                                                    // new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Active", Value = "Active" },
                                                                     new SelectListItem{ Text="In-Active", Value = "In-Active" },



                                                       }, new { @class = "form-control", @id = "PT" })
                                                        @Html.ValidationMessageFor(m => m.ContactStatus, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>


                                                @*<div class="col-xs-12">

                                                        <div class="form-group">

                                                            <label>Address:<span style="color:#ff0000;">*</span></label>
                                                            @if (ViewBag.Address == null)
                                                            {
                                                                @Html.TextAreaFor(model => model.Address, new { placeholder = "Enter Address", @class = "form-control form-control-custom Address", @rows = "3" })
                                                              @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextAreaFor(model => model.Address, new { placeholder = "Enter Address", @class = "form-control form-control-custom Address", @rows = "3" })

                                                            }
                                                        </div>
                                                    </div>*@
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group hidden">
                                                        <label>Select address:</label><span style="color:#FA3746;">*</span>

                                                        @{
                                                            if (Model != null)
                                                            {
                                                                if (ViewBag.ComAddr != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Address, new SelectList(@ViewBag.ComAddr, "Code", "Name"), "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })
                                                                }

                                                                else if (ViewData["ComAddr1"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Address, (IEnumerable<SelectListItem>)ViewData["ComAddr1"], "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })

                                                                }

                                                            }
                                                            else
                                                            {
                                                                @*@Html.DropDownListFor(model => model.Address, new SelectList(Enumerable.Empty<SelectListItem>(), "--Select Company Address--", "--Select Company Address--"), "--Select Company Address--", new { @id = "ddlCaddr", @class = "form-control" })*@
                                                        if (ViewData["ComAddr1"] != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.Address, (IEnumerable<SelectListItem>)ViewData["ComAddr1"], "---Select Company Address---", new { @id = "ddlCaddr", @class = "form-control" })

                                                            }
                                                        }
                                                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger validation-msg" })
                                                        }
                                                    </div>
                                                </div>

                                                <input type="hidden" name="Actiontype" id="ActionType" value="@ActionType" />
                                                <div class="col-xs-12 text-center">
                                                    <button type="button" class="btn btn-default news-btn" id="btnReset" value="Reset" title="Reset">Reset</button>
                                                    <button type="submit" class="btn btn-default insert-form-btn" id="btnSaveContact">@*<i class="fa fa-plus-circle"></i>*@ Save Contact</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.col -->

                    </div><!-- /.row -->
                </div><!-- /.data table col -->

            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
  <!--End of main content 3-->
                                                            }

@***************************************************************************Script Started Here**************************************************************************@
<script type="text/javascript">
    $(document).ready(function () {
        Reset()
        //$("#btnSaveContact").click(function myfunction() {
        //    debugger;
        //    if (ValidateForm() == false) {
        //        return false;
        //    }
        //    else {
        //        $("#form1").submit()
        //    }
        //});
    });
    function Reset() {
        $("#btnReset").click(function myfunction() {

            location.reload();
        });
    }

    function ValidateForm() {
        //if ($("#ContactName").val() == "" || $("#ContactName").val() == null) {
        //    alert("Please Enter Contact Name First!!!");
        //    $("#ContactName").focus()
        //    return false;
        //}
        //if ($("#ddlCompanyName")[0].selectedIndex == 0) {
        //    alert("Please select Company Name First!!!");
        //    $("#CompanyName").focus()
        //    return false;
        //}
        //if ($("#ddlTitle")[0].selectedIndex == 0) {
        //    alert("Please select Title Name!!!");
        //    $("#TitleName").focus()
        //    return false;
        //}
        //if ($("#Pan_No").val() == "" || $("#Pan_No").val() == null) {
        //    alert("Please Enter Pan Number!!!");
        //    $("#Pan_No").focus()
        //    return false;
        //}
        //if ($("#Mobile").val() == "" || $("#Mobile").val() == null) {
        //    alert("Please Enter Mobile Number!!!");
        //    $("#Mobile").focus()
        //    return false;
        //}


        //else
        //{
        return true;
        //}
    }
</script>

@**************************************************************************************@
<script>

    $(document).ready(function () {
        $("#ddlCompanyName").change(function () {
            debugger;
            varcityText = $("#ddlCompanyName option:selected").text();
            var CompanyId = $("#ddlCompanyName option:selected").val();
            $("#hidCompany").val(varcityText);
            $('#CompId').val(CompanyId);
        });
    });
    debugger
    $('#CompId').val('@ViewBag.CompanyId');
    $('#Actiontype').val('@ViewBag.ActionType')
    $(function () {
        $(".CompanyName").autocomplete({
            source: function (request, response) {

                $.ajax({
                    url: '@Url.Action("GetCompanyName", "EnquiryMaster")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CompanyName, value: item.CompanyName };
                        }));
                    },
                    error: function (response) {
                     //   alert(response.responseText);
                    },
                    //select: function (event, ui) {
                    //    $('#Fax_No').val(ui.item.CompanyName);
                    //    alert(ui.item.CompanyName)
                    //    return false;
                    //},
                    failure: function (response) {
                     //   alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {

            },
            minLength: 2
        });

    });

     $(document).ready(function () {
         @*$("#CompanyName").change(function () {
            if ($("#CompanyName").val() != "") {
                var Address = {};
                Address.url = '@Url.Action("GetAddressOfCompany", "CompanyMasters")';
                Address.type = "Get";
                Address.data = { Company_Name: $("#CompanyName").val() };
                Address.datatype = "json";
                Address.ContentType = "application/json";
                Address.success = function (address) {

                };
                Address.error = function () { alert("Error in Getting Address !"); };
                $.ajax(Address);
            }
            else {
                $("#Address").empty();
                $("#Address").prop("disabled", true);
            }
        });*@
         $(document).ready(function () {       
             debugger;
            var CompanyName= $("#CompanyName").val();
             //  alert(this.value);
             //$('#EndCustomer').val($('#CompanyName').val())
             $.ajax({
                 url: '@Url.Action("GetCompanyAddress", "CompanyMasters")',
                 data: "{ 'Prefix': '" + CompanyName + "'}",
                 dataType: "json",
                 type: "POST",
                 contentType: "application/json; charset=utf-8",
                 success: function (response) {

                     $('#ddlCaddr').empty();

                     var s = '<option value="-1">--Select Address--</option>';
                     for (var i = 0; i < response.length; i++) {
                         s += '<option value="' + response[i].Code + '">' + response[i].Name + '</option>';

                     }
                     $("#ddlCaddr").html(s);

                 },
                 error: function (response) {
                     // alert(response.responseText);
                 },
                 failure: function (response) {
                     //   alert(response.responseText);
                 }
             });
         })

         $('#CompanyName').blur(function () {
             debugger;
             //  alert(this.value);
             //$('#EndCustomer').val($('#CompanyName').val())
             $.ajax({
                 url: '@Url.Action("GetCompanyAddress", "CompanyMasters")',
                 data: "{ 'Prefix': '" + this.value + "'}",
                 dataType: "json",
                 type: "POST",
                 contentType: "application/json; charset=utf-8",
                 success: function (response) {

                     $('#ddlCaddr').empty();

                     var s = '<option value="-1">--Select Address--</option>';
                     for (var i = 0; i < response.length; i++) {
                         s += '<option value="' + response[i].Code + '">' + response[i].Name + '</option>';

                     }
                     $("#ddlCaddr").html(s);

                 },
                 error: function (response) {
                     // alert(response.responseText);
                 },
                 failure: function (response) {
                     //   alert(response.responseText);
                 }
             });
         })
    });
</script>


@*<script language="javascript" type="text/javascript">
    $(function () {
        debugger
        $("#CompanyName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCompanyName", "EnquiryMaster")',

                    dataType: "json",
                    data: "{ 'data': '" + request.term + "' }",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.CompanyName,


                            }
                        }));
                    }
                });
            },
            select: function (event, ui) {
                $('#CompanyName').val(ui.item.CompanyName);

                return false;
            }
        });
    });
    </script>*@

<script>
    $('#Fax_No').keypress(function (e) {
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }

        e.preventDefault();
        return false;
    });









    $('#Mobile').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#Mobile').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });

    $('#HomePhone').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#HomePhone').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });


    //$('#ContactName').keypress(function (evt) {
    //    var maxLength = 15; // as it threat maxlength-5 custom class :)

    //    // assuming that data-mask will certify that only currency format will be valid
    //    var pureValue = $(this).val().replace('.', '').replace(',', '');

    //    if (pureValue.length >= maxLength)
    //        evt.preventDefault();
    //})


    $('#ContactName').keypress(function (e) {
        debugger;
        //var maxLength = 15;
        //var pureValue = $(this).val().replace('.', '').replace(',', '');

        //var regex = new RegExp("/^([a-zA-Z]+\s)*[a-zA-Z]+$/");
        //var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        //if (regex.test(str)) {
        //    return true;
        //}
        //e.preventDefault();

        var reg_name_lastname = /^[a-zA-Z\s]*$/;

        //Validation to the user_name input field
        if (!reg_name_lastname.test($('#ContactName').val())) { //
            $('#ContactName').val("");
            alert("Correct your First Name: only letters and spaces.");
            valid = false;
        }

    });

</script>
