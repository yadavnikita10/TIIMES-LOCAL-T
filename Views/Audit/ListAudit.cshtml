@*@model IEnumerable<TuvVision.Models.Audit>*@

@model TuvVision.Models.Audit
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "ListAudit";
    Layout = "~/Views/Shared/_TuvVision.cshtml";

}



@helper CustomRenderingOfPDF(TuvVision.Models.Audit InternalAuditReport)
{


if (InternalAuditReport.PDF != null)
{
        <a href="~/IAR/@InternalAuditReport.PDF">
            <i class="fa fa-download">@InternalAuditReport.PDF</i>

        </a>
        @*<a href="/@InternalAuditReport.PDF">
                <i class="fa fa-download">@InternalAuditReport.PDF</i>

            </a>*@
}
else
{
        <a>

        </a>

}


}


<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <div class="col-xs-12">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">List Of Audits</h3>
                <button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" style="margin-left: 16px" onclick="location.href='@Url.Action("Audit", "Audit")'">Schedule Audit</button>
                <button type="button" id="a" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","Audit")'"
                        >
                    Export To Excel
                </button>
            </div><!-- /.col -->

            <div class="col-xs-12">
                <hr class="custom-hr">
            </div><!-- /.col -->
            <!--Table was here-->

        </div>
        <div class="col-xs-12">
            @*<table id="example" class="display" cellspacing="0" width="100%">
                <thead>
                    <tr>


                        <th class="hidden">AuditId</th>

                        <th> Branch         </th>
                        <th> Type Of Audit    </th>
                        <th> Audit Standard  </th>
                        <th> Auditor Name    </th>
                        <th> Auditee        </th>
                        <th> Propose Date    </th>
                        <th> Schedule Date   </th>
                        <th> Remark         </th>
                        <th>Status</th>
                       <th class="remove-search">Action</th>
                    </tr>
                </thead>

                <tbody>

                    <tr class="hidden">

                        <td>AuditId</td>

                        <td> Branch         </td>
                        <td> Type Of Audit    </td>
                        <td> Audit Standard  </td>
                        <td> Auditor Name    </td>
                        <td> Auditee        </td>
                        <td> Propose Date    </td>
                        <td> Schedule Date   </td>
                        <td> Remark         </td>
                        <td> Status         </td>
                        <td class="remove-search" >Action</td>



                    </tr>

                    <tr class="hidden">
                        <td></td>

                        <td> </td>
                        <td>   </td>
                        <td>  </td>
                        <td>  </td>
                        <td> </td>
                        <td>  </td>
                        <td>  </td>
                        <td> </td>
                        <td></td>
                        <td ></td>

                    </tr>


                    @foreach (var b in Model)
                    {
                        <tr>
                            <td class="hidden">@b.AuditId</td>

                            <td>@b.Branch       </td>
                            <td>@b.TypeOfAudit  </td>
                            <td>@b.AuditStandard</td>
                            <td>@b.AuditorName  </td>
                            <td>@b.Auditee      </td>
                            <td>@b.ProposeDate</td>
                            <td>@b.ScheduleDate  </td>
                            <td>@b.Remark </td>
                            <td>
                                @if(b.ScheduleDate==null)
                                {
                                    <p>Not Schedule</p>
                                }
                                else
                                {
                                    <p>Schedule</p>
                                }
                            </td>
                            <td cRemarkslass="action-btn" style="text-align:center;">
                                <a href="@Url.Action("Audit", "Audit", new { AuditId = @b.AuditId })" class="btn btn-info btn-xs" title="Edit"><i class="fa fa-pencil"></i></a>

                                <a href="@Url.Action("Delete", "Audit", new { AuditId = @b.AuditId })" class="delete" onclick="return confirm('Are you sure you wish to Delete selected Record?');" title="Delete"><i class="fa fa-trash"></i></a>

                                <a href="@Url.Action("CreateInternal_Audit_Report", "Internal_Audit_Report", new { AuditId = @b.AuditId })" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" title="Edit">Audit Report</a>
                            </td>

                        </tr>
                    }
                </tbody>

            </table>*@

        </div>

        <div class="col-xs-12">

            <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lmd1)
                            .Build(columns =>
                            {


                                columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Audit", new { AuditId = o.AuditId }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add(c => c.Status).Titled("Status");
                                columns.Add(c => c.AuditId).Titled("Audit Id").Hidden();
                                columns.Add(c => c.AuditNumber).Titled("Audit Id");
                                
                                columns.Add(c => c.Branch).Titled("Branch");
                                columns.Add(c => c.TypeOfAudit).Titled("Type Of Audit");
                                columns.Add(c => c.AuditStandard).Titled("Audit Standard");
                                columns.Add(c => c.AuditorName).Titled("Auditor Name");
                                columns.Add(c => c.ExAuditor).Titled("External Auditor Name");
                                columns.Add(c => c.Auditee).Titled("Auditees");
                                columns.Add(c => c.SProposeDateFrom).Titled("Proposed Date (From)");

                                columns.Add(c => c.SProposeDateTo).Titled("Proposed Date (To)");
                                columns.Add(c => c.SActualDateFrom).Titled("Date of Audit (From Date)");
                                columns.Add(c => c.SActualDateTo).Titled("Date of Audit (To Date)");

                                columns.Add(c => c.TotalFindings).Titled("Total Findings");
                                columns.Add(c => c.AreFindingsClose).Titled("Are Findings Close");
                                
                                columns.Add().Titled("PDF").RenderedAs(c => CustomRenderingOfPDF(c)).Sortable(true);

                                //columns.Add(c => c.Remark).Titled("Remark");





                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { AuditId = o.AuditId }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));
                                //columns.Add().Titled("Audit Report").Encoded(false).RenderedAs(o => Html.ActionLink("Audit Report", "CreateInternal_Audit_Report", "Internal_Audit_Report", new { AuditId = o.AuditId }, new { @class = "btn btn-info dynamic-function-btn dynamic-function-btn-2", title = "Audit Report" })).Css("aa");
                                //  <a href = "@Url.Action("CreateInternal_Audit_Report", "Internal_Audit_Report", new { AuditId = @b.AuditId })" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" title="Edit">Audit Report</a>



                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>





        </div>


    </div>

</div>



<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>


<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

