@model TuvVision.Models.Engineering
@{
    ViewBag.Title = "ExpEngineering";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int j = 0;
    int k = 0;
}



<script src="~/AllJsAndCss/moment.min.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<script>
    //$(function () {
    //    $("#datepicker").datepicker();
    //    $("#format").on("change", function () {
    //        $("#datepicker").datepicker("option", "dateFormat", $(this).val());
    //    });
    //});

</script>

<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />




<script>
    $(function ()
    {
        $(".Date1").datepicker({
            //dateFormat: 'dd/mm/yy',//check change
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });

    $(function () {
        $(".CEstimatedEndDate").datepicker({
            //dateFormat: 'dd/mm/yy',//check change
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });

    $(function () {
        $(".IdStatusUpdatedOn").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });


</script>

<style>
    body {
        overflow-x: hidden;
    }
      #preloader {
        position: fixed;
        width: 100%;
        height: 100vh;
        background: #fff url('../../Content/Loader/loader.gif') no-repeat center center;
        z-index: 9999;
        /*background: url('../../Content/Loader/loader.gif')no-repeat center center;*/
    }
</style>

<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            @*class="container-fluid"*@
            <div class="col-xs-12 col-sm-offset-1 col-sm-10">

                <div class="col-xs-12">
                    <div class="row">


                        <br />

                        <h5 class="dynamic-page-title dynamic-page-title-2">@Session["ExpeditingType"]Expediting Report Number : @Session["VisitReportNo"]</h5>

                        <div class="col-xs-12">


                            @if (Model.PK_Call_Id != "")
                            {
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpeditingReport", "Expediting",new { @PK_Call_ID = Model.PK_Call_Id} )'"> General</button>

                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpItemDescription", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Item Description</button>

                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpProgress", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Progress</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("EXp_commercial", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Commercial</button>
                                <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("ExpEngineering", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Engineering</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpMaterial", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Procurement</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpManufacturing", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Manufacturing</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpFinalStage", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Final Stage</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpDelays", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Item Wise Delays</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpConcerns", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Concerns</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("PhotoAttachement", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Photo</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("Observation", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Observation</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("Records", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Records</button>
                            }



                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Engineering</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">

                                                @using (Html.BeginForm("ExpEngineering", "Expediting", FormMethod.Post, new { enctype = "multipart/form-data", @id = "formiid" }))
                                                {
                                                    @Html.HiddenFor(m => m.PK_Call_Id)

                                                    <div hidden class="col-xs-8" style="text-align:center;">

                                                        <div class="col-xs-12 col-sm-4">
                                                            <label>(Action initiated for %)</label>
                                                            <input type="text" class="form-control" id="idEngineering" value="100" />
                                                        </div>
                                                        @*<div class="col-xs-12 col-sm-3">

                                                <button type="button" class="btn btn-default insert-form-btn" onclick="idbtnSaveEng();" title="Add New Status" style="margin-top: 25px">Add</button>
                                            </div>*@
                                                    </div>


                                                    <div class="row">
                                                        <div id="DomesticCurrency">


                                                            <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 117%; margin-left: -71px;">
                                                                <tr style="background-color:#104193;color:white;">

                                                                    <td width="120px" style="text-align: center;vertical-align:central;">
                                                                        PO Item Number
                                                                    </td>
                                                                    <td width="150px" style="text-align: center;vertical-align:central;">
                                                                         Document Type
                                                                    </td>
                                                                    <td width="380px" style="text-align: center;vertical-align:central;">
                                                                       Document Number and revision date 
                                                                    </td>
                                                                    <td width="60px" style="text-align: center;vertical-align:central;">
                                                                        Approval code Status
                                                                    </td>
                                                                    <td width="220px" style="text-align: center;vertical-align:central;">
                                                                        Status
                                                                    </td>
                                                                    <td width="100px" style="text-align: center;vertical-align:central;">
                                                                        Status Changed/Updated On
                                                                    </td>
                                                                    <td width="100px" style="text-align: center;vertical-align:central;">
                                                                        Estimated End Date

                                                                    </td>
                                                                    <td width="80px" style="text-align: center;vertical-align:central;">
                                                                        Engineering Progress %

                                                                    </td>

                                                                    @*<td width="140px" style="text-align: center;vertical-align:central;">
                                                            Engineering Delay in days
                                                        </td>*@


                                                                </tr>

                                                                @{
                                                                    int i = 0;
                                                                }

                                                                @if (ViewBag.lstDOrderType != null)
                                                                {
                                                                    if (ViewBag.lstDOrderType.Count != 0)
                                                                    {
                                                                        foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.Engineering>)
                                                                        {
                                                                            i = i + 1;
                                                                            <tr class="trDomestic" style="background-color:#FFFFFF">


                                                                                @Html.HiddenFor(model => model.lstEngineering[j].PK_Engi_Id, new { @style = "text-align:center", @placeholder = "PK_Engi_Id", @class = "form-control CPK_Engi_Id", @Value = item.PK_Engi_Id, @id = "PK_Engi_Id", @onkeypress = "return isNumberKey(event);" })

                                                                                <td>
                                                                                    @if (ViewBag.BindItem != null)
                                                                                    {

                                                                                        @*@Html.DropDownListFor(m => m.lstEngineering[j].Item, new SelectList(@ViewBag.BindItem, "Value", "Text", item.Item), "--Select--", new { @id = "ddlItem", @class = "form-control CItem" })*@
                                                                                        @Html.ListBoxFor(m => m.lstEngineering[j].Item, new MultiSelectList(@ViewBag.BindItem, "Value", "Text", item.Item?.Split(',')), new { @id = "ddlItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                                        @Html.HiddenFor(m => m.lstEngineering[j].Item)
                                                                                    }
                                                                                </td>

                                                                                <td>

                                                                                    @Html.DropDownListFor(m => m.lstEngineering[j].ReferenceDocument, new SelectList(@ViewBag.SubDocument, "Value", "Text", item.ReferenceDocument), "--Select--", new { @id = "IDReferenceDocument", @class = "form-control CReferenceDocument" })
                                                                                    @Html.HiddenFor(m => m.lstEngineering[j].ReferenceDocument)
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(model => model.lstEngineering[j].Number, new { @placeholder = "Number", @class = "form-control CNumber", @Value = item.Number, @id = "ddlIOrderRate" })
                                                                                    @Html.ValidationMessageFor(model => model.lstEngineering[j].Number, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(model => model.lstEngineering[j].QuantityNumber, new { @placeholder = "Number", @class = "form-control QuantityNumber", @Value = item.QuantityNumber, @id = "QuantityNumber", @onkeypress = "return isNumberKey(event);" })
                                                                                    @Html.ValidationMessageFor(model => model.lstEngineering[j].QuantityNumber, "", new { @class = "text-danger validation-msg QuantityNumber" })
                                                                                </td>
                                                                                <td>
                                                                                    @*@Html.DropDownListFor(m => m.lstEngineering[j].Status, new List<SelectListItem>
                                                                        {
                                                                             new SelectListItem{ Text="Select", Value = "" },
                                                                                     new SelectListItem{ Text="None", Value = "None" , Selected = (item.Status == "None") ?true : false} ,
                                                                                     new SelectListItem{ Text="Under Preparation", Value = "Under Preparation", Selected = (item.Status == "Under Preparation") ?true : false },
                                                                                     new SelectListItem{ Text="Submitted", Value = "Submitted" , Selected = (item.Status == "Submitted") ?true : false} ,
                                                                                      new SelectListItem{ Text="Commented", Value = "Commented" , Selected = (item.Status == "Commented") ?true : false} ,
                                                                                      new SelectListItem{ Text="Re-submitted", Value = "Re-submitted" , Selected = (item.Status == "Re-submitted") ?true : false} ,
                                                                                      new SelectListItem{ Text="Approved with comment", Value = "Approved with comment" , Selected = (item.Status == "Approved with comment") ?true : false} ,
                                                                                      new SelectListItem{ Text="Approved", Value = "Approved" , Selected = (item.Status == "Approved") ?true : false} ,


                                                                        },
                                                                                     new { @style = "text-align:center", @class = "form-control CStatus", @id = "ddlStatus" })*@


                                                                                    @if (ViewBag.SubCatlist != null)
                                                                                    {

                                                                                        @Html.DropDownListFor(m => m.lstEngineering[j].Status, new SelectList(@ViewBag.SubCatlist, "Value", "Text", item.Status), "--Select--", new { @id = "ddlStatus", @class = "form-control CStatus" })
                                                                                        @Html.HiddenFor(m => m.lstEngineering[j].Status)
                                                                                    }

                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(m => m.lstEngineering[j].StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "StatusUpdatedOn", @class = "form-control Date1", autocomplete = "off", @Value = item.StatusUpdatedOn })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(m => m.lstEngineering[j].EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off", @Value = item.EstimatedEndDate })
                                                                                </td>

                                                                                <td>
                                                                                    @Html.TextBoxFor(model => model.lstEngineering[j].Actual_Progressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @Value = item.Actual_Progressper, @readonly = "readonly" })
                                                                                    @Html.ValidationMessageFor(model => model.lstEngineering[j].Actual_Progressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                                </td>
                                                                                @*<td>
                                                                        @Html.TextBoxFor(model => model.lstEngineering[j].delaydays, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddldelaydays", @Value = item.delaydays, @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.lstEngineering[j].delaydays, "", new { @class = "text-danger validation-msg delaydays" })
                                                                    </td>*@


                                                                                <td>
                                                                                    @if (i == 1)
                                                                                    {
                                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                        <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                        <button type="button" id="btnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                    }

                                                                                </td>
                                                                            </tr>

                                                                            j++;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.HiddenFor(model => model.PK_Engi_Id, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CPK_Engi_Id" })
                                                                        <tr class="trDomestic" style="background-color:#f0f0f0">

                                                                            <td>
                                                                                @if (ViewBag.BindItem != null)
                                                                                {

                                                                                    @Html.DropDownListFor(m => m.Item, new SelectList(@ViewBag.BindItem, "Value", "Text"), new { @id = "IdItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                                    @Html.HiddenFor(m => m.Item)
                                                                                }
                                                                            </td>


                                                                            <td>
                                                                                @Html.DropDownListFor(m => m.ReferenceDocument, new SelectList(ViewBag.SubDocument, "Value", "Text"), "--Select--", new { @id = "IDReferenceDocument" + i, @class = "form-control CReferenceDocument" })
                                                                                @Html.HiddenFor(m => m.ReferenceDocument)
                                                                            </td>



                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.Number, new { @style = "text-align:left", @placeholder = "", @class = "form-control  CNumber" })
                                                                                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.QuantityNumber, new { @style = "text-align:left", @placeholder = "", @class = "form-control  QuantityNumber" })
                                                                                @Html.ValidationMessageFor(model => model.QuantityNumber, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @if (ViewBag.SubCatlist != null)
                                                                                {

                                                                                    @Html.DropDownListFor(m => m.Status, new SelectList(@ViewBag.SubCatlist, "Value", "Text"), "--Select--", new { @id = "ddlStatus", @class = "form-control CStatus" })
                                                                                    @Html.HiddenFor(m => m.Status)
                                                                                }
                                                                            </td>
                                                                            <td>

                                                                                @Html.TextBoxFor(model => model.StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Status Updated On", @class = "form-control Date1", autocomplete = "off" })
                                                                                @Html.ValidationMessageFor(model => model.StatusUpdatedOn, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(m => m.EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off" })
                                                                                @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger validation-msg" })
                                                                            </td>


                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.Actual_Progressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.Actual_Progressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                            </td>

                                                                            @*<td>
                                                                    @Html.TextBoxFor(model => model.delaydays, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddldelaydays", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                    @Html.ValidationMessageFor(model => model.delaydays, "", new { @class = "text-danger validation-msg delaydays" })
                                                                </td>*@


                                                                            <td>

                                                                                <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>

                                                                            </td>



                                                                        </tr>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                        @Html.HiddenFor(model => model.PK_Engi_Id, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CPK_Engi_Id", @onkeypress = "return isNumberKey(event);" })

                                                                        <td>
                                                                            @if (ViewBag.BindItem != null)
                                                                            {

                                                                                @Html.DropDownListFor(m => m.Item, new SelectList(@ViewBag.BindItem, "Value", "Text"),  new { @id = "IdItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                                @Html.HiddenFor(m => m.Item)
                                                                            }
                                                                        </td>


                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.ReferenceDocument, new SelectList(ViewBag.SubDocument, "Value", "Text"), "--Select--", new { @id = "IDReferenceDocument" + i, @class = "form-control CReferenceDocument" })
                                                                            @Html.HiddenFor(m => m.ReferenceDocument)
                                                                        </td>



                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Number, new { @style = "text-align:left", @placeholder = "", @class = "form-control  CNumber" })
                                                                            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.QuantityNumber, new { @style = "text-align:left", @placeholder = "", @class = "form-control  QuantityNumber" })
                                                                            @Html.ValidationMessageFor(model => model.QuantityNumber, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @if (ViewBag.SubCatlist != null)
                                                                            {

                                                                                @Html.DropDownListFor(m => m.Status, new SelectList(@ViewBag.SubCatlist, "Value", "Text"), "--Select--", new { @id = "ddlStatus", @class = "form-control CStatus" })
                                                                                @Html.HiddenFor(m => m.Status)
                                                                            }

                                                                            @Html.ValidationMessageFor(model => model.ReferenceDocument, "", new { @style = "text-align:left", @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Status Updated On", @class = "form-control Date1", autocomplete = "off" })
                                                                            @Html.ValidationMessageFor(model => model.StatusUpdatedOn, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(m => m.EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off" })
                                                                            @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Actual_Progressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.Actual_Progressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                        </td>

                                                                        @*<td>
                                                                @Html.TextBoxFor(model => model.delaydays, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddldelaydays", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.delaydays, "", new { @class = "text-danger validation-msg delaydays" })
                                                            </td>*@

                                                                        <td>
                                                                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                        </td>



                                                                    </tr>
                                                                }

                                                            </table><br />

                                                        </div>

                                                    </div>




                                                    <div class="col-xs-12 text-center">
                                                        <button type="button" class="btn btn-default insert-form-btn" id="btnsave">Save</button>

                                                    </div>

                                                                    }


                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

 


    var ITRowCount = 1;
    $(document).ready(function () {
       

        $(document).on("click", ".classAdd", function () { //
           // $("body").prepend('<div id="preloader"></div>');
            debugger

            
           

            var rowCount = $('.data-contact-person').length + 1;


            if ($('#DTestTable tr').length - 1 >= ITRowCount) {
                var count = $('#DTestTable tr').length - 1;
                ITRowCount = count;
            }

            ddlstatus(ITRowCount)
            BindItemByCallId(ITRowCount)
            ddlDocument(ITRowCount)

            var contactdiv = '<tr class="trDomestic">' +
                '<td>' +

                    '<select name="CItem" class="form-control CItem" id="Idtem' + ITRowCount + '"multiple="multiple" ><option value=""></option></select>  </td>' +
            //' <select name="CReferenceDocument"  class="form-control CReferenceDocument" id="IDReferenceDocument' + DTRowCount + '" > <option value="">Select</option> <option value="QAP">QAP</option> <option value="Drawing">Drawing</option> <option value="TDS">TDS</option> </select>  </td>' +
             ' <td><select name="CReferenceDocument"  class="form-control CReferenceDocument" id="IDReferenceDocument' + ITRowCount + '" > <option value="">--Select--</option> </select>  </td>' +
                '<td><input type="text" name="Number" class="form-control CNumber" /></td>' +
                '<td><input type="text" name="QuantityNumber" class="form-control QuantityNumber"/></td>' +

                 '<td>' +

           //'<select name="CStatus" class="form-control CStatus" id="departmentsDropdown' + DTRowCount + '" ><option value="">Select</option></select>  </td>' +
           '<select name="CStatus" class="form-control CStatus" id="IddepartmentsDropdown' + ITRowCount + '" ><option value="">--Select--</option></select>  </td>' +
           '<td><input type="text" class="form-control Date1" placeholder="dd/mm/yyyy" id="StatusUpdatedOn' + ITRowCount + '" /></td>' +

                '<td><input type="text" class="form-control CEstimatedEndDate" placeholder="dd/mm/yyyy" id="IdEstimatedEndDate' + ITRowCount + '" /></td>' +
                ' <td><input type="text" style="text-align:center" name="IdActual_Progressper"  id="IdActual_Progressper"  class="form-control" disabled/></td>' +
                  //' <td><input type="text" style="text-align:center" name="Iddelaydays"  id="Iddelaydays"  class="form-control" disabled/></td>' +
                  
             '<td><button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button><button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button> ' +





               '</tr>';
            

            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class
           

            $(function () {
                $(".Date1").datepicker({

                    dateFormat: 'dd/mm/yy',//check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",

                });
            });

            $(function () {
                $(".CEstimatedEndDate").datepicker({
                    //dateFormat: 'dd/mm/yy',//check change
                    dateFormat: 'dd/mm/yy',//check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",
                   
                });
            });

           
        });
    });
</script>

@*<script>
    $(document).on("click", ".IdeleteContact", function () {
        if (confirm("Do you really want to remove this row?")) {
            ITRowCount = ITRowCount - 1;
            $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        }
    });
</script>*@

<script>
    $(document).on("click", ".IdeleteContact", function () {
        if (confirm("Do you really want to remove this row?")) {
            ITRowCount = ITRowCount - 1;
            debugger;
            // var varPK_Engi_Id = $(this).find('#PK_Engi_Id').val();
            var varPK_Engi_Id = $(this).closest('tr').find('#PK_Engi_Id').val();
            if (typeof varPK_Engi_Id !== 'undefined')  {
                // Call AJAX
                $.ajax({
                    url:'@Url.Action("deleteengData", "Expediting")',
                    type: 'POST',
                    data: { varPK_Engi_Id: varPK_Engi_Id },
                    success: function(response) {
                        //alert("Data delete successful!");
                    },
                    error: function(xhr, status, error) {
                        alert("Something Went Wrong!.");
                    }
                });
            }
            $(this).closest("tr").remove();
        }
    });
</script>

@*<script>
$(document).ajaxStart(function () {
    $("body").prepend('<div id="preloader"></div>');
});

$(document).ajaxStop(function () {
    $("#preloader").remove();
});

</script>*@



<script type="text/javascript">
        $("#btnsave").on('click', function (event) {
            //$("body").prepend('<div id="preloader"></div>');
            debugger;
            idbtnSaveEng();

            var a = "1";
            var DArray = [];


            var PK_Call_Id = $("#PK_Call_Id").val();
            $('.trDomestic').each(function () {
                var trD = {};

                //var varReferenceDocument = $(this).find('.CReferenceDocument').val();
                var varReferenceDocument = $(this).find('.CReferenceDocument').val();//$(".CReferenceDocument option:selected").val();


                var varNumber = $(this).find('.CNumber').val();
                var varStatus = $(this).find('.CStatus').val();//$(".CStatus option:selected").val();
                var varDate1 = $(this).find('.Date1').val();
                var varItem = $(this).find('.CItem').val();
                var varQuantityNumber = $(this).find('.QuantityNumber').val();
                var EstimatedEndDate = $(this).find('.CEstimatedEndDate').val();

                //var convertedFormat = moment(varDate1).format('DD/MM/YYYY');
                //if (convertedFormat == 'Invalid date') {
                //    convertedFormat = varDate1;
                //}
                //else {
                //    convertedFormat = convertedFormat;
                //}
                //var convertedFormat1 = moment(EstimatedEndDate).format('DD/MM/YYYY');
                //if (convertedFormat1 == 'Invalid date') {
                //    convertedFormat1 = EstimatedEndDate;
                //}
                //else {
                //    convertedFormat1 = convertedFormat1;
                //}
                //var format3 = moment($("#date_val").val()).format('DD/MM/YYYY');
                //var varDate2 = document.write($.format.date(varDate1, "dd/MM/yyyy"));
                var varPK_Engi_Id = $(this).find('#PK_Engi_Id').val();








                if (EstimatedEndDate == '' && (varStatus !== "7")) {
                    a = "9"
                }
                if (varDate1 == '' && (varStatus !== "1")) {
                    a = "6";
                }
                if (varStatus == '-1') {
                    a = "5";
                }
                if (varQuantityNumber == '') {
                    a = "10"
                }
                if (varNumber == '' || varNumber == null) {

                    a = "4";
                }
                if (varReferenceDocument == '-1') {
                    a = "3";
                }
                if (varItem == '' || varItem == null) {
                    a = "7";
                }




                if (a == "1") {
                    //trD['varReferenceDocument'] = varReferenceDocument;
                    //trD['varNumber'] = varNumber;
                    //trD['varStatus'] = varStatus;
                    //trD['varDate1'] = varDate1;
                    varItemString = varItem.join(',');


                    //trD['Item'] = varItem;
                    //trD['ReferenceDocument'] = varReferenceDocument;
                    //trD['Number'] = varNumber;
                    //trD['Status'] = varStatus;
                    //trD['StatusUpdatedOn'] = convertedFormat;
                    //trD['PK_Engi_Id'] = varPK_Engi_Id;

                    var trD = {
                        'Item': varItemString,
                        'ReferenceDocument': varReferenceDocument,
                        'Number': varNumber,
                        'Status': varStatus,
                        'StatusUpdatedOn': varDate1,
                        'EstimatedEndDate': EstimatedEndDate,
                        'PK_Engi_Id': varPK_Engi_Id,
                        'QuantityNumber': varQuantityNumber
                    };






                    //trD['varPK_Engi_Id'] = varPK_Engi_Id;


                    DArray.push(trD);
                }
                else {

                    return false;
                }

            });



            debugger;
            if (a == "3") {
                alert("Please Enter Document Name!");
                return false;
            }
            if (a == "4") {
                alert("Please Enter Document Number and revision date!");
                return false;
            }
            if (a == "5") {
                alert("Please Enter Status!");
                return false;
            }
            if (a == "6") {
                alert("Please Enter Status Changed/Updated On!");
                return false;
            }
            if (a == "7") {
                alert("Please Select Item!");
                return false;
            }
            if (a == "9") {
                alert("Please Enter Estimated End Date!");
                return false;
            }
            if (a == "10") {
                alert("Please Enter Approval core Status!");
                return false;
            }



            var ModelVisitReport =
           {
               PK_Call_Id: PK_Call_Id,
               //Number: varNumber,
               //Status: varStatus,
               //StatusUpdatedOn: varDate1,

           }


            $.ajax({
                type: 'POST',
                url: '@Url.Action("ExpEngineering", "Expediting")',
                dataType: 'json',
                async: false,
                data: JSON.stringify({ IVR: ModelVisitReport, "DArray": DArray }),

                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {

                    if (response.result == 'Redirect') {
                        alert("Details has been Save successfully!!!")
                        //$("#preloader").remove();
                        window.location = response.url;
                    }

                    if (response.result == 'Update') {
                        alert("Details has been updated successfully!!!")
                        //$("#preloader").remove();
                        window.location = response.url;
                    }
                }
            })




        
        });
   
</script>

<script type="text/javascript">
    //$(document).ready(function () {
    debugger

    function ddlstatus(ITRowCount) {
        //$(document).ready(function () {
        var PK_Call_Id = $("#PK_Call_Id").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetStatusData", "Expediting")',
            data: { "PK_Call_Id": PK_Call_Id },
            success: function (data) {
                var s = '<option value="-1">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                $("#IddepartmentsDropdown" + ITRowCount).html(s);
                //$(".CStatus").html(s);

            }
        });
        // });
    }

    function ddlDocument(ITRowCount) {
        //$(document).ready(function () {
        var PK_Call_Id = $("#PK_Call_Id").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDocumentData", "Expediting")',
            data: { "PK_Call_Id": PK_Call_Id },
            success: function (data) {
                var s = '<option value="-1">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                $("#IDReferenceDocument" + ITRowCount).html(s);
                //$(".CStatus").html(s);

            }
        });
        // });
    }

    // });

    function BindItemByCallId(ITRowCount) {
        var PK_Call_Id = $("#PK_Call_Id").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetItemByPK_Call_Id", "Expediting")',
            data: { "PK_Call_Id": PK_Call_Id },
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                $("#Idtem" + ITRowCount).html(s);

                // Initialize Select2 on the updated dropdown
                $("#Idtem" + ITRowCount).multiselect({
                    includeSelectAllOption: true, // Enable the "Select All" option
                    selectAllText: 'Select All', // Customize the text for "Select All" option
                    enableFiltering: true, // Enable filtering/searching
                    enableCaseInsensitiveFiltering: true, // Make the filtering case-insensitive
                    maxHeight: 300 // Adjust the maximum height of the dropdown
                });
            }
        });
    }


</script>


<!-- Include the necessary CSS and JS files for Bootstrap Multiselect -->
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>

<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />


<script>
    $(document).ready(function () {
        // Initialize multiselect dropdown
        $('.CItem').multiselect({
            includeSelectAllOption: true
        });

        // Optional: Add event handlers if needed
        $('.CItem').change(function () {
            // Handle change event
            console.log($(this).val()); // Log selected values to the console
        });
    });
</script>


<script>
    function idbtnSaveEng() {
        debugger;

        var PK_Call_Id = $("#PK_Call_Id").val();
        var ActionValue = $("#idEngineering").val();
        var stage = "1";

        if (ActionValue == "0") {
            alert("please enter Action Value");
            return false;
        }


        if (parseFloat(ActionValue) > 100) {
            alert("Status value cannot exceed 100.");
            return;

        }

        $.ajax({
            type: "POST",
            url: '@Url.Action("StatusSaveEng", "Expediting")',
            data: { PK_Call_Id: PK_Call_Id, ActionValue: ActionValue, stage: stage },
            async: false,
            success: function (data) {
                // alert("Data Added successfully");
                //location.reload();
            },
            error: function (error) {
                console.error('Error saving status:', error);
            }
        });
    }
</script>



<script>
    $(document).ready(function () {
        debugger;
        var PK_Call_Id = $("#PK_Call_Id").val();
        var stage = "1";
        $.ajax({
            url: '@Url.Action("GetActionData", "Expediting")',
            type: 'GET',
            data: {
                PK_Call_Id: PK_Call_Id,
                stage: stage
            },
            Async: false,
            success: function (response) {
                debugger;
                var data1 = JSON.parse(response);
                var data2 = JSON.stringify(data1);


                $("#idEngineering").val(data1[0].Actionvalue);
            },
            error: function (error) {
                console.error('Error fetching data:', error);
            }
        });
    });

</script>









