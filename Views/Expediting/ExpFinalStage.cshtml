@model TuvVision.Models.FinalStages
@{
    ViewBag.Title = "ExpFinalStage";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    int j = 0;
    int k = 0;
}



<script src="~/AllJsAndCss/moment.min.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
    $(function () {
        $("#datepicker").datepicker();
        $("#format").on("change", function () {
            $("#datepicker").datepicker("option", "dateFormat", $(this).val());
        });
    });

</script>

<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />




<script>
    $(function () {
        $(".CStatusUpdatedOn").datepicker({
            //dateFormat: 'dd/mm/yy',//check change
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });

    $(function () {
        $(".COrderPlacedOn").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });

    $(function () {
        $(".CEstimatedEndDate").datepicker({
            //dateFormat: 'dd/mm/yy',//check change
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            //maxDate: "+60d",
            //minDate: "-60d"
        });
    });


</script>


<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            @*class="container-fluid"*@
            <div class="col-xs-12 col-sm-offset-1 col-sm-10">

                <div class="col-xs-12">
                    <div class="row">

                        <br />

                        <h5 class="dynamic-page-title dynamic-page-title-2">@Session["ExpeditingType"]Expediting Report Number : @Session["VisitReportNo"]</h5>
                        <div class="col-xs-12">


                            @if (Model.PK_Call_Id != "")
                            {
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpeditingReport", "Expediting",new { @PK_Call_ID = Model.PK_Call_Id} )'"> General</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpItemDescription", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Item Description</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpProgress", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Progress</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("EXp_commercial", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Commercial</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpEngineering", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Engineering</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpMaterial", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Procurement</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpManufacturing", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Manufacturing</button>
                                <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("ExpFinalStage", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Final Stage</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpDelays", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Item Wise Delays</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ExpConcerns", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Concerns</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("PhotoAttachement", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Photo</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("Observation", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Observation</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("Records", "Expediting",new { @PK_Call_Id = Model.PK_Call_Id} )'">Records</button>
                            }



                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Final Stage</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">

                                                @Html.HiddenFor(m => m.PK_Call_Id)
                                                <div hidden class="col-xs-8" style="text-align:center;">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <label>(Action initiated for %)</label>
                                                        <input type="text" class="form-control" id="idFinalStage" value="100" />
                                                    </div>
                                                    @*<div class="col-xs-12 col-sm-3">

                                            <button type="button" class="btn btn-default insert-form-btn" onclick="idbtnSaveEng();" title="Add New Status" style="margin-top: 25px">Add</button>
                                        </div>*@
                                                </div>
                                                <div class="row">
                                                    <div id="DomesticCurrency">


                                                        <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 120%; margin-left: -84px">
                                                            <tr style="background-color:#104193;color:white">

                                                                <td width="140px" style="text-align: center;vertical-align:central;">
                                                                    PO Item Number
                                                                </td>
                                                                <td width="260px" style="text-align: center;vertical-align:central;">
                                                                    Stage
                                                                </td>
                                                                <td width="170px" style="text-align: center;vertical-align:central;">
                                                                    Status
                                                                </td>
                                                                <td width="170px" style="text-align: center;vertical-align:central;">
                                                                    Status Changed/Updated On
                                                                </td>
                                                                <td width="170px" style="text-align: center;vertical-align:central;">
                                                                    Estimated End Date
                                                                </td>
                                                                <td width="140px" style="text-align: center;vertical-align:central;">
                                                                    Final Stage Progress %
                                                                </td>
                                                                @*<td width="190px" style="text-align: center;vertical-align:central;">
                                                        Final Stage Delay in Days
                                                    </td>*@


                                                            </tr>

                                                            @{
                                                                int i = 0;
                                                            }

                                                            @if (ViewBag.lstManufacturing != null)
                                                            {
                                                                if (ViewBag.lstManufacturing.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstManufacturing as IEnumerable<TuvVision.Models.FinalStages>)
                                                                    {
                                                                        i = i + 1;
                                                                        <tr class="trDomestic" style="background-color:#FFFFFF">


                                                                            @Html.HiddenFor(model => model.lstStages[j].PK_FinalStage_Id, new { @style = "text-align:center", @placeholder = "PK_FinalStage_Id", @class = "form-control CPK_FinalStage_Id", @Value = item.PK_FinalStage_Id, @id = "PK_FinalStage_Id", @onkeypress = "return isNumberKey(event);" })
                                                                            <td>
                                                                                @if (ViewBag.BindItem != null)
                                                                                {

                                                                                    @*@Html.DropDownListFor(m => m.lstStages[j].Item, new SelectList(@ViewBag.BindItem, "Value", "Text", item.Item), "--Select--", new { @id = "ddlItem", @class = "form-control CItem", @multiple = "multiple" })*@
                                                                                    @Html.ListBoxFor(m => m.lstStages[j].Item, new MultiSelectList(@ViewBag.BindItem, "Value", "Text", item.Item?.Split(',')), new { @id = "ddlItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                                    @Html.HiddenFor(m => m.lstStages[j].Item, new { @id = "ddlItem", @class = "form-control" })
                                                                                }
                                                                            </td>
                                                                            <td>
                                                                                @*@if (ViewBag.DDLFinalStageMaster != null)
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstStages[j].Stage, new SelectList(@ViewBag.DDLFinalStageMaster, "Value", "Text", item.Stage), "--Select--", new { @id = "ddlStage", @class = "form-control CStage" })
                                                                                }*@
                                                                                @Html.TextBoxFor(m => m.lstStages[j].Stage, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Stage", @class = "form-control CStage", autocomplete = "off", @Value = item.Stage })

                                                                            </td>

                                                                            <td>
                                                                                @if (ViewBag.DDLFinalStatusMaster != null)
                                                                                {
                                                                                    @Html.DropDownListFor(m => m.lstStages[j].Status, new SelectList(@ViewBag.DDLFinalStatusMaster, "Value", "Text", item.Status), "--Select--", new { @id = "ddlStatus", @class = "form-control CStatus", @Value = item.Status })
                                                                                    @Html.HiddenFor(m => m.lstStages[j].Status)
                                                                                }
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(m => m.lstStages[j].StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "StatusUpdatedOn", @class = "form-control CStatusUpdatedOn", autocomplete = "off", @Value = item.StatusUpdatedOn })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(m => m.lstStages[j].EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off", @Value = item.EstimatedEndDate })
                                                                            </td>

                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstStages[j].FinalstageProgressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @Value = item.FinalstageProgressper, @readonly = "readonly" })
                                                                                @Html.ValidationMessageFor(model => model.lstStages[j].FinalstageProgressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                            </td>
                                                                            @*<td align="center">
                                                                    @Html.TextBoxFor(model => model.lstStages[j].delaydays, new
                                                                           {
                                                                               @Value = item.delaydays,
                                                                               @class = "form-control",
                                                                               @readonly = true
                                                                           })
                                                                    @Html.ValidationMessageFor(model => model.lstStages[j].delaydays, "", new { @class = "text-danger validation-msg" })

                                                                </td>*@

                                                                            <td>
                                                                                @if (i == 1)
                                                                                {
                                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                    <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                    <button type="button" id="btnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }

                                                                            </td>
                                                                        </tr>

                                                                        j++;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @Html.HiddenFor(model => model.PK_FinalStage_Id, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CPK_Manufacturing_Id", @onkeypress = "return isNumberKey(event);" })
                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">

                                                                        <td>
                                                                            @if (ViewBag.BindItem != null)
                                                                            {

                                                                                @Html.DropDownListFor(m => m.Item, new SelectList(@ViewBag.BindItem, "Value", "Text"),  new { @id = "IdItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                                @Html.HiddenFor(m => m.Item)
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @*@if (ViewBag.DDLFinalStageMaster != null)
                                                                            {

                                                                                @Html.DropDownListFor(m => m.Stage, new SelectList(@ViewBag.DDLFinalStageMaster, "Value", "Text"), "--Select--", new { @id = "IdStage", @class = "form-control CStage" })
                                                                                @Html.HiddenFor(m => m.Item)
                                                                            }*@
                                                                            @Html.TextBoxFor(m => m.lstStages[j].Stage, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Stage", @class = "form-control CStage", autocomplete = "off" })
                                                                        </td>

                                                                        <td>
                                                                            @if (ViewBag.DDLFinalStatusMaster != null)
                                                                            {
                                                                                @Html.DropDownListFor(m => m.Status, new SelectList(@ViewBag.DDLFinalStatusMaster, "Value", "Text"), "--Select--", new { @id = "IdStatus", @class = "form-control CStatus" })
                                                                                @Html.HiddenFor(m => m.Status)
                                                                            }
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Status Updated On", @class = "form-control CStatusUpdatedOn", autocomplete = "off" })
                                                                            @Html.ValidationMessageFor(model => model.StatusUpdatedOn, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(m => m.EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off" })
                                                                            @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.FinalstageProgressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @readonly = "readonly" })
                                                                            @Html.ValidationMessageFor(model => model.FinalstageProgressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                        </td>
                                                                        @*<td align="center">
                                                                @Html.TextBoxFor(model => model.delaydays, new
                                                               {

                                                                   @class = "form-control iddelaydays",
                                                                   @readonly = true
                                                               })
                                                                @Html.ValidationMessageFor(model => model.delaydays, "", new { @class = "text-danger validation-msg" })

                                                            </td>*@



                                                                        <td>

                                                                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>

                                                                        </td>



                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                    @Html.HiddenFor(model => model.PK_FinalStage_Id, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CPK_Manufacturing_Id", @onkeypress = "return isNumberKey(event);" })
                                                                    <td>
                                                                        @if (ViewBag.BindItem != null)
                                                                        {

                                                                            @Html.DropDownListFor(m => m.Item, new SelectList(@ViewBag.BindItem, "Value", "Text"),  new { @id = "IdItem", @class = "form-control CItem", @multiple = "multiple" })
                                                                            @Html.HiddenFor(m => m.Item)
                                                                        }
                                                                    </td>
                                                                    <td>
                                                                        @*@if (ViewBag.DDLFinalStageMaster != null)
                                                                        {

                                                                            @Html.DropDownListFor(m => m.Stage, new SelectList(@ViewBag.DDLFinalStageMaster, "Value", "Text"), "--Select--", new { @id = "IdStage", @class = "form-control CStage" })
                                                                            @Html.HiddenFor(m => m.Item)
                                                                        }*@
                                                                        @Html.TextBoxFor(m => m.lstStages[j].Stage, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Stage", @class = "form-control CStage", autocomplete = "off" })
                                                                    </td>

                                                                    <td>
                                                                        @if (ViewBag.DDLFinalStatusMaster != null)
                                                                        {
                                                                            @Html.DropDownListFor(m => m.Status, new SelectList(@ViewBag.DDLFinalStatusMaster, "Value", "Text"), "--Select--", new { @id = "IdStatus", @class = "form-control CStatus" })
                                                                            @Html.HiddenFor(m => m.Status)
                                                                        }
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.StatusUpdatedOn, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Status Updated On", @class = "form-control CStatusUpdatedOn", autocomplete = "off" })
                                                                        @Html.ValidationMessageFor(model => model.StatusUpdatedOn, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(m => m.EstimatedEndDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "EstimatedEndDate", @class = "form-control CEstimatedEndDate", autocomplete = "off" })
                                                                        @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.FinalstageProgressper, new { @style = "text-align:center", @placeholder = "Number", @class = "form-control ", @id = "ddlActual_Progressper", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.FinalstageProgressper, "", new { @class = "text-danger validation-msg ActualProgressper" })
                                                                    </td>
                                                                    @*<td align="center">
                                                            @Html.TextBoxFor(model => model.delaydays, new
                                                           {

                                                               @class = "form-control iddelaydays",
                                                               @readonly = true
                                                           })
                                                            @Html.ValidationMessageFor(model => model.delaydays, "", new { @class = "text-danger validation-msg" })

                                                        </td>*@



                                                                    <td>
                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                        <button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                    </td>



                                                                </tr>
                                                            }

                                                        </table><br />

                                                    </div>

                                                </div>




                                                <div class="col-xs-12 text-center">
                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnsave">Save</button>
                                                </div>

                                                @*}*@


                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }


    var ITRowCount = 1;
    $(document).ready(function () {
        $(document).on("click", ".classAdd", function () { //

            debugger



            var rowCount = $('.data-contact-person').length + 1;





            if ($('#DTestTable tr').length - 1 >= ITRowCount) {
                var count = $('#DTestTable tr').length - 1;
                ITRowCount = count;
            }

            //ddlStageMaster(ITRowCount)
            ddlStatusMaster(ITRowCount)
            BindItemByCallId(ITRowCount)


            var contactdiv = '<tr class="trDomestic">' +
                '<td>' +

                '<select name="CItem" class="form-control CItem" id="Idtem' + ITRowCount + '"multiple="multiple" ><option value="">Select</option></select>  </td>' +
                //'<td><select name="CStage" class="form-control CStage" id="IdStage' + ITRowCount + '" ><option value="">Select</option></select>  </td>' +
                 '<td><input type="text" style="text-align:left" name="CStage"  id="IdStage"  class="form-control CStage"/></td>' +

                '<td><select name="CStatus" class="form-control CStatus" id="IdFinalStageStatus' + ITRowCount + '" ><option value="">Select</option></select>  </td>' +
                //'<td><input type="Date" pattern="\d{4}/\d{2}/\d{2}" name="IdStatusUpdatedOn"  id="IdStatusUpdatedOn"  class="form-control CStatusUpdatedOn" data-date="" data-date-format="dd/MM/yyyy" /></td>' +
                 '<td><input type="text" class="form-control CStatusUpdatedOn" placeholder="dd/mm/yyyy" id="IdStatusUpdatedOn' + ITRowCount + '" /></td>' +
                 //'<td><input type="Date" pattern="\d{4}/\d{2}/\d{2}" name="IdEstimatedEndDate"  id="IdEstimatedEndDate"  class="form-control CEstimatedEndDate" data-date="" data-date-format="dd/MM/yyyy" /></td>' +
                 '<td><input type="text" class="form-control CEstimatedEndDate" placeholder="dd/mm/yyyy" id="IdEstimatedEndDate' + ITRowCount + '" /></td>' +
               '<td><input type="text" style="text-align:center" name="IdActual_Progressper"  id="IdActual_Progressper"  class="form-control" disabled/></td>' +
                //'<td><input type="text" style="text-align:center" name="Iddelaydays"  id="Iddelaydays"  class="form-control iddelaydays" disabled/></td>' +

                '<td><button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button><button type="button" style="text-align:left" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button> ' +


               '</tr>';

            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class
            $(function () {
                $(".CStatusUpdatedOn").datepicker({
                    //dateFormat: 'dd/mm/yy',//check change
                    dateFormat: 'dd/mm/yy',//check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",
                    //maxDate: "+60d",
                    //minDate: "-60d"
                });
            });

            $(function () {
                $(".COrderPlacedOn").datepicker({
                    dateFormat: 'dd/mm/yy',//check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",
                    //maxDate: "+60d",
                    //minDate: "-60d"
                });
            });

            $(function () {
                $(".CEstimatedEndDate").datepicker({
                    //dateFormat: 'dd/mm/yy',//check change
                    dateFormat: 'dd/mm/yy',//check change
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+50",
                    //maxDate: "+60d",
                    //minDate: "-60d"
                });
            });

        });
    });
</script>

@*<script>
    $(document).on("click", ".IdeleteContact", function () {
        if (confirm("Do you really want to remove this row?")) {
            ITRowCount = ITRowCount - 1;
            $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        }
    });
</script>*@

<script>
    $(document).on("click", ".IdeleteContact", function () {
        if (confirm("Do you really want to remove this row?")) {
            ITRowCount = ITRowCount - 1;
            debugger;
            // var varPK_Engi_Id = $(this).find('#PK_Engi_Id').val();
            var varCPK_FinalStage_Id = $(this).closest('tr').find('.CPK_FinalStage_Id').val();
            if (typeof varCPK_FinalStage_Id !== 'undefined') {
                // Call AJAX
                $.ajax({
                    url:'@Url.Action("deleteFinalData", "Expediting")',
                    type: 'POST',
                    data: { varCPK_FinalStage_Id: varCPK_FinalStage_Id },
                    success: function(response) {
                        //alert("Data delete successful!");
                    },
                    error: function(xhr, status, error) {
                        alert("Something Went Wrong!.");
                    }
                });
            }
            $(this).closest("tr").remove();
        }
    });
</script>

<script type="text/javascript">



    function ddlStageMaster(ITRowCount) {
        debugger
        var PK_Call_Id = $("#PK_Call_Id").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetStageMasterJson", "Expediting")',
            data: { "PK_Call_Id": PK_Call_Id },
            success: function (data) {

                var s = '<option value="-1"></option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                //$("#IdStage").html(s);
                $("#IdStage" + ITRowCount).html(s);

            }
        });
    }

    function ddlStatusMaster(ITRowCount) {
        debugger
        var PK_Call_Id = $("#PK_Call_Id").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetFinalStatusMasterJson", "Expediting")',
            data: { "PK_Call_Id": PK_Call_Id },
            success: function (data) {

                var s = '<option value="-1">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                $("#IdFinalStageStatus" + ITRowCount).html(s);

            }
        });
    }


    function BindItemByCallId(ITRowCount) {
        debugger;
        var PK_Call_Id = $("#PK_Call_Id").val();
        var ModelVisitReport =
      {
          PK_Call_Id: PK_Call_Id,


      }

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetItemByPK_Call_Id", "Expediting")',
            //data: "{}",
            data: { "PK_Call_Id": PK_Call_Id },
            //data: JSON.stringify({ "PK_Call_Id": PK_Call_Id }),
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                }
                $("#Idtem" + ITRowCount).html(s);

                $("#Idtem" + ITRowCount).multiselect({
                    includeSelectAllOption: true, // Enable the "Select All" option
                    selectAllText: 'Select All', // Customize the text for "Select All" option
                    enableFiltering: true, // Enable filtering/searching
                    enableCaseInsensitiveFiltering: true, // Make the filtering case-insensitive
                    maxHeight: 300 // Adjust the maximum height of the dropdown
                });

            }
        });


    }

</script>




<script>
    $("#btnsave").on('click', function (event) {
        debugger;

        idbtnSaveEng();
        var a = "1";
        var DArray = [];


        var PK_Call_Id = $("#PK_Call_Id").val();
        $('.trDomestic').each(function () {
            var trD = {};

            var PK_FinalStage_Id = $(this).find('.CPK_FinalStage_Id').val();
            var Item = $(this).find('.CItem').val();
            var Stage = $(this).find('.CStage').val();
            var Status = $(this).find('.CStatus').val();
            var StatusUpdatedOn = $(this).find('.CStatusUpdatedOn').val();
            var EstimatedEndDate = $(this).find('.CEstimatedEndDate').val();


            //var convertedStatusUpdatedOn = moment(StatusUpdatedOn).format('DD/MM/YYYY');
            //if (convertedStatusUpdatedOn == 'Invalid date') {
            //    convertedStatusUpdatedOn = StatusUpdatedOn;
            //}
            //else {
            //    convertedStatusUpdatedOn = convertedStatusUpdatedOn;
            //}

            //var convertedFormat1 = moment(EstimatedEndDate).format('DD/MM/YYYY');
            //if (convertedFormat1 == 'Invalid date') {
            //    convertedFormat1 = EstimatedEndDate;
            //}
            //else {
            //    convertedFormat1 = convertedFormat1;
            //}



            

            if (EstimatedEndDate == '' && (Status !== "4")) {
                a = "9"
            }
            if (StatusUpdatedOn == '' && (Status !== "1")) {
                a = "7";
            }


            if (Status == '-1') {

                a = "6";
            }
            if (Stage == '' || Stage == null) {
                a = "3";
            }
            if (Item == '' || Item == null) {
                a = "2";
            }



            if (a == "1") {
                varItemString = Item.join(',');

                //trD['PK_FinalStage_Id'] = PK_FinalStage_Id;
                //trD['Item'] = Item;
                //trD['Stage'] = Stage;
                //trD['Status'] = Status;
                //trD['StatusUpdatedOn'] = convertedStatusUpdatedOn;
                var trD = {
                    'Item': varItemString,
                    'PK_FinalStage_Id': PK_FinalStage_Id,
                    'Stage': Stage,
                    'Status': Status,
                    'StatusUpdatedOn': StatusUpdatedOn,
                    'EstimatedEndDate': EstimatedEndDate

                };
                DArray.push(trD);



            }
            else {

                return false;
            }

        });


        if (a == "2") {
            alert("Please select po Item!");
            return false;
        }
        if (a == "3") {
            alert("Please Enter Stage!");
            return false;
        }
        if (a == "6") {
            alert("Please select Status!");
            return false;
        }
        if (a == "7") {
            alert("Please Enter Status Updated On!");
            return false;
        }
        if (a == "9") {
            alert("Please Enter Estimated End Date!");
            return false;
        }

        var ModelVisitReport =
       {
           PK_Call_Id: PK_Call_Id,


       }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ExpFinalStage", "Expediting")',
            dataType: 'json',
            Async: false,
            data: JSON.stringify({ IVR: ModelVisitReport, "DArray": DArray }),

            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                if (response.result == 'Redirect') {
                    alert("Details has been Save successfully!!!")
                    window.location = response.url;
                }

                if (response.result == 'Update') {
                    alert("Details has been updated successfully!!!")
                    window.location = response.url;
                }
            }
        })





    });
</script>


<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>

<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />




<script>
    $(document).ready(function () {
        $('.CItem').multiselect({
            includeSelectAllOption: true
        });

        // Optional: Add event handlers if needed
        $('.CItem').change(function () {
            // Handle change event
            console.log($(this).val()); // Log selected values to the console
        });


    });

</script>


<script>
    function idbtnSaveEng() {
        debugger;

        var PK_Call_Id = $("#PK_Call_Id").val();
        var ActionValue = $("#idFinalStage").val();
        var stage = "4";

        if (ActionValue == "0") {
            alert("please enter Action Value");
            return false;
        }


        if (parseFloat(ActionValue) > 100) {
            alert("Status value cannot exceed 100.");
            return;

        }



        $.ajax({
            type: "POST",
            url: '@Url.Action("StatusSaveEng", "Expediting")',
            data: { PK_Call_Id: PK_Call_Id, ActionValue: ActionValue, stage: stage },
            Async: false,
            success: function (data) {
                // alert("Data Added successfully");
                //location.reload();
            },
            error: function (error) {
                console.error('Error saving status:', error);
            }
        });
    }
</script>


<script>
    $(document).ready(function () {
        debugger;
        var PK_Call_Id = $("#PK_Call_Id").val();
        var stage = "4";
        $.ajax({
            url: '@Url.Action("GetActionData", "Expediting")',
            type: 'GET',
            data: {
                PK_Call_Id: PK_Call_Id,
                stage: stage
            },
            Async: false,
            success: function (response) {
                debugger;
                var data1 = JSON.parse(response);
                var data2 = JSON.stringify(data1);


                $("#idFinalStage").val(data1[0].Actionvalue);
            },
            error: function (error) {
                console.error('Error fetching data:', error);
            }
        });
    });

</script>
