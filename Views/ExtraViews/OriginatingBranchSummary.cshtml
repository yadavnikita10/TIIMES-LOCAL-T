@model TuvVision.Models.CallsModel
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;

@{
    ViewBag.Title = "OriginatingBranchSummary";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}


@*DATEPICKER*@
@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />




<style>
    /* Set the table layout to fixed */
    table {
        table-layout: fixed;
        width: 100%;
    }

    /* Apply the same width and a border to all table cells */
    td {
        width: 100px; /* Adjust this value as needed */
        border: 1px solid black; /* Add a 1px solid border */
        padding: 5px; /* Optional: Add padding for cell content */
    }

    /* Ensure text doesn't overflow and wraps within cells */
    td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@*calender control*@

<script>

    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>

    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>






@using (Html.BeginForm("OriginatingBranchSummary", "MISOPEReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{

    <div class="main-content3 xs-max-height">
        <div class="container-fluid">

            <!--Start of header-->


            <div class="col-xs-12">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left"><b>CALL ANALYSIS FOR ORIGINATING BRANCH</b></h3>
                    <br />

                    @*<button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportToExcel3", "MISOPEReport")'"
                            style="border:none;">
                        Export To Excel
                    </button>*@

                   <br />
                    <div class="row">
                        <div class="col-xs-4">
                            <div class="form-group">
                                <label>From Date:</label>
                                @Html.TextBoxFor(model => model.FromDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger validation-msg" })
                            </div>
                        </div>


                        <div class="col-xs-4">
                            <div class="form-group">
                                <label>To Date:</label>
                                @Html.TextBoxFor(model => model.ToDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger validation-msg" })
                            </div>

                        </div>

                        <div class="col-xs-2">
                            <div class="form-group">
                                <button type="submit" class="btn btn-info dynamic-function-btn dynamic-function-btn-2">Search</button>

                            </div>

                        </div>

                    </div>

                </div>

                <br />


            </div>


          
            <div class="col-lg-12">
                @*<table id="example" class="equal-height-table table-bordered table-striped" style="border: 1px solid black;font-size:13px; padding:0px; margin:5px;" cellspacing="0">*@
                <div class="col-xs-12" style="overflow:auto;height:500px;width:99%">
                    <table class="display dataTable no-footer" style="width:180%;" id="example">
                        <thead>
                            <tr style="background-color: #050585; color: white; text-align:center;">

                                <th>Branch Name</th>
                                <th>Total</th>
                                <th>Ontime</th>
                                <th>%</th>
                                <th>Delay</th>
                                <th>%</th>
                                <th>No action by Coordinators</th>
                                <th>%</th>
                                <th>No action by Inspectors</th>
                                <th>%</th>
                                <th>Wrong received date</th>
                                <th>%</th>
                                <th>Wrong request date</th>
                                <th>%</th>

                            </tr>
                        </thead>
                        @{
                            var items = ViewData["ListData"] as IList<TuvVision.Models.CallsModel>;


                            if (items != null)
                            {

                                <tbody>
                                    @foreach (var obj in ViewData["ListData"] as IEnumerable<TuvVision.Models.CallsModel>)
                                    {
                                        <tr>
                                            <td>@obj.Branch_Name</td>
                                            <td>@obj.TotalCalls</td>
                                            <td>@obj.Ontime</td>
                                            <td>@obj.OnTimePercentage</td>
                                            <td>@obj.DelayCount</td>
                                            <td>@obj.DelayCountPercentage</td>
                                            <td>@obj.NoactionbyCoordinators</td>
                                            <td>@obj.NoactionbyCoordinatorsPercentage</td>
                                            <td>@obj.NoactionbyInspectors</td>
                                            <td>@obj.NoactionbyInspectorsPercentage</td>
                                            <td>@obj.WrongReceiveDateCount</td>
                                            <td>@obj.WrongReceiveDateCountPercentage</td>
                                            <td>@obj.WrongRequestDateCount</td>
                                            <td>@obj.WrongRequestDateCountPercentage</td>
                                        </tr>
                                    }


                                </tbody>
                            }
                        }

                        @if (Model.GrandTotal != null)
                        {
                            <tfoot>
                                <tr>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.Branch_Name</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalTotalCalls</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalOntime</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalOnTimePercentage.ToString("0.##"))%</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalDelayCount</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalDelayCountPercentage.ToString("0.##"))%</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalNoactionbyCoordinators</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalNoactionbyCoordinatorsPercentage.ToString("0.##"))%</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalNoactionbyInspectors</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalNoactionbyInspectorsPercentage.ToString("0.##"))%</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalWrongReceiveDateCount</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalWrongReceiveDateCountPercentage.ToString("0.##"))%</td>
                                    <td style="font-size: small; background-color: grey;">@Model.GrandTotal.GrandTotalWrongRequestDateCount</td>
                                    <td style="font-size: small; background-color: grey;">@(Model.GrandTotal.GrandTotalWrongRequestDateCountPercentage.ToString("0.##"))%</td>
                                </tr>
                            </tfoot>
                        }




                    </table>
                </div>

            </div>

                @*<table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td id="example">



                            @(Html.Grid(Model.lstComplaintDashBoard1)
            .Build(columns =>
            {
                columns.Add(c => c.Branch_Name).Titled("Branch_Name");
                columns.Add(c => c.TotalCalls).Titled("Total");
                columns.Add(c => c.Ontime).Titled("OnTime");
                columns.Add(c => c.OnTimePercentage).Titled("%");
                columns.Add(c => c.DelayCount).Titled("Delay");
                columns.Add(c => c.DelayCountPercentage).Titled("%");
                columns.Add(c => c.NoactionbyCoordinators).Titled("No action by Coordinators");
                columns.Add(c => c.DelayCountPercentage).Titled("%");
                columns.Add(c => c.NoactionbyInspectors).Titled("No action by Inspectors");
                columns.Add(c => c.DelayCountPercentage).Titled("%");
                columns.Add(c => c.WrongReceiveDate).Titled("Wrong received date");
                columns.Add(c => c.DelayCountPercentage).Titled("%");
                columns.Add(c => c.WrongRequestDate).Titled("Wrong request date");
                columns.Add(c => c.DelayCountPercentage).Titled("%");

            })

            .Pageable(pager =>
            {

                pager.ShowPageSizes = true;

                pager.CurrentPage = 1;
                pager.RowsPerPage = 2;
            })
            .UsingFilterMode(GridFilterMode.Row)
            .Empty("No data found")
            .Filterable()
            .Sortable()

                            )

                        </td>
                    </tr>
                </table>*@

            </div>



    </div>


                        }


