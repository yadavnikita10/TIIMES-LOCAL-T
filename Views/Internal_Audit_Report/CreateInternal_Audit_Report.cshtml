@model TuvVision.Models.Internal_Audit_Report

@{
    ViewBag.Title = "CreateInternal_Audit_Report";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    List<string> EditProdName = ViewBag.EditproductName as List<string>;
    List<string> EditAuditorName = ViewBag.AuditorNameName as List<string>;
    int j = 0;
}

<style>
    .special-table-container {
        position: sticky;
        overflow-x: auto;
        max-width: 100%;
    }

    .special-table {
        border-collapse: collapse;
        width: 100%;
        /*table-layout: fixed;*/
    }

        .special-table th,
        .special-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            /*white-space: nowrap;*/
        }

            .special-table th:nth-child(2),
            .special-table td:nth-child(2),
            .special-table th:nth-child(3),
            .special-table td:nth-child(3) {
                position: sticky;
                left: 0;
                background-color: white;
                z-index: 1;
            }

            /*.special-table th:nth-child(1),
            .special-table th:nth-child(2) {
                z-index: 2;
            }*/

            .special-table th.rotate-header {
                writing-mode: vertical-lr;
                transform: rotate(180deg);
                white-space: nowrap;
            }

        /*.special-table tr:first-child th,
        .special-table tr:first-child td {
            position: sticky;
            top: 0;
            background-color: white;
            z-index: 1;
        }*/

        .special-table thead th {
            position: sticky;
            top: 0; /* Stick the header at the top */
            background-color: white; /* Ensure header has a background */
            z-index: 1; /* Ensure the header is on top */
        }

        .special-table tr:first-child th:nth-child(2),
        .special-table tr:first-child,
        .special-table tr:first-child th:nth-child(2),
        .special-table tr:first-child {
            z-index: 2;
        }

    .scrollable-div {
        height: 800px; /* Set a height */
        overflow: auto; /* Automatically adds scrollbars when needed */
        border: 1px solid #000;
    }
</style>





<head>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />
    <script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
    <script src="~/AllJsAndCss/js/datatable-custom.js"></script>
    <script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
    <link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
    <script src="~/AllJsAndCss/ValidateTimeSheet.js"></script>
</head>
<script>
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#IdOBSType').multiselect({
            includeSelectAllOption: true
        });

    });
</script>




@*<script>

        $(function () {
            $(".Abc").datepicker({
                dateFormat: 'dd/mm/y',//check change
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+50"
            });
        });
    </script>*@


<style>
    #customers {
        font-family: 'TNG Pro';
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #ddd;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #001ED2;
            color: white;
        }
</style>



<style>
    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }

            ul.Attachment > li a.deleteItem1 {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
</style>
<style>
    .ui-widget-header {
        background: #001ED2 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
</style>
<div class="grey-bg-f3">
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-5">

            <div class="col-xs-12 form-col">
                <div class="row">
                    <div class="col-xs-12 text-right">
                        @*@if (ViewBag.lstDOrderType != null)
                            {
                                <button id="btnAddExpenses" class="btn btn-default news-btn" type="button" style="margin-bottom:18px;" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem",new { AuditId = Model.Internal_Audit_Id,Type="Internal Audit" } )'">Add Expenses</button>
                            }*@

                        @if (ViewBag.Internal_id != null)
                        {

                            <button id="btnAddExpenses" class="btn btn-default news-btn" type="button" style="margin-bottom:18px;" onclick="location.href='@Url.Action("CreateExpenseItem", "ExpenseItem",new { AuditId = Model.Internal_Audit_Id,Type="Internal Audit" } )'"><i class="fa fa-inr" aria-hidden="true" style="margin-left:-11px;"></i> Add Expenses</button>
                        }
                        <a href="@Url.Action("AuditreportDashBoard", "Internal_Audit_Report")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                    </div>
                    <div class="col-xs-12">
                        <div class="white-bg section-box-shadow">
                            @*@Html.HiddenFor(model=>model.Internal_Audit_Id)*@
                            @if (Model.Internal_Audit_Id != 0)
                            {
                                <h3 class="form-page-title">Internal Audit Report</h3>

                            }
                            else
                            {
                                <h3 class="form-page-title">Internal Audit Report</h3>

                            }

                            <div class="row">
                                <div>
                                    @*class="col-xs-12 col-sm-offset-1 col-sm-10"*@
                                    <div class="form-box">
                                        <form method="post" enctype="multipart/form-data" id="btnForm">
                                            @Html.HiddenFor(model => model.AuditId)
                                            @Html.HiddenFor(model => model.Internal_Audit_Id)
                                            @Html.HiddenFor(model => model.Total_NCR_raised)
                                            <div class="col-xs-12 text-right">
                                                <p style="padding:0;margin:0;margin-bottom:10px;color:red;font-weight:bold;font-size: 12px;">Fields marked * are mandatory</p>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Branch:</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.Branch, new { placeholder = "Enter Branch", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>



                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Service Type</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.CostCenter_, new { placeholder = "Enter External Auditor", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.CostCenter_, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Plan Ref Serial No:</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.Plan_ref_No, new { placeholder = "Enter Plan Ref Serial No.", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.Plan_ref_No, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Auditors:</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.Auditor, new { placeholder = "Enter Auditor", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                            @Html.HiddenFor(model => model.AuditorId)
                                                            @Html.ValidationMessageFor(model => model.Auditor, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>External Auditor:</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.ExAuditor, new { placeholder = "Enter External Auditor", @class = "form-control form-control-custom CompanyName" })
                                                            @Html.ValidationMessageFor(model => model.ExAuditor, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>

                                                @*<div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Auditee:</label>
                                                            <div class="form-group">
                                                                @Html.TextBoxFor(model => model.Auditee, new { placeholder = "Enter Auditee", @class = "form-control form-control-custom CompanyName", @readonly = "readonly" })
                                                                @Html.ValidationMessageFor(model => model.Auditee, "", new { @class = "text-danger" })


                                                            </div>
                                                        </div>

                                                    </div>*@

                                                <div class="col-xs-12 col-sm-4">

                                                    <label>Select Auditee Name:</label>

                                                    @*@Html.DropDownListFor(model => model.listAuditee, (IEnumerable<SelectListItem>)ViewData["AuditorName"],

                                                        new
                                                        {
                                                            @class = "form-control multiselect multiselect-icon multicls",
                                                            @multiple = "multiple",
                                                            @style = "width=20px;"
                                                        })*@

                                                    @if (ViewBag.checkAuditee == "Auditee")
            {
                                                        <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option" required="required">
                                                            @foreach (var item in ViewBag.AuditorName)
                                                            {
                                                                if (EditProdName.Contains(item.DAuditorCode))
                                                                {
                                                                    <option value="@item.DAuditorCode" selected>@item.DAuditorName</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item.DAuditorCode">@item.DAuditorName</option>
                                                                }
                                                            }
                                                        </select>
                                                    }
                                                    else
                                                    {
                                                        <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option" required="required">

                                                            @{
                                                                foreach (var item in ViewData["AuditorName"] as IEnumerable<TuvVision.Models.Audit>)
                                                                {
                                                                    <option value="@item.DAuditorCode">@item.DAuditorName&nbsp; &nbsp;</option>
                                                                }
                                                            }
                                                        </select>
                                                                }


                                                    @if (Model != null)
            {

                                                        <input type="hidden" id="changeOnAuditee" value="@Model.Auditee" />
                                                    }
                                                    <input type="text" class="hidden" id="Auditee" />
                                                </div>

                                            </div>
                                            <div class="row">
                                                @*<div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Date of Audit (From Date):</label>
                                                            <div class="form-group">
                                                                @Html.TextBoxFor(model => model.SDate_Of_Audit, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Enter Date Of Audit", @class = "form-control form-control-custom FromDate", autocomplete = "off" })


                                                                @Html.ValidationMessageFor(model => model.Date_Of_Audit, "", new { @class = "text-danger" })

                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Date of Audit (To Date):</label>
                                                            <div class="form-group">
                                                               @Html.TextBoxFor(model => model.SDateOfAudit_TODate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToDate", autocomplete = "off" })


                                                                @Html.ValidationMessageFor(model => model.DateOfAudit_TODate, "", new { @class = "text-danger" })

                                                            </div>
                                                        </div>

                                                    </div>*@
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Process Audited:</label>
                                                        <div class="form-group">
                                                            @Html.TextBoxFor(model => model.Department, new { placeholder = "Enter Department", @class = "form-control form-control-custom CompanyName" })
                                                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            @*Added by satish*@
                                            <div>
                                                <label>Mark Attendance Of Auditor:</label><br />
                                                @{
                                                    if (!String.IsNullOrWhiteSpace(Model.Auditor) && !String.IsNullOrWhiteSpace(Model.AuditorId))
                                                    {
                                                        string[] selectedAuditorNames = Model.Auditor.Split(',');
                                                        string[] selectedAuditorIds = Model.AuditorId.Split(',');
                                                        string loginuserid = Convert.ToString(System.Web.HttpContext.Current.Session["UserIDs"]);
                                                        for (int s = 0; s < selectedAuditorNames.Length && s < selectedAuditorIds.Length; s++)
                                                        {
                                                            string trimmedAuditorId = selectedAuditorIds[s].Trim();
                                                            string trimmedAuditorName = selectedAuditorNames[s].Trim();

                                                            if (!String.IsNullOrWhiteSpace(trimmedAuditorId))
                                                            {
                                                                bool isEditable = trimmedAuditorId.Equals(loginuserid);
                                                                @*<input type="checkbox" id="selctdAuditorName_@s" name="selctdAuditorName" value="@trimmedAuditorId" onchange="toggleTable('@s') ">
                                                                    <label>@trimmedAuditorName</label><br />*@

                                                                <input type="checkbox" id="selctdAuditorName_@s" name="selctdAuditorName" value="@trimmedAuditorId" onchange="toggleTable('@s')" @(isEditable ? "" : "readonly") @(isEditable ? "" : "disabled")>
                                                                <label>@trimmedAuditorName</label><br />
                                                                <input type="hidden" id="setvalue" />
                                                                if (isEditable)
                                                                {
                                                                    <div id="DomesticCurrency_@s" style="display: none;">
                                                                        <div class="form-page-title" style="width:100%;height:35px;vertical-align:central;">@trimmedAuditorName</div>

                                                                        <table id="DTestTable_@s" cellspacing="0" cellpadding="3" border="1" style="width: 100%">
                                                                            <tr style="background-color:lightgray;color:black">
                                                                                <td width="220px" style="text-align: center;vertical-align:top;">
                                                                                    Start Date
                                                                                </td>
                                                                                <td width="220px" style="text-align: center;vertical-align:top;">
                                                                                    OnSite Time
                                                                                </td>
                                                                                <td width="220px" style="text-align: center;vertical-align:top;">
                                                                                    Off-Site Time
                                                                                </td>
                                                                                <td width="220px" style="text-align: center;vertical-align:top;">
                                                                                    Travel Time
                                                                                </td>
                                                                            </tr>
                                                                            @{
                                                                                int i = 0;
                                                                            }
                                                                            @if (ViewBag.lstDOrderType != null)
                                                                            {
                                                                                if (ViewBag.lstDOrderType.Count != 0)
                                                                                {
                                                                                    foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.Internal_Audit_Report>)
                                                                                    {
                                                                                        i = i + 1;
                                                                                        <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                                            <td>
                                                                                                @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].Id, new { @class = "Id", @Value = item.Id })
                                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].SDate_Of_Audit, "{0:dd MMM yyyy}", new { @style = "text-align:center", @placeholder = "", @class = "form-control CFromDate", autocomplete = "off", @id = "IDTrainingStartDate", @Value = item.SDate_Of_Audit })

                                                                                                @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].SDate_Of_Audit, new { @placeholder = "Start Date", @class = "form-control", autocomplete = "off", @Value = item.Date_Of_Audit })

                                                                                                @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                                            </td>
                                                                                            <td>
                                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control COnSiteTime", autocomplete = "off", @id = "IdTrainingStartTime", @Value = item.OnSiteTime })

                                                                                                @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].OnSiteTime, new { @placeholder = "Start Time", @class = "form-control", autocomplete = "off", @Value = item.OnSiteTime })

                                                                                                @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                            </td>
                                                                                            <td>
                                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control COffSiteTime", autocomplete = "off", @id = "IdOffSiteTime", @Value = item.OffSiteTime })

                                                                                                @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].OffSiteTime, new { @placeholder = "Start Time", @class = "form-control", autocomplete = "off", @Value = item.OnSiteTime })

                                                                                                @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                            </td>
                                                                                            <td>
                                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control CTravelTime", autocomplete = "off", @id = "IdTrainingEndTime", @Value = item.TravelTime })

                                                                                                @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].TravelTime, new { @placeholder = "End Time", @class = "form-control", autocomplete = "off", @Value = item.TravelTime })

                                                                                                @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                                            </td>
                                                                                            <td style="text-align:center;">
                                                                                                @if (i == 1)
                                                                                                {
                                                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd" onclick="AddTable('@s')">Add</button>
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                                }
                                                                                            </td>
                                                                                        </tr>
                                                                                        j++;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.SDate_Of_Audit, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CFromDate" })
                                                                                            @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COnSiteTime" })
                                                                                            @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COffSiteTime" })
                                                                                            @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td>
                                                                                            @Html.TextBoxFor(model => model.TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CTravelTime" })
                                                                                            @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                                        </td>
                                                                                        <td style="text-align:center;">
                                                                                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd" onclick="AddTable('@s')">Add</button>
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                                    <td>
                                                                                        @Html.TextBoxFor(model => model.SDate_Of_Audit, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CFromDate" })
                                                                                        @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.TextBoxFor(model => model.OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COnSiteTime" })
                                                                                        @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.TextBoxFor(model => model.OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COffSiteTime" })
                                                                                        @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.TextBoxFor(model => model.TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CTravelTime" })
                                                                                        @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                                    </td>
                                                                                    <td style="text-align:center;">
                                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd" onclick="AddTable('@s')">Add</button>
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        </table><br />
                                                                    </div>
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                }
                                            </div>
                                            @*end satish code here*@

                                            @*comment old code start*@
                                            @*<div id="DomesticCurrency">
                                                    <div class="form-page-title" style="width:110%;height:35px;vertical-align:central;">Add Dates</div>

                                                    <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%">
                                                        <tr style="background-color:lightgray;color:black">
                                                            <td width="220px" style="text-align: center;vertical-align:top;">
                                                                Start Date
                                                            </td>
                                                            <td width="220px" style="text-align: center;vertical-align:top;">
                                                                OnSite Time
                                                            </td>
                                                            <td width="220px" style="text-align: center;vertical-align:top;">
                                                                Off-Site Time
                                                            </td>
                                                            <td width="220px" style="text-align: center;vertical-align:top;">
                                                                Travel Time
                                                            </td>
                                                        </tr>
                                                        @{
                                                            int i = 0;
                                                        }
                                                        @if (ViewBag.lstDOrderType != null)
                                                        {
                                                            if (ViewBag.lstDOrderType.Count != 0)
                                                            {
                                                                foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.Internal_Audit_Report>)
                                                                {
                                                                    i = i + 1;
                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].SDate_Of_Audit, "{0:dd MMM yyyy}", new { @style = "text-align:center", @placeholder = "", @class = "form-control CFromDate", autocomplete = "off", @id = "IDTrainingStartDate", @Value = item.SDate_Of_Audit })

                                                                            @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].SDate_Of_Audit, new { @placeholder = "Start Date", @class = "form-control", autocomplete = "off", @Value = item.Date_Of_Audit })

                                                                            @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control COnSiteTime", autocomplete = "off", @id = "IdTrainingStartTime", @Value = item.OnSiteTime })

                                                                            @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].OnSiteTime, new { @placeholder = "Start Time", @class = "form-control", autocomplete = "off", @Value = item.OnSiteTime })

                                                                            @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control COffSiteTime", autocomplete = "off", @id = "IdOffSiteTime", @Value = item.OffSiteTime })

                                                                            @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].OffSiteTime, new { @placeholder = "Start Time", @class = "form-control", autocomplete = "off", @Value = item.OnSiteTime })

                                                                            @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.lstQuotationMasterDashBoard1[j].TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control CTravelTime", autocomplete = "off", @id = "IdTrainingEndTime", @Value = item.TravelTime })

                                                                            @Html.HiddenFor(model => model.lstQuotationMasterDashBoard1[j].TravelTime, new { @placeholder = "End Time", @class = "form-control", autocomplete = "off", @Value = item.TravelTime })

                                                                            @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td style="text-align:center;">
                                                                            @if (i == 1)
                                                                            {
                                                                                <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                            }

                                                                        </td>
                                                                    </tr>
                                                                    j++;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.SDate_Of_Audit, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CFromDate" })
                                                                        @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COnSiteTime" })
                                                                        @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COffSiteTime" })
                                                                        @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CTravelTime" })
                                                                        @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                    </td>


                                                                    <td style="text-align:center;">

                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>


                                                                    </td>



                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr class="trDomestic" style="background-color:#f0f0f0">

                                                                <td>
                                                                    @Html.TextBoxFor(model => model.SDate_Of_Audit, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CFromDate" })
                                                                    @Html.ValidationMessageFor(model => model.SDate_Of_Audit, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.OnSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COnSiteTime" })
                                                                    @Html.ValidationMessageFor(model => model.OnSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.OffSiteTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COffSiteTime" })
                                                                    @Html.ValidationMessageFor(model => model.OffSiteTime, "", new { @class = "text-danger validation-msg" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.TravelTime, new { @style = "text-align:center", @placeholder = "", @class = "form-control  CTravelTime" })
                                                                    @Html.ValidationMessageFor(model => model.TravelTime, "", new { @class = "text-danger validation-msg" })
                                                                </td>


                                                                <td style="text-align:center;">
                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                </td>



                                                            </tr>
                                                        }
                                                    </table><br />

                                                </div>*@
                                            @*end old code comment*@


                                            <div><br /></div>
                                            <div class="special-table-container scrollable-div">
                                                <table class="special-table" id="customers">
                                                    @*style="width: 100%" id="customers"*@
                                                    <thead>
                                                        <tr>
                                                            <th class="hidden">Id</th>
                                                            <th class="remove-search">Activity</th>
                                                            <th class="remove-search remove-space"> ISO &nbsp;9001</th>
                                                            <th class="remove-search remove-space"> ISO &nbsp;17020</th>
                                                            <th class="remove-search"> Evidence Checked / Sample Taken /Document Referred</th>
                                                            <th class="remove-search" style="border-right:double;">Findings</th>
                                                            <th class="remove-search rotate-column">Critical NC</th>
                                                            <th class="remove-search rotate-column">Major NC</th>
                                                            <th class="remove-search rotate-column">Minor NC</th>
                                                            <th class="remove-search rotate-column">Observation</th>
                                                            <th class="remove-search rotate-column">Concern</th>
                                                            <th class="remove-search rotate-column">OFI</th>
                                                            <th class="remove-search">RCA By Auditee's</th>
                                                            <th class="remove-search">CA By Auditee's</th>
                                                            <th class="remove-search">Correction By Auditee's</th>
                                                            <th class="remove-search">Auditor remarks</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in ViewBag.CostSheet as IEnumerable<TuvVision.Models.Internal_Audit_Report>)
                                                        {

                                                            <tr class="trAcivity">
                                                                @Html.HiddenFor(model => model.Activity[j].Internal_Audit_Id, new { @placeholder = "ID", @Value = item.Internal_Audit_Id, @class = "form-control" })
                                                                <td class="hidden">@Html.HiddenFor(model => model.Activity[j].PKActivityTypeId, new { @placeholder = "ID", @Value = item.PKActivityTypeId, @class = "form-control PKActivityTypeId" })</td>
                                                                <td>@item.ActivityNameMaster</td>
                                                                <td>
                                                                    @item.Clause1
                                                                </td>
                                                                <td>
                                                                    @item.Clause2
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].EvidenceChecked, new { @placeholder = "", @Value = item.EvidenceChecked, @class = "form-control txtareabox EvidenceChecked idRemarks" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].Remarks, new { @placeholder = "", @Value = item.Remarks, @class = "form-control txtareabox idRemarks", id = "idRemarks" })
                                                                </td>

                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].CriticalNC, new { @placeholder = "", @Value = item.CriticalNC, @class = "form-control CriticalNC1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].MajorNC, new { @placeholder = "", @Value = item.MajorNC, @class = "form-control MajorNC1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].MinorNC, new { @placeholder = "", @Value = item.MinorNC, @class = "form-control MinorNC1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].Observation, new { @placeholder = "", @Value = item.Observation, @class = "form-control Observation1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].Concern, new { @placeholder = "", @Value = item.Concern, @class = "form-control Concern1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].OFI, new { @placeholder = "", @Value = item.OFI, @class = "form-control OFI1 wicrorf" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].RCA, new { @placeholder = "", @Value = item.RCA, @class = "form-control RCA txtareabox idRemarks" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].CA, new { @placeholder = "", @Value = item.CA, @class = "form-control CA txtareabox idRemarks" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].Correction, new { @placeholder = "", @Value = item.Correction, @class = "form-control Correction txtareabox idRemarks" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(model => model.Activity[j].Auditorremarks, new { @placeholder = "", @Value = item.Auditorremarks, @class = "form-control Auditorremarks txtareabox idRemarks" })
                                                                </td>
                                                            </tr>
                                                            j++;
                                                        }
                                                    </tbody>

                                                </table>
                                            </div>

                                            <script>
                                                $(document).ready(function () {
                                                    debugger;
                                                    $(".idRemarks").each(function () {

                                                        var textbox = $(document.createElement('textarea')).val(this.value);
                                                        console.log(this.attributes);
                                                        $.each(this.attributes, function () {
                                                            if (this.specified) {
                                                                textbox.prop(this.name, this.value)
                                                            }
                                                        });
                                                        $(this).replaceWith(textbox);
                                                    })
                                                });
                                            </script>
                                            <style>
                                                table {
                                                    border-collapse: collapse;
                                                    border-spacing: 0;
                                                    width: 100%;
                                                    border: 1px solid #ddd;
                                                }

                                                th, td {
                                                    text-align: left;
                                                    padding: 8px;
                                                }

                                                tr:nth-child(even) {
                                                    background-color: #f2f2f2;
                                                }
                                            </style>
                                            <div style="display:none;">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label style="color:red;">ACTIVITY</label>
                                                            <div class="form-group">
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label style="color:red;">REMARKS</label>
                                                            <div class="form-group">
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label style="color:red;">FINDINGS</label>
                                                            <div class="form-group">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Nominated Person by the Management-Records of MRM:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Nominated_By_Management_Remark, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Nominated_By_Management_Remark, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Nominated_By_Management_Remark, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Nominated_By_Management_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Nominated_By_Management_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Findings from previous Internal Audit:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Findings_From_PreviousAudit_Remark, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Findings_From_PreviousAudit_Remark, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Findings_From_PreviousAudit_Remark, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Findings_From_PreviousAudit_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Findings_From_PreviousAudit_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Customer Complaints:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Customer_Complaints_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Customer_Complaints_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Customer_Complaints_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Customer_Complaints_NCR, new List<SelectListItem> {
                                                    new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Customer_Complaints_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Customer Feedback and Analysis:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.CustomerFeedBacknAnalysis_Remark, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.CustomerFeedBacknAnalysis_Remark, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.CustomerFeedBacknAnalysis_Remark, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.CustomerFeedBacknAnalysis_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.CustomerFeedBacknAnalysis_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Process Measures:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Process_Measures_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Process_Measures_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Process_Measures_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Process_Measures_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Process_Measures_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Training Module, Appraisal & KRA's:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Training_AppraisalnKRAs_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Training_AppraisalnKRAs_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Training_AppraisalnKRAs_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Training_AppraisalnKRAs_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Training_AppraisalnKRAs_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Enquiry Management Process:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Enquiry_Management_Process_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Enquiry_Management_Process_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Enquiry_Management_Process_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Enquiry_Management_Process_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Enquiry_Management_Process_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Quotation Process:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Quotation_Process_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Quotation_Process_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Quotation_Process_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Quotation_Process_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Quotation_Process_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Order/Contract Review & Acceptance Contract Review:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.OrderReviewnAccepatanceContractreview_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.OrderReviewnAccepatanceContractreview_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.OrderReviewnAccepatanceContractreview_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.OrderReviewnAccepatanceContractreview_NCR, new List<SelectListItem> {
                                                new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.OrderReviewnAccepatanceContractreview_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Organization Structure, Roles & Responsibilities:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.OrganisationStructure_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.OrganisationStructure_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.OrganisationStructure_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.OrganisationStructure_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="---nc-Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.OrganisationStructure_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Control of Documents:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Control_Of_Documents_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Control_Of_Documents_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Control_Of_Documents_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Control_Of_Documents_NCR, new List<SelectListItem> {
                                                 new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Control_Of_Documents_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Control of Records:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Control_Of_Records_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Control_Of_Records_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Control_Of_Records_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Control_Of_Records_NCR, new List<SelectListItem> {
                                               new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Control_Of_Records_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Competency Mapping:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Competancy_Mapping_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Competancy_Mapping_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Competancy_Mapping_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Competancy_Mapping_NCR, new List<SelectListItem> {
                                                  new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Competancy_Mapping_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Academic Records:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Academic_records_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Academic_records_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Academic_records_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Academic_records_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Academic_records_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>NDE Certifications:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.NDE_certifications_Remark, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.NDE_certifications_Remark, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.NDE_certifications_Remark, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.NDE_certifications_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.NDE_certifications_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Visual Activity:</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Visual_Activity_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Visual_Activity_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Visual_Activity_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Visual_activity_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Visual_activity_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Training records including Induction Training of new Inspectors, Training Effectiveness:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.TrainingRecords_Effectiveness_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.TrainingRecords_Effectiveness_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.TrainingRecords_Effectiveness_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.TrainingRecords_Effectiveness_NCR, new List<SelectListItem> {
                                                   new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.TrainingRecords_Effectiveness_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Impartiality, Confidentiality, Declaration:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Impartiality_Confidentiality_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Impartiality_Confidentiality_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Impartiality_Confidentiality_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Impartiality_Confidentiality_NCR, new List<SelectListItem> {
                                                 new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Impartiality_Confidentiality_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Inspection Co-ordination & Execution Process:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.InspectionCordinationnInspectionProcess_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.InspectionCordinationnInspectionProcess_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.InspectionCordinationnInspectionProcess_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.InspectionCordinationnInspectionProcess_NCR, new List<SelectListItem> {
                                           new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.InspectionCordinationnInspectionProcess_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Onsite Monitoring:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Onsite_Monitoring_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Onsite_Monitoring_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Onsite_Monitoring_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Onsite_Monitoring_NCR, new List<SelectListItem> {
                                                new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Onsite_Monitoring_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Document/Completed Work Review:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Document_Work_Review_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Document_Work_Review_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Document_Work_Review_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Document_Work_Review_NCR, new List<SelectListItem> {
                                                new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Document_Work_Review_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Safety of personnel:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Safety_Of_Personnel_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Safety_Of_Personnel_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Safety_Of_Personnel_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Safety_Of_Personnel_NCR, new List<SelectListItem> {
                                               new SelectListItem {Text="----Findings----",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Safety_Of_Personnel_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Planning-Actions to address Risk Opportunities:</label>

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            @*@Html.TextBoxFor(model => model.Planning_opportunities_Remarks, new { placeholder = "Enter REMARKS", @class = "form-control form-control-custom CompanyName" })*@
                                                            @Html.TextAreaFor(model => model.Planning_opportunities_Remarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter REMARKS" })
                                                            @Html.ValidationMessageFor(model => model.Planning_opportunities_Remarks, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            @Html.DropDownListFor(model => model.Planning_opportunities_NCR, new List<SelectListItem> {
                                                    new SelectListItem {Text="----Findings------",Value="" },
                                                 new SelectListItem {Text="Critical NC",Value="CriticalNC" },
                                                  new SelectListItem {Text="Major NC",Value="MajorNC" },
                                                   new SelectListItem {Text="Minor NC",Value="MinorNC" },
                                                 new SelectListItem {Text="OBSERVATION",Value="OBSERVATION"},
                                                 new SelectListItem {Text="Concern",Value="Concern"},
                                                 new SelectListItem {Text="OFI",Value="OFI" },
                                                 new SelectListItem {Text="None",Value="None" }
                                             }, new { @class = "form-control form-control-custom Count" })
                                                            @Html.ValidationMessageFor(model => model.Planning_opportunities_NCR, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>

                                            <br />
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-4" style="pointer-events:none;">
                                                    <div class="form-group">
                                                        <label style="color:red;">TOTAL FINDINGS</label> &nbsp;&nbsp;
                                                        @Html.TextBoxFor(model => model.TotalFindings, new { @placeholder = "", @class = "form-control TotalFindings", autocomplete = "off" })
                                                        @*<label id="TotalFindings"></label>*@
                                                        <div class="form-group">
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">


                                                    </div>

                                                </div>
                                            </div>

                                            <div class="row" style="pointer-events:none;">

                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Critical NC Count</label>
                                                        @Html.TextBoxFor(model => model.CriticalNCCount, new { @placeholder = "Critical NC Count", @class = "form-control CriticalNCCount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.CriticalNCCount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Major NC Count</label>
                                                        @Html.TextBoxFor(model => model.MajorNCCount, new { @placeholder = "Major NC Count", @class = "form-control MajorNCCount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.MajorNCCount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Minor NC Count</label>
                                                        @Html.TextBoxFor(model => model.MinorNCCount, new { @placeholder = "Minor NC Count", @class = "form-control MinorNCCount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.MinorNCCount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row" style="pointer-events:none;">
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>OBSERVATION Count</label>
                                                        @Html.TextBoxFor(model => model.OBSERVATIONCount, new { @placeholder = "OBSERVATION Count", @class = "form-control OBSERVATIONCount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.OBSERVATIONCount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Concern Count</label>
                                                        @Html.TextBoxFor(model => model.ConcernCount, new { @placeholder = "Concern Count", @class = "form-control ConcernCount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.ConcernCount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>OFI Count</label>
                                                        @Html.TextBoxFor(model => model.OFICount, new { @placeholder = "OFI Count", @class = "form-control OFICount", autocomplete = "off", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.OFICount, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Additional Remarks (if any):</label>
                                                        @*@Html.TextBoxFor(model => model.Planning_opportunities_Remarks, new { placeholder = "Enter Additional Remarks", @class = "form-control form-control-custom CompanyName" })*@
                                                        @Html.TextAreaFor(model => model.AdditionalRemarks, new { @class = "form-control form-control-custom CompanyName", @rows = "3", @placeholder = "Enter Additional Remarks" })
                                                        @Html.ValidationMessageFor(model => model.AdditionalRemarks, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-xs-12">
                                                <div class="form-group">
                                                    <label><i class="fa fa-paperclip" style="color:black;"></i> NC Documents (Please attach files here): <span style="color:#ff0000;">*</span></label>
                                                    <input type="file" class="filepond" name="filepond" id="FileUpload" multiple>
                                                    <input hidden="hidden" id="hdfFileUpload" name="FileUpload" class="hidden" />
                                                </div>
                                            </div>
                                            @if (Model != null)
                                            {
                                                if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <ul class="Attachment">
                                                                    @foreach (var item in Model.FileDetails)
                                                                    {
                                                                        <li>
                                                                            <a class="title" href="/Internal_Audit_Report/Download/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                            <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <p style="color:red;text-align:center;font-weight:bold;">No Files Uploaded</p>
                                                }
                                            }
                                            else
                                            {
                                                <p style="color:red;text-align:center;font-weight:bold;">There are no Attachments !</p>
                                            }

                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Is Audit Completed:</label>
                                                        @Html.DropDownListFor(model => model.IsAuditCompleted, new List<SelectListItem> {
                                               new SelectListItem {Text="----Is Audit Completed------",Value="" },
                                                 new SelectListItem {Text="Yes",Value="Yes" },
                                                  new SelectListItem {Text="No",Value="No" }

                                             }, new { @class = "form-control form-control-custom Count" })
                                                        @Html.ValidationMessageFor(model => model.IsAuditCompleted, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                            </div>
                                            <div class="col-xs-12">
                                                <div class="form-group">
                                                    <label><i class="fa fa-paperclip" style="color:black;"></i> Closure Related Documents (Please attach files here) : <span style="color:#ff0000;">*</span></label>
                                                    <input type="file" class="filepond" name="filepond" id="SupportingDocumentFileUpload" multiple>
                                                    <input hidden="hidden" id="hdfFileUploadSupportingDocument" name="FileUpload" class="hidden" />
                                                </div>
                                            </div>

                                            @if (Model != null)
                                            {
                                                if (Model.FileDetails1 != null && Model.FileDetails1.Count > 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <ul class="Attachment">
                                                                    @foreach (var item in Model.FileDetails1)
                                                                    {
                                                                        <li>
                                                                            <a class="title" href="/Internal_Audit_Report/Download1/?p=@(item.IDS + item.Extension)&d=@item.FileName">@item.FileName</a>
                                                                            <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem1">X</a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <p style="color:red;text-align:center;font-weight:bold;">No Files Uploaded</p>
                                                }
                                            }
                                            else
                                            {
                                                <p style="color:red;text-align:center;font-weight:bold;">There are no Attachments !</p>
                                            }
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Are Findings Closed:</label>
                                                        @Html.DropDownListFor(model => model.AreFindingsClose, new List<SelectListItem> {
                                               new SelectListItem {Text="--- Are Finding Closed ---",Value="" },
                                                 new SelectListItem {Text="Yes",Value="Yes" },
                                                  new SelectListItem {Text="No",Value="No" }

                                             }, new { @class = "form-control form-control-custom Count" })
                                                        @Html.ValidationMessageFor(model => model.AreFindingsClose, "", new { @class = "text-danger validation-msg" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 text-center">

                                                @if (Model.Internal_Audit_Id != 0)
                                                {
                                                    @*<button type="submit" class="btn btn-default insert-form-btn" id="btnsave"><i class="fa fa-plus-circle"></i> Save</button>*@
                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnsave"> Save </button>
                                                }
                                                else
                                                {
                                                    <button type="reset" class="btn btn-default news-btn">Reset</button>
                                                    @*<button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle" id="btnsave"></i>Save</button>*@
                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnsave"> Save </button>
                                                }
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--filepond-->
<!-- Load FilePond library -->

<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>
@*Custom Scripts*@
@*Binding Service Type Dropdownlist*@
<script>
    $(document).ready(function () {
        $("#ddlServiceType").change(function () {
            $("#ddlPedType").empty();
            $("#ddlOtherType").empty();
            $("#ddlEnergyType").empty();
            $("#ddlPedType").append('<option>--Select Ped Type--</option>');
            $("#ddlOtherType").append('<option>--Select Other Type--</option>');
            $("#ddlEnergyType").append('<option>--Select Energy Type--</option>');
            if ($("#ddlServiceType").val() != "--Select ServiceType--") {
                if ($("#ddlServiceType").val() == 200) {
                    $.ajax({
                        url: '@Url.Action("BindPedType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ SubType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlPedType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
                if ($("#ddlServiceType").val() == 300) {
                    $.ajax({
                        url: '@Url.Action("BindOtherType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ OtherType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlOtherType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
                if ($("#ddlServiceType").val() == 400) {
                    $.ajax({
                        url: '@Url.Action("BindEnergyType", "EnquiryMaster")',
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ EnergyType: $("#ddlServiceType").val() }),
                        contentType: 'application/json',
                        success: function (Data) {
                            if (Data.ErrorMessage == "SystemSessionTimeOut") {
                                window.location = "../Login/UserLogin";
                            }
                            else {
                                $.each(Data, function (i, l) {
                                    $("#ddlEnergyType").append('<option value="' + l.Value + '">' +
										 l.Text + '</option>');
                                });
                            }
                        },
                        error: function (ex) {
                            alert('Failed! ' + ex);
                        }
                    });
                }
            }//First Bind Ped
        });
    });
</script>

<script>
    var SummaryExtension = false;
    var fileExtension = ["pdf", "PDF", "xls", "xlsx", "doc", "DOC", "docx", "DOCX", "png", "PNG", "jpg", "JPG", "JPEG", "gif"];
    $("#FileUpload").change(function (e) {
        debugger;
        var files = $("#FileUpload input[type='file']").get(0).files;
        for (var index = 0; index < files.length; index++) {
            var singleExtension = e.target.files[index].name.split('.').pop();
            var Condition = fileExtension.includes(singleExtension);
            if (Condition == true) {
                SummaryExtension = true;
            }
            else {
                alert("Only formats are allowed : " + fileExtension.join(','));
                SummaryExtension = false;
                return;
            }
        }
        if (SummaryExtension == true) {
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++) {
                fileData.append("FileUpload input[type='file']", files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            var link = '@Url.Action("TemporaryFilePathDocumentAttachment", "Internal_Audit_Report")';
            xhr.open('POST', link, 'true');
            xhr.send(fileData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var data = xhr.responseText;
                    data = data.replace(/"/g, "");
                    $("#NCDocument").val(data);
                }
            }

        }


    })
</script>
<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            var EnquiryID = $("#EQ_ID").val();
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id'), EnquiryID: $("#EQ_ID").val() }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>

<!--Supporting Document-->

<script>
    var SummaryExtension = false;
    var fileExtension = ["pdf", "PDF", "xls", "xlsx", "doc", "DOC", "docx", "DOCX", "png", "PNG", "jpg", "JPG", "JPEG", "gif"];
    $("#SupportingDocumentFileUpload").change(function (e) {
        debugger;
        var files = $("#SupportingDocumentFileUpload input[type='file']").get(0).files;
        for (var index = 0; index < files.length; index++) {
            var singleExtension = e.target.files[index].name.split('.').pop();
            var Condition = fileExtension.includes(singleExtension);
            if (Condition == true) {
                SummaryExtension = true;
            }
            else {
                alert("Only formats are allowed : " + fileExtension.join(','));
                SummaryExtension = false;
                return;
            }
        }
        if (SummaryExtension == true) {
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++) {
                fileData.append("SupportingDocumentFileUpload input[type='file']", files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            var link = '@Url.Action("SupportingDocumentAttachment", "Internal_Audit_Report")';
            xhr.open('POST', link, 'true');
            xhr.send(fileData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var data = xhr.responseText;
                    data = data.replace(/"/g, "");
                    $("#SupportingDocument").val(data);
                }
            }

        }


    })
</script>

<script>
    $(document).ready(function () {
        $('.deleteItem1').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            var EnquiryID = $("#EQ_ID").val();
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile1")',
                    type: 'POST',
                    data: { id: $(this).data('id'), EnquiryID: $("#EQ_ID").val() }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>

<script>
    var SummaryExtension = false;
    var fileExtension = ["pdf", "PDF", "xls", "xlsx", "doc", "DOC", "docx", "DOCX", "png", "PNG", "jpg", "JPG", "JPEG", "gif", ".msg", ".MSG"];
    $("#SupportingDocumentFileUpload").change(function (e) {
        debugger;
        var files = $("#SupportingDocumentFileUpload input[type='file']").get(0).files;
        for (var index = 0; index < files.length; index++) {
            var singleExtension = e.target.files[index].name.split('.').pop();
            var Condition = fileExtension.includes(singleExtension);
            if (Condition == true) {
                SummaryExtension = true;
            }
            else {
                alert("Only formats are allowed : " + fileExtension.join(','));
                SummaryExtension = false;
                return;
            }
        }
        if (SummaryExtension == true) {
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++) {
                fileData.append("SupportingDocumentFileUpload input[type='file']", files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            var link = '@Url.Action("AuditReportRelatedDocument", "Internal_Audit_Report")';
            xhr.open('POST', link, 'true');
            xhr.send(fileData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var data = xhr.responseText;
                    data = data.replace(/"/g, "");
                    $("#SupportingDocument").val(data);
                }
            }

        }
    })
</script>

<script>
    $(function () {
        $(".ToDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"

        });
    });
</script>
<script>
    $(function () {
        $(".FromDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"

        });
    });

    $(function () {
        $(".CFromDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"

        });
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
<script type="text/javascript">
    $(function () {
        $('#Auditee').multiselect({
            includeSelectAllOption: true
        });

    });

</script>

<script>
    $('.COnSiteTime').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;

        }

        e.preventDefault();
        return false;
    });
    $('.CTravelTime').keypress(function (e) {
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;

        }

        e.preventDefault();
        return false;
    });


    $('.CriticalNC1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;

        }

        e.preventDefault();
        return false;
    });
    $('.MajorNC1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;
        }
        e.preventDefault();
        return false;
    });
    $('.MinorNC1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;
        }
        e.preventDefault();
        return false;
    });
    $('.Observation1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;
        }
        e.preventDefault();
        return false;
    });
    $('.Concern1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;
        }
        e.preventDefault();
        return false;
    });
    $('.OFI1').keypress(function (e) {
        debugger;
        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {

            return true;
        }
        e.preventDefault();
        return false;
    });

    $(".CriticalNC1").change(function () {
        var sum = 0;
        $('.CriticalNC1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#CriticalNCCount').val(sum);
        updateTotal();
    })
    $(".MajorNC1").change(function () {
        var sum = 0;
        $('.MajorNC1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#MajorNCCount').val(sum);
        updateTotal();
    })
    $(".MinorNC1").change(function () {
        var sum = 0;
        $('.MinorNC1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#MinorNCCount').val(sum);
        updateTotal();
    })
    $(".Observation1").change(function () {
        var sum = 0;
        $('.Observation1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#OBSERVATIONCount').val(sum);
        updateTotal();
    })
    $(".Concern1").change(function () {
        var sum = 0;
        $('.Concern1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#ConcernCount').val(sum);
        updateTotal();
    })
    $(".OFI1").change(function () {
        var sum = 0;
        $('.OFI1').each(function () {
            if ($(this).val() != "") {
                sum += parseInt($(this).val());
            }
            // Or this.innerHTML, this.innerText

        });
        $('#OFICount').val(sum);
        updateTotal();
    })


</script>


<script>
    var updateTotal = function () {
        debugger;
        var input1 = parseInt($('#CriticalNCCount').val());
        var input2 = parseInt($('#MajorNCCount').val());
        var input3 = parseInt($('#MinorNCCount').val());
        var input4 = parseInt($('#OBSERVATIONCount').val());
        var input5 = parseInt($('#ConcernCount').val());
        var input6 = parseInt($('#OFICount').val());


        if (isNaN(input1) || isNaN(input2) || isNaN(input3) || isNaN(input4) || isNaN(input5) || isNaN(input6)) {

        } else {
            $('#TotalFindings').val(input1 + input2 + input3 + input4 + input5 + input6);
        }
    };
    $(document).ready(function () {
        updateTotal();
    });
</script>
<script type="text/javascript">

    var DTRowCount = 1;

    function AddTable(s) {
        debugger;
        $('body').on('focus', ".CFromDate", function () {
            $(this).datepicker({ dateFormat: 'dd/mm/yy' });
        });
        if ($('#DTestTable_' + s + ' tr').length - 1 >= DTRowCount) {
            var count = $('#DTestTable_' + s + ' tr').length - 1;
            DTRowCount = count;
        }
        DTRowCount += 1;
        var contactdiv = '<tr class="trDomestic">' +
      '<td>' +
            '<input type="text"  style="text-align:center" name="SDate_Of_Audit"  class="form-control CFromDate" id="IDFromDate' + DTRowCount + '" /></td>' +
            '<td><input type="text"  style="text-align:center" name="OnSiteTime"  class="form-control COnSiteTime" id="IDOnSiteTime' + DTRowCount + '" /></td>' +
            '<td><input type="text"  style="text-align:center" name="OffSiteTime"  class="form-control COffSiteTime" id="IDOffSiteTime' + DTRowCount + '" /></td>' +
            '<td><input type="text"  style="text-align:center" name="TravelTime"  class="form-control CTravelTime" id="IDTravelTime' + DTRowCount + '" /></td>' +
            '<td style="text-align:center"><button type="button" style="text-align:center" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
      '</tr>';

        $('#DTestTable_' + s).append(contactdiv);
    }

    //vaibhav sir old code
    //$(document).ready(function () {
    //    debugger;
    //    $(document).on("click", ".classAdd", function () { //
    //        debugger;

    //        $('body').on('focus', ".CFromDate", function () {
    //            $(this).datepicker({ dateFormat: 'dd/mm/yy' });
    //        });
    //        if ($('#DTestTable tr').length - 1 >= DTRowCount) {
    //            var count = $('#DTestTable tr').length - 1;
    //            DTRowCount = count;
    //        }
    //        //if (count < 3) {
    //        DTRowCount += 1;
    //        var contactdiv = '<tr class="trDomestic">' +
    //      '<td>' +
    //            '<input type="text"  style="text-align:center" name="SDate_Of_Audit"  class="form-control CFromDate" id="IDFromDate' + DTRowCount + '" /></td>' +
    //            '<td><input type="text"  style="text-align:center" name="OnSiteTime"  class="form-control COnSiteTime" id="IDOnSiteTime' + DTRowCount + '" /></td>' +
    //            '<td><input type="text"  style="text-align:center" name="OffSiteTime"  class="form-control COffSiteTime" id="IDOffSiteTime' + DTRowCount + '" /></td>' +
    //            '<td><input type="text"  style="text-align:center" name="TravelTime"  class="form-control CTravelTime" id="IDTravelTime' + DTRowCount + '" /></td>' +
    //            '<td style="text-align:center"><button type="button" style="text-align:center" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
    //      '</tr>';

    //        $('#DTestTable').append(contactdiv); // Adding these controls to Main table class

    //    });
    //});
    //end here
</script>

<script>
    $(document).on("click", ".deleteContact", function () {
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        DTRowCount = DTRowCount - 1;
        sumIt()
    });
</script>



<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTable");
    }
</script>


<script>
    $("#btnsave").on('click', function (event) {
        debugger;
        //added by satish
        let stopProcessing = false;
        var arrayOfTimesheet = [];
        //end
        var a = "1";
        var DArray = [];
        var DActivity = [];


        if ($("#Branch").val() == "" || $("#Branch").val() == null) {
            alert("Please Enter Branch first!");
            $("#Branch").focus()
            return false;
        }
        if ($("#Plan_ref_No").val() == "" || $("#Plan_ref_No").val() == null) {
            alert("Please Enter Plan ref Serial No first!");
            $("#Branch").focus()
            return false;
        }
        if ($("#Auditor").val() == "" || $("#Auditor").val() == null) {
            alert("Please Enter Auditor first!");
            $("#Branch").focus()
            a = "2";
            return false;
        }
        if ($("#Auditee").val() == "" || $("#Auditee").val() == null) {
            alert("Please Enter Auditee first!");
            $("#Branch").focus()
            a = "2";
            return false;
        }
        if ($("#Department").val() == "" || $("#Department").val() == null) {
            alert("Please Enter Department first!");
            $("#Branch").focus()
            a = "2";
            return false;
        }


        var Branch = $("#Branch").val();
        var AuditId = $("#AuditId").val();



        var IdOBSType = $("#IdOBSType option:selected");
        var CostCenter = "";
        IdOBSType.each(function () {
            CostCenter += $(this).val() + ",";
        });
        CostCenter = CostCenter.replace(/,\s*$/, "");


        var Plan_ref_No = $("#Plan_ref_No").val();

        var AuditorName = $("#Auditor").val();
        var AuditorValue = $("#AuditorId").val();

        var ExAuditor = $("#ExAuditor").val();
        var Auditee1 = $("#Auditee").val();

        var Auditee1 = $("#Auditee option:selected");
        var Auditee = "";
        Auditee1.each(function () {
            Auditee += $(this).val() + ",";
        });
        Auditee = Auditee.replace(/,\s*$/, "");

        var Department = $("#Department").val();

        var TotalFindings = $("#TotalFindings").val();
        var CriticalNCCount = $("#CriticalNCCount").val();
        var MajorNCCount = $("#MajorNCCount").val();
        var MinorNCCount = $("#MinorNCCount").val();
        var OBSERVATIONCount = $("#OBSERVATIONCount").val();
        var ConcernCount = $("#ConcernCount").val();
        var OFICount = $("#OFICount").val();
        var AdditionalRemarks = $("#AdditionalRemarks").val();
        var IsAuditCompleted = $("#IsAuditCompleted  option:selected").val();
        var AreFindingsClose = $("#AreFindingsClose  option:selected").val();

        var Internal_Audit_Id = $("#Internal_Audit_Id").val();
        $('.trDomestic').each(function () {
            var trD = {};
            var TrainingStartDate = $(this).find('.CFromDate').val();
            var TrainingStartTime = $(this).find('.COnSiteTime').val();
            var TrainingEndTime = $(this).find('.CTravelTime').val();
            var OffSiteTime = $(this).find('.COffSiteTime').val();
            let Id = $(this).find('.Id').val();
            //added by satish common fun.
            let status = ValidateTimeSheet(parseFloat(TrainingStartTime), parseFloat(OffSiteTime), parseFloat(TrainingEndTime));
            if (status === false) {
                debugger;
                stopProcessing = true;
                event.preventDefault();
                return false;
            }
            else {
                arrayOfTimesheet.push({ dateSE: TrainingStartDate, totalStartTime: TrainingStartTime, totalEndTime: OffSiteTime, totalTravelTime: TrainingEndTime, Id: Id });
            }
            //end
            if (TrainingStartDate == '') {
                a = "3";
            }
            if (TrainingStartTime == '') {

                a = "4";
            }
            if (TrainingEndTime == '') {

                a = "5";
            }
            if (a == "1") {
                trD['SDate_Of_Audit'] = TrainingStartDate;
                trD['OnSiteTime'] = TrainingStartTime;
                trD['TravelTime'] = TrainingEndTime;
                trD['OffSiteTime'] = OffSiteTime;

                DArray.push(trD);
            }
            else {
                return false;
            }

        });

        //added by satish
        if (stopProcessing === true) {
            event.preventDefault();
            return false;
        }
        else {
            CommonajaxCallForTimeSheet(arrayOfTimesheet);
            const ajaxstatus = $("#setvalue").val();
            if (ajaxstatus == 'true') {
                event.preventDefault()
                return false;
            }
        }
        //added by satish end here
        $('.trAcivity').each(function () {
            var trA = {};

            var PKActivityTypeId = $(this).find('.PKActivityTypeId').val();
            var EvidenceChecked = $(this).find('.EvidenceChecked').val();
            var idRemarks = $(this).find('.idRemarks').val();
            var CriticalNC1 = $(this).find('.CriticalNC1').val();
            var MajorNC1 = $(this).find('.MajorNC1').val();
            var MinorNC1 = $(this).find('.MinorNC1').val();
            var Observation1 = $(this).find('.Observation1').val();
            var Concern1 = $(this).find('.Concern1').val();
            var OFI1 = $(this).find('.OFI1').val();
            var RCA = $(this).find('.RCA').val();
            var CA = $(this).find('.CA').val();
            var Correction = $(this).find('.Correction').val();
            var Auditorremarks = $(this).find('.Auditorremarks').val();

            trA['PKActivityTypeId'] = PKActivityTypeId;
            trA['EvidenceChecked'] = EvidenceChecked;
            trA['Remarks'] = idRemarks;
            trA['CriticalNC'] = CriticalNC1;
            trA['MajorNC'] = MajorNC1;
            trA['MinorNC'] = MinorNC1;
            trA['Observation'] = Observation1;
            trA['Concern'] = Concern1;
            trA['OFI'] = OFI1;
            trA['RCA'] = RCA;
            trA['CA'] = CA;
            trA['Correction'] = Correction;
            trA['Auditorremarks'] = Auditorremarks;
            DActivity.push(trA);
        });
        if (a == "3") {
            alert("Please Enter Date!");
            return false;
        }
        if (a == "4") {
            alert("Please Enter Time!");
            return false;
        }
        if (a == "5") {
            alert("Please Enter Time!");
            return false;
        }

        var ModelVisitReport =
       {
           Branch: Branch,
           CostCenter: CostCenter,
           Plan_ref_No: Plan_ref_No,
           Auditor: AuditorName,
           AuditorId: AuditorValue,
           ExAuditor: ExAuditor,
           Auditee: Auditee,
           Department: Department,
           TotalFindings: TotalFindings,
           CriticalNCCount: CriticalNCCount,
           MajorNCCount: MajorNCCount,
           MinorNCCount: MinorNCCount,
           OBSERVATIONCount: OBSERVATIONCount,
           ConcernCount: ConcernCount,
           OFICount: OFICount,
           AdditionalRemarks: AdditionalRemarks,
           IsAuditCompleted: IsAuditCompleted,
           AreFindingsClose: AreFindingsClose,
           Internal_Audit_Id: Internal_Audit_Id,
           AuditId: AuditId,
       }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateInternal_Audit_Report", "Internal_Audit_Report")',
            dataType: 'json',
            Async: false,
            data: JSON.stringify({ ObjModelVisitReport: ModelVisitReport, "DArray": DArray, "DActivity": DActivity, }),

            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                if (response.result == 'Redirect') {
                    alert("Details has been Save successfully!!!")
                    window.location = response.url;
                }

                if (response.result == 'Update') {
                    alert("Details has been updated successfully!!!")
                    window.location = response.url;
                }
            }
        })
    });

</script>
@*satish code start here*@
@*<script>
    function CommonajaxCallForTimeSheet(arrayOfTimesheet) {
        $.ajax({
            url: '@Url.Action("CheckCondition", "VisitReport")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ matchingData: arrayOfTimesheet }),
            async: false,
            success: function (response) {
                debugger;
                if (!!response && response.success != "") {
                    alert(response.success);
                    $("#setvalue").val('true');
                    return false;
                }
            },
            error: function (xhr, status, error) {
                console.error('Error sending data: ', error);
            }
        });
    }

    function ValidateTimeSheet(totalStartTime, totalEndTime, totalTravelTime) {
        debugger;
        if ((totalStartTime + totalEndTime + totalTravelTime) > 24) {
            alert("greater than 24");
            return false;
        } else if ((totalStartTime + totalEndTime) > 8) {
            alert("greater than 8")
            return false;
        } else if ((totalTravelTime) > 16) {
            alert("Travel time greater than 16")
            return false;
        }
    }
</script>*@
<script>
    function toggleTable(s) {
        debugger;
        var table = document.getElementById("DomesticCurrency_" + s);
        if (table.style.display === "none") {
            table.style.display = "block";
        } else {
            table.style.display = "none";
        }
    }
</script>

<style>
    .wicrorf {
        width: 55px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    .txtareabox {
        Height: 50px;
        width: 100px;
    }

    .rotate-column {
        writing-mode: vertical-lr;
        transform: rotate(180deg);
        white-space: nowrap;
    }
    .remove-search {
        font-weight: normal;
    }

    .remove-space {
        white-space: nowrap;
    }
</style>

<style>
    /* Define the special styling for the specific table */
    .special-table-container {
        overflow-x: auto; /* Enable horizontal scrolling */
        max-width: 100%; /* Optional: Adjust to fit your layout */
    }
</style>
@*end*@






