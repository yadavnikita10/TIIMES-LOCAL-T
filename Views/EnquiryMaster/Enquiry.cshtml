@model TuvVision.Models.EnquiryMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;

@{

    ViewBag.Title = "Enquiry";
    Layout = "~/Views/Shared/_TuvVision.cshtml";

    //   var estdate = DateTime.Now;
    //   string EstCloseDate = estdate.AddDays(2).ToString("dd/MM/yyyy");

    //var RefDate = DateTime.Now;
    //   string strRefDate = RefDate.ToString("dd/MM/yyyy");

    List<string> EditLocation = ViewBag.EditproductName as List<string>;

    List<string> EditCurrency = ViewBag.EditproductName as List<string>;
    List<string> EditRegretReason = ViewBag.EditRegretReason as List<string>;
    List<string> EditActionTaken = ViewBag.EditActionTaken as List<string>;

    int j = 0;
    int k = 0;
}

<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />

<!--multiselect-->
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
<!--filepond-->
<link href="~/AllJsAndCss/css/filepond.css" rel="stylesheet" />





@*DATEPICKER*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>






<script>
    //$(function () {
    //    $(".estimatedclosedate").datepicker({
    //        dateFormat: 'dd/mm/yy',//check change
    //        changeMonth: true,
    //        changeYear: true,
    //        yearRange: "-100:+50",
    //        //maxDate: "+15d"
    //    });
    //});

    $(function () {
        $(".RefDate").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50",
            minDate: "-15d",
            maxDate:"0"
           // maxDate: "+15d"
        });
    });
</script>

@*First*@


<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>

@{
    List<string> EditCityName = ViewBag.EditCityName as List<string>;
    List<string> EditCountryName = ViewBag.EditCountryName as List<string>;
}

<style type="text/css">
    body {
        font-family: 'TNG Pro';
        /*font-size: 10pt;*/
        font-size: 13px;
    }

    .error {
        color: #FA3746;
    }

    .tooltip-container {
        position: relative;
        display: inline-block;
    }

        .tooltip-container .tooltiptext {
            visibility: hidden;
            width: 300px; /* Adjust width as needed */
            background-color: #555;
            color: #fff;
            text-align: left;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 1;
            bottom: 125%; /* Position above the element */
            left: 50%;
            margin-left: -150px; /* Center the tooltip */
            opacity: 0;
            transition: opacity 0.3s;
        }

        .tooltip-container:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }

    .tooltip-icon {
        color: #555;
        font-size: 16px;
        margin-left: 5px;
        vertical-align: middle;
    }

    th {
        border: 1px solid black;
    }

    td {
        border: 1px solid black;
    }

    .table {
        max-width: 120%;
        margin-bottom: 20px;
    }

    .address-cell {
        position: relative;
        display: inline-block;
        cursor: pointer;
    }

    .custom-modal {
        width: 80%;
        max-width: 1200px;
    }

    .form-control1 {
        background-color: #fff;
        height: 20px;
        border: 1px solid #dee2e6;
        border-radius: 2px;
        margin-bottom: 20px;
        outline: none;
        box-shadow: none;
        font-family: mont-reg;
        font-family: 'TNG Pro';
        margin-bottom: 10px;
        font-size: 13px;
        width: 212px;
        text-align: center;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.EQ_ID)
    @Html.Hidden("EQ_ID")
    @Html.HiddenFor(m => m.EnquiryNumber)

    @Html.HiddenFor(m => m.CheckListId)
    @Html.HiddenFor(m => m.CheckListDescription)
    @Html.HiddenFor(m => m.RegretStatus)

    @*@Html.ValidationSummary(false, "", new { @class = "error" })*@

        <!--Start of main content 3-->
    <div class="grey-bg-f3">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("EnquiryMasterDashBoard", "EnquiryMaster")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                @{
                                    if (Model != null)
                                    {
                                        <h3 class="form-page-title">Enquiry Number : @Html.DisplayFor(model => model.EnquiryNumber)</h3>
                                    }
                                    else
                                    {
                                        <h3 class="form-page-title">Create Enquiry</h3>
                                    }
                                }
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form>

                                                <div class="row">


                                                    <div class="col-xs-12">
                                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                        <span>
                                                            <strong>Notes </strong>
                                                        </span>: 1) <span style="color:#E12F24;">*</span> - Mandatory.<br /> &nbsp;
                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                        2)<span style="color:#1CE325;">*</span> - Leave these fields (End Customer Name & Project Name) blank, if details are not available.<br />
                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
                                                        3)<span style="color:#E12F24;">*</span> - Enquiry Communication Attachments Mandatory.


                                                        @*3) Rate – Insert total value in case of type Lump sum and percentage.
                                                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            4) Insert estimated figures as per type. i.e. Mandays for type Man days, Lump sum and Percentage; Man months for type Man month; Man hours for
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type Man hours.
                                                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            5) Insert brief for Lump Sum and percentage enquiries. Examples – 1.5 %, Audit visits + certification charges, 3 welder qualification + Visit charges
                                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and Design appraisal charges etc.*@
                                                        <br />
                                                        @*<p style="padding:0;margin:0;margin-bottom:10px;color:#FB5F6B;font-weight:bold;font-size: 12px;">Fields marked * are mandatory</p>*@
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12">
                                                        <hr class="custom-hr1">
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>OBS type:<span style="color:#ff0000;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.OBSType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.ProjectType, new SelectList(@ViewBag.OBSType, "Code", "Name"), "Select OBS Type", new { @id = "ddlProjectType", @class = "form-control" })
                                                                    }

                                                                    else if (ViewData["ProjectTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.ProjectType, (IEnumerable<SelectListItem>)ViewData["ProjectTypeItems"], "Select OBS Type", new { @id = "ddlProjectType", @class = "form-control" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.ProjectType, new SelectList(@ViewBag.OBSType, "Code", "Name"), "Select OBS Type", new { @id = "ddlProjectType", @class = "form-control" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.ProjectType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service portfolio type:<span style="color:#ff0000;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.PortfolioType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.PortfolioType, new SelectList(@ViewBag.PortfolioType, "Code", "Name"), "Select Portfolio Type", new { @id = "ddlPortfolioType", @class = "form-control" })
                                                                    }
                                                                    else if (ViewData["PortfolioTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.PortfolioType, (IEnumerable<SelectListItem>)ViewData["PortfolioTypeItems"], "Select Portfolio Type", new { @id = "ddlPortfolioType", @class = "form-control" })
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.PortfolioType, new SelectList(@ViewBag.PortfolioType, "Code", "Name"), "Select Portfolio Type", new { @id = "ddlPortfolioType", @class = "form-control" })
                                                                }

                                                                @Html.ValidationMessageFor(m => m.PortfolioType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Service type:<span style="color:#ff0000;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.ServiceType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.SubServiceType, new SelectList(@ViewBag.ServiceType, "Code", "Name"), "Select Service Type", new { @id = "ddlServiceType", @class = "form-control" })
                                                                    }

                                                                    else if (ViewData["ServiceTypeItems"] != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.SubServiceType, (IEnumerable<SelectListItem>)ViewData["ServiceTypeItems"], "Select Service Type", new { @id = "ddlServiceType", @class = "form-control" })
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.SubServiceType, new SelectList(@ViewBag.ServiceType, "Code", "Name"), "Select Service Type", new { @id = "ddlServiceType", @class = "form-control" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.SubServiceType, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>



                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>Branch:<span style="color:#ff0000;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.Branch != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.Branch, new SelectList(@ViewBag.Branch, "Code", "Name"), "---Select Branch---", new { @id = "ddlBranch", @class = "form-control" })
                                                                    }
                                                                }
                                                                if (ViewData["BranchNameItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Branch, (IEnumerable<SelectListItem>)ViewData["BranchNameItems"], "---Select Branch---", new { @id = "ddlBranch", @class = "form-control" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.Branch, new SelectList(@ViewBag.Branch, "Code", "Name"), new { @id = "ddlBranch", @class = "form-control" })

                                                                }

                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>Source:<span style="color:#ff0000;">*</span></label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.SourceType != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.Source, new SelectList(@ViewBag.SourceType, "Code", "Name"), "---Select Source Type---", new { @id = "ddlSourceType", @class = "form-control" })
                                                                    }
                                                                }
                                                                if (ViewData["SourceTypeItems"] != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Source, (IEnumerable<SelectListItem>)ViewData["SourceTypeItems"], "---Select Source Type---", new { @id = "ddlSourceType", @class = "form-control" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.Source, new SelectList(@ViewBag.SourceType, "Code", "Name"), "---Select Source Type---", new { @id = "ddlSourceType", @class = "form-control" })
                                                                }
                                                            }
                                                            @*@Html.ValidationMessageFor(m => m.Source, "", new { @class = "text-danger validation-msg" })*@
                                                        </div>

                                                    </div>




                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>Receipt date:<span style="color:#ff0000;">*</span></label>

                                                            @if (Model != null)
                                                            {
                                                                @Html.TextBoxFor(model => model.RefDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Enquiry receipt Date", @class = "form-control RefDate", autocomplete = "off" })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.RefDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Enquiry receipt Date", @class = "form-control RefDate", autocomplete = "off" })
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>closure date:<span style="color:#ff0000;">*</span></label>
                                                            @if (Model != null)
                                                            {
                                                                @Html.TextBoxFor(model => model.EstClose, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Est close date", @class = "form-control estimatedclosedate", autocomplete = "off" })
                                                                @*@Html.ValidationMessageFor(m => m.EstClose, "", new { @class = "text-danger validation-msg" })*@
                                                            }
                                                            else
                                                            {

                                                                @Html.TextBoxFor(model => model.EstClose, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Est close date", @class = "form-control estimatedclosedate", autocomplete = "off" })
                                                                @*@Html.TextBoxFor(model => model.EstClose, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Est close date", @Value = EstCloseDate, @class = "form-control estimatedclosedate", autocomplete = "off" })*@
                                                                @*@Html.ValidationMessageFor(m => m.EstClose, "", new { @class = "text-danger validation-msg" })*@
                                                            }

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Reference details:<span style="color:#ff0000;">*</span></label>
                                                            @Html.TextBoxFor(model => model.EnquiryReferenceNo, new { placeholder = "Enquiry reference number", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.EnquiryReferenceNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Old Customer Name:</label>
                                                            @Html.TextBoxFor(model => model.oldcustomername, new { placeholder = "Old Customer name", @class = "form-control form-control-custom", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.oldcustomername, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            @if (Model != null)
                                                            {
                                                                if (Model.oldcustomername == "")
                                                                {
                                                                    <label>

                                                                        Customer name:
                                                                        @if (Model != null)
                                                                        {
                                                                            if (Model.CostSheetA == "YES")
                                                                            {
                                                                                <span style="color:#ff0000;" class="hidden">
                                                                                    *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                    @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                                </span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span style="color:#ff0000;">
                                                                                    *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                    @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                                </span>
                                                                            }



                                                                        }
                                                                        else
                                                                        {
                                                                            <span style="color:#ff0000;">
                                                                                *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                            </span>


                                                                        }


                                                                    </label>
                                                                }

                                                                else
                                                                {
                                                                    <label>

                                                                        New  Customer name:
                                                                        @if (Model != null)
                                                                        {
                                                                            if (Model.CostSheetA == "YES")
                                                                            {
                                                                                <span style="color:#ff0000;" class="hidden">
                                                                                    *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                    @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                                </span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span style="color:#ff0000;">
                                                                                    *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                    @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                                </span>
                                                                            }



                                                                        }
                                                                        else
                                                                        {
                                                                            <span style="color:#ff0000;">
                                                                                *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                                @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                            </span>


                                                                        }


                                                                    </label>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <label>Customer name:</label>
                                                                <span style="color:#ff0000;">
                                                                    *<input type="button" value="Search" name="Search" id="btnOpenModal" style="background-color:#E12F24" />
                                                                    @*<input type="button" value="Add New" name="Add New" id="btnAddNewCustomer" style="margin-left:1px;" />*@
                                                                </span>
                                                            }


                                                            @Html.TextBoxFor(model => model.CompanyName, new { placeholder = "Customer name", @class = "form-control form-control-custom", @readonly = "readonly" })
                                                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                                            <input type="hidden" id="hfCompanyName" name="CustomerId" />
                                                            @Html.HiddenFor(model => model.CompanyName)

                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group" id="divCOntact">

                                                            @*<label style="display:block; ">Contact List: <span style="color:#ff0000;">*</span><a href="@Url.Action("ContactDetails","EnquiryMaster")" style="display:inline-block;float:right;" data-toggle="modal" data-target="#myModal"><i class="fa fa-plus-circle"></i> New Contact </a></label>*@
                                                            <label style="display:block; ">
                                                                Received from: <span style="color:#ff0000;">*</span>
                                                                @*<a id="lnkNewCOntact" href="@Url.Action("ContactDetails","EnquiryMaster")" style="display:inline-block;float:right;"*@
                                                                <a id="lnkNewCOntact" style="display:inline-block;float:right;"
                                                                   data-toggle="modal" data-target="#myModal">
                                                                    <i class="fa fa-plus-circle"></i>Add New Contact Person
                                                                </a>
                                                            </label>
                                                            

                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    @*if (ViewBag.ContactType != null)
                                                                        {
                                                                            @Html.DropDownListFor(model => model.ContactName, new SelectList(@ViewBag.ContactType, "Code", "Name"), "Select Contact Person", new { @id = "ddlContactType", @class = "form-control" })
                                                                        }
                                                                        else
                                                                        {*@
                                                            if (ViewData["ContactTypeItems"] != null)
                                                            {
                                                                @Html.DropDownListFor(model => model.ContactName, (IEnumerable<SelectListItem>)ViewData["ContactTypeItems"], "Select Contact Person", new { @id = "ddlContactType", @class = "form-control" })

                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownListFor(model => model.ContactName, new SelectList(@ViewBag.ContactType, "Code", "Name"), "Select Contact Person", new { @id = "ddlContactType", @class = "form-control" })
                                                                }
                                                                //}
                                                            }
                                                            else if (ViewData["ContactTypeItems"] != null)
                                                            {
                                                                @Html.DropDownListFor(model => model.ContactName, (IEnumerable<SelectListItem>)ViewData["ContactTypeItems"], "Select Contact Person", new { @id = "ddlContactType", @class = "form-control"})

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.ContactName, new SelectList(@ViewBag.ContactType, "Code", "Name"), "Select Contact Person", new { @id = "ddlContactType", @class = "form-control" })
                                                                }
                                                                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                                                            }

                                                        </div>
                                                    </div>





                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>End customer name:<span style="color:#1CE325;">*</span></label>
                                                            @Html.TextBoxFor(model => model.EndCustomer, new { placeholder = "Enter End Customer", @class = "form-control form-control-custom" })

                                                            @Html.ValidationMessageFor(model => model.EndCustomer, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>


                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>End Customer Project name: <span style="color:#1CE325;">*</span></label>
                                                            @Html.TextBoxFor(model => model.EnquiryDescription, new { placeholder = "Enter Project Name", @class = "form-control form-control-custom" })
                                                            @Html.ValidationMessageFor(model => model.EnquiryDescription, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>




                                                    <!-- Modal -->
                                                    <div class="modal fade bs-example-modal-lg modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                                        <div class="modal-dialog modal-lg" role="document">
                                                            <div class="modal-content">
                                                                <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                                    <h4 class="modal-title" id="myModalLabel">Add new contact</h4>
                                                                </div>



                                                                <div class="modal-body">
                                                                    <div class="form-box" style="padding-bottom:0!important;">
                                                                        <div class="row">
                                                                            <div class="col-xs-12 col-sm-12">

                                                                                <span style="color:#E12F24;">
                                                                                    <strong>Notes </strong> :
                                                                                </span> 1) <span style="color:#ff0000;">*</span> - Mandatory.<br /><br />

                                                                            </div>

                                                                            <div class="col-xs-12">
                                                                                <hr class="custom-hr1">
                                                                            </div>

                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Contact Person name:<span style="color:#ff0000;">*</span></label>
                                                                                    @Html.TextBoxFor(model => model.ContactNames, new { @placeholder = "Contact Name Here", @class = "form-control" })
                                                                                    @*@Html.ValidationMessageFor(model => model.ContactNames, "", new { @class = "text-danger" })*@

                                                                                </div>
                                                                            </div>
                                                                            @*<div class="col-xs-12 col-sm-4 hidden">

                                                                                    <div class="form-group">
                                                                                        <label>Company name:</label>

                                                                                        @if (Model != null)
                                                                                        {
                                                                                            if (ViewBag.ContactCompanyName != null)
                                                                                            {
                                                                                                @Html.DropDownListFor(model => model.ContactCompanyName, new SelectList(@ViewBag.ContactCompanyName, "Code", "Name"), "---Select Company---", new { @id = "ddlContactCompanyname", @class = "form-control" })
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            if (ViewBag.ContactCompanyName != null)
                                                                                            {
                                                                                                @Html.DropDownListFor(model => model.ContactCompanyName, new SelectList(@ViewBag.ContactCompanyName, "Code", "Name"), new { @id = "ddlContactCompanyname", @class = "form-control" })
                                                                                            }

                                                                                        }
                                                                                    </div>
                                                                                    @Html.Hidden("hidCompany")
                                                                                </div>*@

                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Designation:<span style="color:#ff0000;">*</span></label>

                                                                                    @Html.TextBoxFor(model => model.TitleName, new { @placeholder = "Designation", @class = "form-control" })
                                                                                    @Html.ValidationMessageFor(model => model.TitleName, "", new { @class = "text-danger" })


                                                                                </div>
                                                                            </div>
                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Email Id:<span style="color:#ff0000;">*</span></label>

                                                                                    @Html.TextBoxFor(model => model.Email, new { @placeholder = "Email Here", @class = "form-control" })
                                                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="row">
                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Landline number:</label>
                                                                                    @*<input type="text" class="form-control" placeholder="Home Phone Here">*@
                                                                                    @Html.TextBoxFor(model => model.HomePhone, new { @placeholder = "Landline Number Here", @class = "form-control" })
                                                                                    @*@Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })*@
                                                                                </div>
                                                                            </div>

                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Mobile number:<span style="color:#ff0000;">*</span></label>
                                                                                    @*<input type="text" class="form-control" placeholder="Mobile Here">*@
                                                                                    @Html.TextBoxFor(model => model.Mobile, new { @placeholder = "Mobile Number Here", @class = "form-control" })
                                                                                    @*@Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })*@
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Fax number:</label>
                                                                                    @Html.TextBoxFor(model => model.Fax_No, new { @placeholder = "Enter Fax Number", @class = "form-control" })
                                                                                    @Html.ValidationMessageFor(model => model.Fax_No, "", new { @class = "text-danger" })
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="row">

                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    @*<label>Primary Contact :</label>*@
                                                                                    @if (Model != null)
                                                                                    {
                                                                                        if (Model.IsMainContact == true)
                                                                                        {
                                                                                            <div>
                                                                                                <label>
                                                                                                    <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" checked="checked" />Primary Contact
                                                                                                </label>
                                                                                            </div>
                                                                                        }
                                                                                        else if (Model.IsMainContact == false)
                                                                                        {
                                                                                            <div class="checkbox">
                                                                                                <label>
                                                                                                    <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" />Primary Contact
                                                                                                </label>
                                                                                            </div>
                                                                                        }

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="checkbox">
                                                                                            <label>
                                                                                                <input type="checkbox" name="IsMainContact" id="IsMainContact" value="true" /> Primary Contact
                                                                                                <input name="IsMainContact" type="hidden" value="false" />
                                                                                            </label>
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                            </div>


                                                                            <div class="col-xs-12 col-sm-4">
                                                                                <div class="form-group">
                                                                                    <label>Status:<span style="color:#ff0000;">*</span></label>

                                                                                    @Html.DropDownListFor(m => m.ContactStatus, new List<SelectListItem>
                                                                                     {
                                                                                         //new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                                         new SelectListItem{ Text="Active", Value = "Active" },
                                                                                         new SelectListItem{ Text="In-Active", Value = "In-Active" },



                                                                                        }, new { @class = "form-control", @id = "PT" })

                                                                                </div>
                                                                            </div>

                                                                            <div class="col-xs-12 col-sm-4">

                                                                            </div>
                                                                        </div>
                                                                        <div class="row">
                                                                            <div class="col-xs-12">
                                                                                <div class="form-group hidden">
                                                                                    <label>Address:<span style="color:#ff0000;">*</span></label>
                                                                                    @*@Html.TextAreaFor(model => model.Address, new { @placeholder = "Address  Here", @class = "form-control", @rows = "3" })*@

                                                                                    @Html.DropDownListFor(model => model.Address, new SelectList(Enumerable.Empty<SelectListItem>(), "--Select Company Address--", "--Select Company Address--"), "--Select Company Address--", new { @id = "ddlCaddr", @class = "form-control" })

                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="row">
                                                                            <div class="col-xs-12 text-center">
                                                                                <button type="button" class="btn btn-default insert-form-btn " id="btnAddNewContact" title="Add New Contact"><i class="fa fa-plus-circle"></i> Add Contact</button>
                                                                            </div>
                                                                        </div>

                                                                    </div>

                                                                </div>

                                                                <div class="modal-footer" style="padding: 10px 15px;">
                                                                    <button type="button" class="btn btn-default news-btn" data-dismiss="modal" id="btncosenew">Close</button>
                                                                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                                                                </div>
                                                            </div>


                                                        </div>
                                                    </div>
                                                    <!-- Modal -->


                                                </div>







                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Region of inspection :</label><span style="color:#ff0000;">*</span>
                                                            <div class="drpdomn">
                                                            </div>

                                                            @if (ViewBag.check == "productcheck")
                                                            {

                                                                <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">
                                                                    @foreach (var item in @ViewBag.InspectionLocationItems)
                                                                    {
                                                                        if (EditLocation.Contains(item.Value))
                                                                        {
                                                                            <option value="@item.Value" selected>@item.Text</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.Value">@item.Text</option>
                                                                        }

                                                                    }
                                                                </select>
                                                            }
                                                            else
                                                            {
                                                                <select id="ProductLists" class="form-control form-multiselect-city" multiple="multiple" name="ProductList" placeholder="Select Option" required="required">

                                                                    @{

                                                                        foreach (var item in @ViewBag.InspectionLocation)

                                                                        {

                                                                            <option value="@item.Code">@item.Name&nbsp; &nbsp;</option>

                                                                        }
                                                                    }
                                                                </select>
                                                                        }

                                                            @Html.ValidationMessageFor(model => model.InspectionLocation, "", new { @class = "text-danger" })

                                                        </div>



                                                        <input type="text" class="hidden" id="ProductLists" />
                                                        @*<input type="text" class="hidden" id="ProductLists" />*@
                                                    </div>





                                                    @{

                                                        if (ViewBag.CityName != null)
                                                        {
                                                            <div class="col-xs-12 col-sm-4 form-multiselect-city-box" style='display:none;' id='DOMESTIC'>
                                                                <div class="form-group">
                                                                    <label>Cities for domestic:</label>
                                                                    <a id="lnkNewCity" style="display:inline-block;float:right;"
                                                                       data-toggle="modal" data-target="#AddNewCity">
                                                                        <i class="fa fa-plus-circle"></i>Add New City
                                                                    </a>
                                                                    <select id="CityNameList" class="form-control form-multiselect-city" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                        @{
                                                                            if (ViewBag.CityNameItems == null)
                                                                            {
                                                                                foreach (var item in ViewBag.CityName)
                                                                                {
                                                                                    <option value="@item.Code">@item.Name</option>
                                                                                }
                                                                            }
                                                                        }

                                                                    </select>
                                                                </div>
                                                            </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <script>
                                                                                            $("#DomesticCurrency").show();
                                                                                </script>
                                                                                        <div class="col-xs-12 col-sm-4 form-multiselect-city-box-edit" id='DOMESTIC'>
                                                                                            <div class="form-group">
                                                                                                <label>Cities for Domestic:</label>
                                                                                                <a id="lnkNewCity" style="display:inline-block;float:right;"
                                                                                                   data-toggle="modal" data-target="#AddNewCity">
                                                                                                    <i class="fa fa-plus-circle"></i>Add New City
                                                                                                </a>
                                                                                                <select id="CityNameList" class="form-control form-multiselect-city " multiple="multiple" name="rolename" placeholder="Select Option">
                                                                                                    @{

                                                                                                        foreach (var item in ViewBag.CityNameItems)
                                                                                                        {
                                                                                                            if (EditCityName.Contains(item.Value))//15
                                                                                                            {
                                                                                                                <option value="@item.Value" selected>@item.Text</option>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <option value="@item.Value">@item.Text</option>
                                                                                                            }

                                                                                                        }
                                                                                                    }
                                                                                                </select>
                                                                                            </div>
                                                                                            <input type="text" class="hidden" id="CityNameList" />
                                                                                        </div>
                                                                                                        }
                                                    }


                                                    @{
                                                        if (ViewBag.CountryName != null)
                                                        {
                                                            <div class="col-xs-12 col-sm-4 form-multiselect-country-box" style='display:none;' id='INTERNATIONAL'>
                                                                <div class="form-group">
                                                                    <label>Countries for International:</label>


                                                                    <select id="CountryNameList" class="form-control form-multiselect-country" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                        @{

                                                                            if (ViewBag.CountryNameItems != null)
                                                                            {
                                                                                foreach (var item in ViewBag.CountryNameItems)
                                                                                {
                                                                                    <option value="@item.Code">@item.Name</option>
                                                                                }
                                                                            }


                                                                        }

                                                                    </select>
                                                                </div>
                                                            </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="col-xs-12 col-sm-4 form-multiselect-country-box-edit" id='INTERNATIONAL'>
                                                                                    <div class="form-group">
                                                                                        <label>Countries for International:</label>

                                                                                        <select id="CountryNameList" class="form-control form-multiselect-country" multiple="multiple" name="rolename" placeholder="Select Option">
                                                                                            @{
                                                                                                foreach (var item in ViewBag.CountryNameItems)
                                                                                                {
                                                                                                    if (EditCountryName.Contains(item.Value))//15
                                                                                                    {
                                                                                                        <option value="@item.Value" selected>@item.Text</option>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <option value="@item.Value">@item.Text</option>
                                                                                                    }

                                                                                                }

                                                                                            }
                                                                                        </select>
                                                                                    </div><input type="text" class="hidden" id="CountryNameList">
                                                                                </div>
                                                                                                }
                                                    }

                                                </div>

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="from">
                                                            <label>Order Type:<span style="color:#ff0000;">*</span></label>

                                                            @{

                                                                var selectedOrderTypes = ViewBag.OrderTypenew as List<string> ?? new List<string>();
                                                            }

                                                            @Html.ListBox("OrderTypenew", new MultiSelectList(ViewBag.BindOrderTypes, "Value", "Text", selectedOrderTypes),
    new { @class = "form-control form-multiselect-city", @id = "IdOrderType", multiple = "multiple" })










                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Enquiry description and notes:</label>
                                                            @Html.TextBoxFor(model => model.Notes, new { placeholder = "Enter Enquiry Description and Notes", @class = "form-control" })
                                                        </div>
                                                    </div>
                                                </div>

                                                @*<div id="DomesticCurrency" style='display:none;'>
                                                        <div class="form-page-title" style="width:110%;height:35px;vertical-align:central;">Domestic</div>

                                                        <table id="DTestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%">
                                                            <tr style="background-color:lightgray;color:black">
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Type(s)
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Rate <br />(Refer Note 3)
                                                                </td>
                                                                <td width="80px" style="text-align: center;vertical-align:top;">
                                                                    Estimated Manday
                                                                    /ManMonth/Manhour <br />(Refer Note 4)
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Distance in KM <br />(To And Fro)
                                                                </td>

                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Currency
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Exchange Rate
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Amount <br />INR
                                                                </td>
                                                                <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                    Remark <br />(Refer  Note 5)
                                                                </td>

                                                            </tr>

                                                            @{
                                                                int i = 0;
                                                            }

                                                            @if (ViewBag.lstDOrderType != null)
                                                            {
                                                                if (ViewBag.lstDOrderType.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstDOrderType as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                    {
                                                                        i = i + 1;
                                                                        <tr class="trDomestic" style="background-color:#f0f0f0">

                                                                            <td>


                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].OrderType, new List<SelectListItem>
                                                                       {

                                                                            new SelectListItem{ Text="Select", Value = "" },
                                                                                    new SelectListItem{ Text="Man Day", Value = "ManDays" , Selected = (item.OrderType == "ManDays") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth", Selected = (item.OrderType == "ManMonth") ?true : false },


                                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" , Selected = (item.OrderType == "LumSum") ?true : false} ,
                                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" , Selected = (item.OrderType == "Perc") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Hour", Value = "ManHR", Selected = (item.OrderType == "ManHR") ?true : false },

                                                                       },
                                                                                    new { @style = "text-align:center", @class = "form-control COrderType", @id = "ddlOrderType" })
                                                                            </td>

                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].OrderRate, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COrderRate", @Value = item.OrderRate, @id = "IddOrderType" + i })
                                                                                @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Estimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "IddEstimate_ManDays_ManMonth", @Value = item.Estimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Distance, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDistance", autocomplete = "off", @id = "IddDistance", @Value = item.Distance, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                            </td>

                                                                            <td>


                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[j].Dcurrency, new SelectList(@ViewBag.DTestCurrency, "Code", "Name", item.Dcurrency), "--Select Currency--", new { @style = "text-align:center", @id = "IddDcurrency", @class = "form-control CDcurrency" })

                                                                                @Html.HiddenFor(m => m.Dcurrency)

                                                                                @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DExchangeRate, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "IddDExchangeRate", @Value = item.DExchangeRate, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "IddDTotalAmount", @Value = item.DTotalAmount, @readonly = "readonly" })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @Value = item.DTotalAmount })

                                                                                @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                            </td>

                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[j].Remark, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDRemark", autocomplete = "off", @id = "CDRemark", @Value = item.Remark })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderType[j].Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @Value = item.Remark })

                                                                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                            </td>

                                                                            <td>
                                                                                @if (i == 1)
                                                                                {
                                                                                    <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }

                                                                            </td>
                                                                        </tr>

                                                                        j++;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr class="trDomestic" style="background-color:#f0f0f0">
                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                                            {
                                                                            new SelectListItem{ Text="Select", Value = "" },
                                                                            new SelectListItem{ Text="Man Day", Value = "ManDays" },
                                                                            new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                            new SelectListItem{ Text="Lump Sum", Value = "LumSum" } ,
                                                                            new SelectListItem{ Text="Percentage", Value = "Perc" } ,
                                                                            new SelectListItem{ Text="Man Hour", Value = "ManHR" },

                                                                            },
                                                                        new { @style = "text-align:center", @class = "form-control COrderType", @id = "ddlOrderType1" })

                                                                            @Html.ValidationMessageFor(model => model.OrderType, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.OrderRate, new { @style = "text-align:center", @placeholder = "", @class = "form-control  COrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Distance, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDistance", autocomplete = "off", @id = "", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                        </td>

                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @style = "text-align:center", @id = "Dcurrency", @class = "form-control CDcurrency" })
                                                                            @Html.HiddenFor(m => m.Dcurrency)

                                                                            @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.DExchangeRate, new { @style = "text-align:center", @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "DExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.DTotalAmount, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "DTotalAmount", @readonly = "readonly" })
                                                                            @Html.HiddenFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "DTotalAmount" })

                                                                            @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Remark, new { @style = "text-align:center", @placeholder = "", @class = "form-control CDRemark", autocomplete = "off", @id = "CDRemark" })
                                                                            @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "CDRemark" })

                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                        </td>


                                                                        <td>

                                                                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>


                                                                        </td>



                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trDomestic" style="background-color:#f0f0f0">

                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.OrderType, new List<SelectListItem>
                                                                        {
                                                                        new SelectListItem{ Text="Select", Value = "" },
                                                                        new SelectListItem{ Text="Man Day", Value = "ManDays" },
                                                                        new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                        new SelectListItem{ Text="Lump Sum", Value = "LumSum" } ,
                                                                        new SelectListItem{ Text="Percentage", Value = "Perc" } ,
                                                                        new SelectListItem{ Text="Man Hour", Value = "ManHR" },

                                                                        },
                                                    new { @class = "form-control COrderType", @id = "ddlOrderType1", @style = "text-align:center" })

                                                                        @Html.ValidationMessageFor(model => model.OrderType, "", new { @style = "text-align:center", @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.OrderRate, new { @style = "text-align:center", @placeholder = "Rate", @class = "form-control  COrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.OrderRate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Estimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Estimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Distance, new { @style = "text-align:center", @placeholder = "Distance", @class = "form-control CDistance", autocomplete = "off", @id = "Distance", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.Dcurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @style = "text-align:center", @id = "Dcurrency", @class = "form-control CDcurrency" })
                                                                        @Html.HiddenFor(m => m.Dcurrency)

                                                                        @Html.ValidationMessageFor(model => model.Dcurrency, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.DExchangeRate, new { @style = "text-align:center", @placeholder = "Exchange Rate", @class = "form-control CDExchangeRate", autocomplete = "off", @id = "DExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.DExchangeRate, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.DTotalAmount, new { @style = "text-align:center", @placeholder = "amount", @class = "form-control CDTotalAmount", autocomplete = "off", @id = "DTotalAmount", @readonly = "readonly" })
                                                                        @Html.HiddenFor(model => model.DTotalAmount, new { @placeholder = "amount", @class = "form-control ", autocomplete = "off", @id = "DTotalAmount" })
                                                                        @Html.ValidationMessageFor(model => model.DTotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Remark, new { @style = "text-align:center", @placeholder = "Remark", @class = "form-control CDRemark", autocomplete = "off", @id = "CDRemark" })
                                                                        @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control ", autocomplete = "off", @id = "CDRemark" })
                                                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                    </td>

                                                                    <td>
                                                                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add</button>
                                                                    </td>



                                                                </tr>
                                                            }

                                                        </table><br />

                                                    </div>*@

                                                @*<div id="InternationalCurrency" style='display:none;'>
                                                        <div class="form-page-title" style="width:110%;height:35px;">International</div>

                                                        <table id="ITestTable" cellspacing="0" cellpadding="3" border="1" style="width: 110%">

                                                            <tr style="background-color:lightgray;color:black;">
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Type(s)
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Rate <br />(Refer Note 3)
                                                                </td>
                                                                <td width="80px" style="text-align: center;vertical-align:top;">
                                                                    Estimated Manday
                                                                    /ManMonth/Manhour <br />(Refer Note 4)
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Distance in KM <br />
                                                                    (To and Fro)
                                                                </td>

                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Currency
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Exchange Rate
                                                                </td>
                                                                <td width="120px" style="text-align: center;vertical-align:top;">
                                                                    Amount <br /> INR
                                                                </td>
                                                                <td colspan="2" style="text-align: center;vertical-align:top;">
                                                                    Remark <br />(Refer Note 5)
                                                                </td>

                                                            </tr>

                                                            @{
                                                                int l = 0;
                                                            }



                                                            @if (ViewBag.lstIOrderType != null)
                                                            {
                                                                if (ViewBag.lstIOrderType.Count != 0)
                                                                {
                                                                    foreach (var item in ViewBag.lstIOrderType as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                    {
                                                                        l = l + 1;

                                                                        <tr class="trInternational" style="background-color:#f0f0f0;">
                                                                            <td>
                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[k].IOrderType, new List<SelectListItem>
                                                                                {
                                                                                    new SelectListItem{ Text="Select", Value = "" },
                                                                                    new SelectListItem{ Text="Man Day", Value = "ManDays"  , Selected = (item.IOrderType == "ManDays") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Month", Value = "ManMonth" , Selected = (item.IOrderType == "ManMonth") ?true : false} ,
                                                                                    new SelectListItem{ Text="Lump Sum", Value = "LumSum" , Selected = (item.IOrderType == "LumSum") ?true : false} ,
                                                                                    new SelectListItem{ Text="Percentage", Value = "Perc" , Selected = (item.IOrderType == "Perc") ?true : false} ,
                                                                                    new SelectListItem{ Text="Man Hour", Value = "ManHR" , Selected = (item.IOrderType == "ManHR") ?true : false} ,


                                                                                },
                                                                                new { @style = "text-align:center", @class = "form-control CIOrderType", @id = "ddlIOrderType" + l })

                                                                                @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IOrderRate, new { @style = "text-align:center", @placeholder = "Rate", @class = "form-control CIOrderRate", @Value = item.IOrderRate, @id = "ddlIOrderRate" + l, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IEstimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "ddlIEstimate_ManDays_ManMonth" + l, @Value = item.IEstimate_ManDays_ManMonth, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IDistance, new { @style = "text-align:center", @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "ddlIDistance" + l, @Value = item.IDistance, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                            </td>

                                                                            <td>

                                                                                @Html.DropDownListFor(m => m.lstQuotationMasterOrderType[k].Icurrency, new SelectList(@ViewBag.ITestCurrency, "Code", "Name", item.Icurrency), "--Select Currency--", new { @style = "text-align:center", @id = "IddDcurrency" + l, @class = "form-control CIcurrency" })

                                                                                @Html.HiddenFor(m => m.Icurrency)

                                                                                @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].IExchangeRate, new { @style = "text-align:center", @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "ddlIExchangeRate" + l, @Value = item.IExchangeRate, @onkeypress = "return isNumberKey(event);" })
                                                                                @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].ITotalAmount, new { @style = "text-align:center", @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount, @readonly = "readonly" })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderType[k].ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ddlITotalAmount" + l, @Value = item.ITotalAmount })
                                                                                @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(model => model.lstQuotationMasterOrderType[k].Remark, new { @style = "text-align:center", @placeholder = "Remark", @class = "form-control CIRemark", autocomplete = "off", @id = "ddlIRemark" + l, @Value = item.Remark })
                                                                                @Html.HiddenFor(model => model.lstQuotationMasterOrderType[k].Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "ddlIRemark" + l, @Value = item.Remark })
                                                                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                            </td>
                                                                            <td>


                                                                                @if (l == 1)
                                                                                {
                                                                                    <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>
                                                                                }
                                                                                else
                                                                                {

                                                                                    <button type="button" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button>
                                                                                }
                                                                            </td>
                                                                        </tr>
                                                                        k++;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <tr class="trInternational" style="background-color:#f0f0f0">
                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.IOrderType, new List<SelectListItem>
                                                                            {
                                                                                new SelectListItem{ Text="Select", Value = "" },
                                                                                new SelectListItem{ Text="Man Day", Value = "ManDays" },
                                                                                new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                                                new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                                                new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                                                new SelectListItem{ Text="Man Hour", Value = "ManHR" },
                                                                            },
                                                                            new { @class = "form-control CIOrderType", @id = "ddlOrderType" })

                                                                            @Html.ValidationMessageFor(model => model.IOrderType, "", new { @style = "text-align:center", @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.IOrderRate, new { @style = "text-align:center", @placeholder = "Rate", @class = "form-control CIOrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.IEstimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.IDistance, new { @style = "text-align:center", @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                        </td>

                                                                        <td>
                                                                            @Html.DropDownListFor(m => m.Icurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @style = "text-align:center", @id = "Icurrency", @class = "form-control CIcurrency" })


                                                                            @Html.HiddenFor(m => m.Icurrency)

                                                                            @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.IExchangeRate, new { @style = "text-align:center", @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "IExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                            @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.ITotalAmount, new { @style = "text-align:center", @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ITotalAmount", @readonly = "readonly" })
                                                                            @Html.HiddenFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ITotalAmount" })
                                                                            @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBoxFor(model => model.Remark, new { @style = "text-align:center", @placeholder = "Remark", @class = "form-control CIRemark", autocomplete = "off", @id = "IRemark" })
                                                                            @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "IRemark" })
                                                                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                        </td>
                                                                        <td>
                                                                            <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr class="trInternational" style="background-color:#f0f0f0">
                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.IOrderType, new List<SelectListItem>
                                                        {
                                                        new SelectListItem{ Text="Select", Value = "" },
                                                        new SelectListItem{ Text="Man Day", Value = "ManDays" },
                                                        new SelectListItem{ Text="Man Month", Value = "ManMonth" },
                                                        new SelectListItem{ Text="Lump Sum", Value = "LumSum" },
                                                        new SelectListItem{ Text="Percentage", Value = "Perc" },
                                                        new SelectListItem{ Text="Man Hour", Value = "ManHR" },
                                                        },
                                                        new { @style = "text-align:center", @class = "form-control CIOrderType", @id = "ddlOrderType" })

                                                                        @Html.ValidationMessageFor(model => model.IOrderType, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IOrderRate, new { @style = "text-align:center", @placeholder = "Rate", @class = "form-control CIOrderRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IOrderRate, "", new { @class = "text-danger validation-msg CIOrderRate" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IEstimate_ManDays_ManMonth, new { @style = "text-align:center", @placeholder = "", @class = "form-control CIEstimate_ManDays_ManMonth", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IEstimate_ManDays_ManMonth, "", new { @class = "text-danger validation-msg CIEstimate_ManDays_ManMonth" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IDistance, new { @style = "text-align:center", @placeholder = "Distance", @class = "form-control CIDistance", autocomplete = "off", @id = "Estimate_ManDays_ManMonth", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IDistance, "", new { @class = "text-danger validation-msg CIDistance" })
                                                                    </td>

                                                                    <td>
                                                                        @Html.DropDownListFor(m => m.Icurrency, ViewBag.CurrencyItems as IEnumerable<SelectListItem>, "--Select Currency--", new { @style = "text-align:center", @id = "Icurrency", @class = "form-control CIcurrency" })


                                                                        @Html.HiddenFor(m => m.Icurrency)

                                                                        @Html.ValidationMessageFor(model => model.Icurrency, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.IExchangeRate, new { @style = "text-align:center", @placeholder = "Exchange Rate", @class = "form-control CIExchangeRate", autocomplete = "off", @id = "IExchangeRate", @onkeypress = "return isNumberKey(event);" })
                                                                        @Html.ValidationMessageFor(model => model.IExchangeRate, "", new { @class = "text-danger validation-msg CIExchangeRate" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.ITotalAmount, new { @style = "text-align:center", @placeholder = "amount", @class = "form-control CITotalAmount", autocomplete = "off", @id = "ITotalAmount", @readonly = "readonly" })
                                                                        @Html.HiddenFor(model => model.ITotalAmount, new { @placeholder = "amount", @class = "form-control", autocomplete = "off", @id = "ITotalAmount" })
                                                                        @Html.ValidationMessageFor(model => model.ITotalAmount, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Remark, new { @style = "text-align:center", @placeholder = "Remark", @class = "form-control CIRemark", autocomplete = "off", @id = "IRemark" })
                                                                        @Html.HiddenFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off", @id = "IRemark" })
                                                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger validation-msg" })
                                                                    </td>
                                                                    <td>



                                                                        <button type="button" id="btnAddI" class="btn btn-xs btn-primary classAddI">Add</button>

                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table><br />

                                                    </div>*@





                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-3">
                                                        <div class="form-group">
                                                            <label>Estimated total amount in INR:<span style="color:#ff0000;">*</span></label>
                                                            @Html.TextBoxFor(model => model.EstimatedAmount, new { placeholder = "Estimated total amount in INR", @class = "form-control form-control-custom" })
                                                            @Html.HiddenFor(model => model.EstimatedAmount)
                                                            @Html.ValidationMessageFor(m => m.EstimatedAmount, "", new { @class = "text-danger validation-msg" })
                                                            <div id="amount" style="margin-top: -2px; color: blue; margin-left: 3px; font-style: italic;width: 700px;">
                                                                <label style="font-style: italic;color:#FB5F6B;font-size:18px">In Words:</label>
                                                                <span style="font-size:16px" id="amountInWords"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">

                                                            @if (ViewBag.JobExists == true)
                                                            {

                                                                <div class="form-group">


                                                                    <label for="InActive" style="color:black;padding-top:24px;">Annual Rate Contract Job:<span style="color:#ff0000;">*</span></label>

                                                                    @Html.RadioButtonFor(m => m.chkArc, true, new { id = "Active" })
                                                                    @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                    @Html.RadioButtonFor(m => m.chkArc, false, new { id = "InActive" })
                                                                    @Html.Label("InActive", "No", new { @for = "InActive" })
                                                                </div>

                                                            }
                                                            else
                                                            {

                                                                <div class="form-group">
                                                                    @*<label for="InActive" style="color:black;margin-left:-13px;">Budgetary:</label>
                                                                        @Html.CheckBoxFor(m => m.Budgetary, new { id = "Budgetary_" })*@

                                                                    <label for="InActive" style="color:black;padding-top:24px;">Annual Rate Contract Job:<span style="color:#ff0000;">*</span></label>

                                                                    @Html.RadioButtonFor(m => m.chkArc, true, new { id = "Active" })
                                                                    @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                    @Html.RadioButtonFor(m => m.chkArc, false, new { id = "InActive" })
                                                                    @Html.Label("InActive", "No", new { @for = "InActive" })
                                                                </div>


                                                            }

                                                        </div>
                                                    </div>
                                                    @*<div class="col-xs-12 col-sm-4">
                                                            <div class="form-group">

                                                                @if (ViewBag.JobExists == true)
                                                                {
                                                                    <div class="col-xs-12 col-sm-4">
                                                                        <div class="form-group">
                                                                            <label for="InActive" style="color:black;">ARC :</label>
                                                                            @Html.CheckBoxFor(m => m.chkArc, new { @onclick = "return false;" })
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="col-xs-12 col-sm-4">
                                                                        <div class="form-group">
                                                                            <label for="InActive" style="color:black;">ARC :</label>
                                                                            @Html.CheckBoxFor(m => m.chkArc)
                                                                        </div>
                                                                    </div>

                                                                }

                                                            </div>
                                                        </div>*@

                                                    @*added by nikita on 25062024*@
                                                    @*<div class="col-xs-12 col-sm-4" id="chkbudgetray">
                                                            <div class="form-group">

                                                                @if (ViewBag.JobExists == true)
                                                                {
                                                                    <div class="col-xs-12 col-sm-4">
                                                                        <div class="form-group">
                                                                            <label for="InActive" style="color:black;margin-left:-29px;">Budgetary:</label>
                                                                            @Html.CheckBoxFor(m => m.Budgetary, new { @onclick = "return false;", id = "Budgetary_" })
                                                                        </div>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="col-xs-12 col-sm-4">
                                                                        <div class="form-group">
                                                                            <label for="InActive" style="color:black;margin-left:-29px;">Budgetary:</label>
                                                                            @Html.CheckBoxFor(m => m.Budgetary, new { id = "Budgetary_" })
                                                                        </div>
                                                                    </div>

                                                                }

                                                            </div>
                                                        </div>*@

                                                    <div class="col-xs-12 col-sm-4" id="chkbudgetray">
                                                        <div class="form-group">

                                                            @if (ViewBag.JobExists == true)
                                                            {

                                                                <div class="form-group">
                                                                    @*<label for="InActive" style="color:black;margin-left:-13px;">Budgetary:</label>
                                                                        @Html.CheckBoxFor(m => m.Budgetary, new { @onclick = "return false;", id = "Budgetary" })*@

                                                                    <label for="InActive" style="color:black;padding-top:24px;">Budgetary:<span style="color:#ff0000;">*</span></label>
                                                                    @*@Html.RadioButtonFor(m => m.Budgetary, true, new { id = "Active" })
                                                                        @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                        @Html.RadioButtonFor(m => m.Budgetary, false, new { id = "InActive" })
                                                                        @Html.Label("InActive", "No", new { @for = "InActive" })*@
                                                                    @Html.RadioButtonFor(m => m.Budgetary, true, new { id = "Active" })
                                                                    @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                    @Html.RadioButtonFor(m => m.Budgetary, false, new { id = "InActive" })
                                                                    @Html.Label("InActive", "No", new { @for = "InActive" })
                                                                </div>

                                                            }
                                                            else
                                                            {

                                                                <div class="form-group">
                                                                    @*<label for="InActive" style="color:black;margin-left:-13px;">Budgetary:</label>
                                                                        @Html.CheckBoxFor(m => m.Budgetary, new { id = "Budgetary_" })*@

                                                                    <label for="InActive" style="color:black;padding-top:24px;">Budgetary:<span style="color:#ff0000;">*</span></label>
                                                                    @*@Html.RadioButtonFor(m => m.Budgetary, true, new { id = "Active" })
                                                                        @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                        @Html.RadioButtonFor(m => m.Budgetary, false, new { id = "InActive" })
                                                                        @Html.Label("InActive", "No", new { @for = "InActive" })*@
                                                                    @Html.RadioButtonFor(m => m.Budgetary, true, new { id = "Active" })
                                                                    @Html.Label("Active", "Yes", new { @for = "Active" })
                                                                    @Html.RadioButtonFor(m => m.Budgetary, false, new { id = "InActive" })
                                                                    @Html.Label("InActive", "No", new { @for = "InActive" })
                                                                </div>


                                                            }

                                                        </div>
                                                    </div>




                                                    @*@if (Model.EQ_ID > 0)
                                                        {
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label>Status :</label>

                                                                    model.RegretStatus
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {

                                                        }*@
                                                </div>



                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Lead given by: </label>
                                                            @Html.TextBoxFor(model => model.LeadGivenBy, new { placeholder = "Enter Lead Given by Name", @class = "form-control form-control-custom LeadGivenBy" })
                                                            @Html.ValidationMessageFor(model => model.LeadGivenBy, "", new { @class = "text-danger" })
                                                            <input type="hidden" id="HfLeadGivenBy" name="LeadGivenBy" />
                                                            @Html.HiddenFor(model => model.LeadGivenBy)

                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Notes of Leads:</label>
                                                            @Html.TextBoxFor(model => model.NotesbyLeads, new { placeholder = "Notes by Lead", @class = "form-control form-control-custom NotesbyLeads" })
                                                            @Html.ValidationMessageFor(model => model.NotesbyLeads, "", new { @class = "text-danger" })
                                                            <input type="hidden" id="HfNotesbyLeads" name="NotesbyLeads" />
                                                            @Html.HiddenFor(model => model.NotesbyLeads)

                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Conflict Situation:</label>
                                                            @Html.TextBoxFor(model => model.ConflictSituation, new { placeholder = "Conflict Situation", @class = "form-control form-control-custom", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                </div>




                                                <div class="col-xs-12">
                                                    <hr class="custom-hr1">
                                                </div>
                                                <div class="col-xs-12">
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <p style="text-align:left;color:black;font-size:13px;"><b>Attachments:</b></p>
                                                                <label><i class="fa fa-paperclip" style="color:black;"></i> <span style="color:black">Related Communications (Please attach files here) : </span><span style="color:#ff0000;">*</span></label>
                                                                @*<input type="file" class="filepond" name="filepond" id="FileUpload" multiple data-max-files="10">*@
                                                                <input type="file" class="filepond" name="filepond" multiple id="FileUpload">

                                                                <input hidden="hidden" id="hdfFileUpload" name="FileUpload" class="hidden" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    @if (Model != null)
                                                    {
                                                        if (Model.FileDetails != null && Model.FileDetails.Count > 0)
                                                        {
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        <ul class="Attachment">
                                                                            @foreach (var item in Model.FileDetails)
                                                                            {
                                                                                <li>
                                                                                    <a class="title" href="~/EnquiryMaster/Download1/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                                    <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p style="color:red;text-align:center;font-weight:bold;">There are no attachments !!!</p>
                                                    }



                                                    @*added by nikita on 25062024*@
                                                    <div class="row" id="txtlegal">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <label><i class="fa fa-paperclip" style="color:black;"></i>Tender Documents (Please attach files here) : <span style="color:#ff0000;">*</span></label>
                                                                @*<input type="file" class="filepond" name="filepond" id="FileUpload" multiple data-max-files="10">*@
                                                                <input type="file" class="filepond" name="FileUpload2" multiple id="FileUpload">

                                                                <input hidden="hidden" id="FileUpload2" name="FileUpload2" class="hidden" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    @if (Model != null)
                                                    {
                                                        if (Model.FileDetails_ != null && Model.FileDetails_.Count > 0)
                                                        {
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        <ul class="Attachment">
                                                                            @foreach (var item in Model.FileDetails_)
                                                                            {
                                                                                <li>
                                                                                    <a class="title" id="txtattach" href="~/EnquiryMaster/Download1/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                                    <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            @*<p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>*@
                                                        };
                                                    }



                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <label><i class="fa fa-paperclip" style="color:black;"></i>NDA Documents :</label>
                                                                @*<input type="file" class="filepond" name="filepond" id="FileUpload" multiple data-max-files="10">*@
                                                                <input type="file" class="filepond" name="FileUpload3" multiple id="FileUpload3">

                                                                <input hidden="hidden" id="hdfFileUpload3" name="FileUpload3" class="hidden" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                    @if (Model != null)
                                                    {
                                                        if (Model.FileDetailsformats != null && Model.FileDetailsformats.Count > 0)
                                                        {
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        <ul class="Attachment">
                                                                            @foreach (var item in Model.FileDetailsformats)
                                                                            {
                                                                                <li>
                                                                                    <a class="title" href="~/EnquiryMaster/Download1/?p=@(item.IDS + item.Extension)&d=@item.PK_ID">@item.FileName</a>
                                                                                    <a href="javascript:void(0);" data-id="@item.IDS" class="deleteItem">X</a>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <p style="color:red;text-align:center;font-weight:bold;">File Not Uploaded</p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p style="color:red;text-align:center;font-weight:bold;">There are no attachments !!!</p>
                                                    }



                                                    <div class="col-xs-12" id="txtlegalreview">
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <hr class="custom-hr1">
                                                            </div>
                                                        </div>
                                                        <p style="text-align:left;color:black;font-size:13px;"><b>Legal Review:</b></p>
                                                        <div class="form-group">

                                                            @if (ViewBag.JobExists == true)
                                                            {
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        @Html.CheckBoxFor(m => m.LegalReview, new { @onclick = "return false;", id = "LegalReview_" })
                                                                        <label for="InActive" style="color:black;margin-left: 13px;">Legal Related Clauses in Tender  documents reviewed & observations are mentioned in comment box.</label>
                                                                    </div>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        @Html.CheckBoxFor(m => m.LegalReview, new { id = "LegalReview_" })
                                                                        <label for="InActive" style="color:black;margin-left: 13px;">Legal Related Clauses in Tender  documents reviewed & observations are mentioned in comment box.</label>
                                                                    </div>
                                                                </div>

                                                            }

                                                        </div>
                                                    </div>


                                                    <div class="col-xs-12" id="txtlegalQuotation">
                                                        <div class="form-group">

                                                            @if (ViewBag.JobExists == true)
                                                            {
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        @Html.CheckBoxFor(m => m.Quotationviewed, new { @onclick = "return false;", id = "Quotationviewed_" })
                                                                        <label for="InActive" style="color:black;margin-left: 11px;">Allowed to take further action.</label>
                                                                    </div>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        @Html.CheckBoxFor(m => m.Quotationviewed, new { id = "Quotationviewed_" })
                                                                        <label for="InActive" style="color:black;margin-left: 11px;">Allowed to take further action.</label>
                                                                    </div>
                                                                </div>

                                                            }

                                                        </div>
                                                    </div>


                                                    <div class="row" id="txtcomment">
                                                        <div class="col-xs-12">
                                                            <div class="form-group">
                                                                <label>Comments: <span style="color:#1CE325;">*</span></label>
                                                                @Html.TextAreaFor(model => model.Legalcomment, new { placeholder = "Enter Comment", @class = "form-control form-control-custom", @rows = "3" })
                                                                @Html.ValidationMessageFor(model => model.Legalcomment, "", new { @class = "text-danger" })

                                                            </div>
                                                        </div>
                                                    </div>

                                                    @*end*@





                                                    @if (Model != null)
                                                    {
                                                        //if (Model.RegretReason != null && Model.RegretReason != "")
                                                        //if (Model.RegretStatus != null && Model.RegretStatus != "")
                                                        //{
                                                        if (Model.RegretStatus == "Regret")
                                                        {
                                                            @*<div class="col-xs-12 col-sm-6">
                        <div class="form-group">
                            <label>Regret reason:</label>
                            @if (ViewBag.RegretReason1 != null)
                            {
                                @Html.DropDownListFor(m => m.RegretReason, ViewBag.RegretReason1 as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "RR", })
                                @Html.ValidationMessageFor(model => model.RegretReason, "", new { @class = "text-danger validation-msg" })
                            }
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <div class="form-group">
                            <label>Action taken:</label>
                            @if (ViewBag.ActionTaken != null)
                            {
                                @Html.DropDownListFor(m => m.RegretActionTaken, ViewBag.ActionTaken as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "AT", })
                                @Html.ValidationMessageFor(model => model.RegretActionTaken, "", new { @class = "text-danger validation-msg" })
                            }
                        </div>
                    </div>*@

                                                            <div class="col-xs-12 col-sm-4" id="DivRegretReason">
                                                                <div class="form-group">
                                                                    <label>Regret reason:</label>
                                                                    <select id="RR" class="form-control form-multiselect-city" multiple="multiple" name="RR" placeholder="Select Option">

                                                                        @foreach (var item in @ViewBag.RegretReason1)
                                                                        {
                                                                            if (EditRegretReason.Contains(item.Value))
                                                                            {
                                                                                <option value="@item.Value" selected>@item.Text</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-4" id="DivActionaTaken">
                                                                <div class="form-group">
                                                                    <label>Action taken:</label>
                                                                    <select id="AT" class="form-control form-multiselect-city" multiple="multiple" name="AT" placeholder="Select Option">

                                                                        @foreach (var item in @ViewBag.ActionTaken)
                                                                        {
                                                                            if (EditActionTaken.Contains(item.Value))
                                                                            {
                                                                                <option value="@item.Value" selected>@item.Text</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>

                                                                <div class="col-xs-12 col-sm-12">
                                                                    <div class="form-group">
                                                                        <label>Regret reason description:</label>

                                                                        @Html.TextBoxFor(model => model.RegretReasonDescription, new { placeholder = "Regret Reason", @class = "form-control", @id = "RRD" })

                                                                    </div>
                                                                </div>
                                                        }
                                                        else

                                                        {
                                                            @*<div class="col-xs-12 col-sm-6" id="dvPassport" style="display: none">
                        <div class="form-group">
                            <label>Regret Reason:</label>
                            @if (ViewBag.RegretReason1 != null)
                            {
                                @Html.DropDownListFor(m => m.RegretReason, ViewBag.RegretReason1 as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "RR", })
                                @Html.ValidationMessageFor(model => model.RegretReason, "", new { @class = "text-danger validation-msg" })
                            }
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6" id="dvPassport1" style="display: none">
                        <div class="form-group">
                            <label>Action Taken:</label>
                            @if (ViewBag.ActionTaken != null)
                            {
                                @Html.DropDownListFor(m => m.RegretActionTaken, ViewBag.ActionTaken as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", @id = "AT", })
                                @Html.ValidationMessageFor(model => model.RegretActionTaken, "", new { @class = "text-danger validation-msg" })
                            }
                        </div>
                    </div>*@
                                                            <div class="col-xs-12 col-sm-4" id="dvPassport" style="display: none">
                                                                <div class="form-group">
                                                                    <label>Regret reason:</label>
                                                                    <select id="RR" class="form-control form-multiselect-city" multiple="multiple" name="RR" placeholder="Select Option">

                                                                        @foreach (var item in @ViewBag.RegretReason1)
                                                                        {
                                                                            if (EditRegretReason.Contains(item.Value))
                                                                            {
                                                                                <option value="@item.Value" selected>@item.Text</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-4" id="dvPassport1" style="display: none">
                                                                <div class="form-group">
                                                                    <label>Action taken:</label>
                                                                    <select id="AT" class="form-control form-multiselect-city" multiple="multiple" name="AT" placeholder="Select Option">

                                                                        @foreach (var item in @ViewBag.ActionTaken)
                                                                        {
                                                                            if (EditActionTaken.Contains(item.Value))
                                                                            {
                                                                                <option value="@item.Value" selected>@item.Text</option>
                                                                            }
                                                                            else
                                                                            {
                                                                                <option value="@item.Value">@item.Text</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                            </div>
                                                                <div class="col-xs-12 col-sm-12" id="dvPassport2" style="display: none">
                                                                    <div class="form-group">
                                                                        <label>Regret reason description:</label>

                                                                        @Html.TextBoxFor(model => model.RegretReasonDescription, new { placeholder = "Regret Reason", @class = "form-control", @id = "RRD" })

                                                                    </div>
                                                                </div>
                                                        }
                                                    }






                                                    <div class="col-lg-12" id="EnquiryData" style="padding:0px;margin-top:-25px">
                                                        <br />
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <hr class="custom-hr1">
                                                            </div>
                                                        </div>
                                                        <div>
                                                            <div class="row">
                                                                <div class="col-lg-12">
                                                                    <div class="row">
                                                                        @*<label class="sixefont" style="font-size: 18px; color: #001ED2; font-family:'TNG Pro';font-weight:bold;height:5px;">Enquiry</label>*@
                                                                        <div class="form-page-title" style="width:100%;height:35px;vertical-align:central;">Duplicate Enquiries Details</div>
                                                                        <table id="tbl" class="table table-striped" style="width:100%;">
                                                                            <thead class="thead-dark" style="border: 1px solid black">
                                                                                <tr>
                                                                                    <th class="hidden"></th>
                                                                                    <th class="td" style="text-align: center;background-color:lightgray;color:black">Enquiry Number</th>
                                                                                    <th class="td" style="text-align: center;background-color:lightgray;color:black">Created Name</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Mobile Number</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Created Date</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Company Name</th>
                                                                                    <th style="text-align:center;background-color:lightgray;color:black">Branch Name</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody></tbody>
                                                                        </table>
                                                                    </div>



                                                                </div>
                                                            </div>


                                                            @if (Model != null && Model.ENQDuplicate != "")
                                                            {
                                                                <div class="col-xs-12 col-sm-6" style="pointer-events:none;">
                                                                    <div class="form-group">
                                                                        <label style="color:red">Is this a duplicate enquiry?:</label>
                                                                        @Html.RadioButtonFor(m => m.ENQDuplicate, "YES", new { id = "YES" })
                                                                        <label for="Active">YES</label>
                                                                        @Html.RadioButtonFor(m => m.ENQDuplicate, "NO", new { id = "NO" })
                                                                        <label for="InActive">NO</label>
                                                                    </div>
                                                                </div>

                                                            }
                                                            else
                                                            {
                                                                <div class="col-xs-12 col-sm-6">
                                                                    <div class="form-group">
                                                                        <label style="color:red">Is this a duplicate enquiry?:</label>
                                                                        @Html.RadioButtonFor(m => m.ENQDuplicate, "YES", new { id = "YES" })
                                                                        <label for="Active">YES</label>
                                                                        @Html.RadioButtonFor(m => m.ENQDuplicate, "NO", new { id = "NO" })
                                                                        <label for="InActive">NO</label>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>


                                                        @if (Model != null && Model.ConflictType == "Conflict")
                                                        {
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <hr class="custom-hr1">
                                                                </div>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-12">
                                                                <div class="form-group">
                                                                    <p style="text-align:left;color:black;font-size:18px;"><b>Note:</b></p>
                                                                    <p style="text-align:left;color:red;font-size:18px;margin-top:-12px;">This enquiry is conflicting with existing Job of client @Html.DisplayFor(m => m.CompanyName)  </p>
                                                                    <p style="text-align:left;color:red;font-size:18px;margin-top:-12px;">Please visit to list of conflicting Job page and propose plan mitigation.  </p>
                                                                    <p style="text-align:left;color:red;font-size:18px;margin-top:-12px;">Kindly Note , Quotation can be create after approval of metigation plan by PCH and CH.  </p>
                                                                </div>
                                                            </div>
                                                        }






                                                    </div>

                                                    <div class="col-lg-12" id="EnquiryBudgetaryData" style="padding:0px;">
                                                        <div>

                                                            <strong>Note </strong>
                                                            1) - We have submitted budgetary quotations to this customer in the past year. Please select the relevant quotation number if this enquiry is related to a previously submitted budgetary quotation.
                                                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                            @*<label>Note:you have created budgetary code against subject customer in past one year kindly select one if this enquiry is been generated for the particular Budgetary Quotation</label>*@
                                                            <div class="row">
                                                                <div class="col-lg-12">
                                                                    <div class="row">
                                                                        @*<label class="sixefont" style="font-size: 18px; color: #001ED2; font-family:'TNG Pro';font-weight:bold;height:5px;">Enquiry</label>*@
                                                                        <div class="form-page-title" style="width:100%;height:35px;vertical-align:central;">Budgetary Quotation Details</div>
                                                                        <table id="tbl1" class="table table-striped" style="width:100%;">
                                                                            <thead class="thead-dark" style="border: 1px solid black">
                                                                                <tr>
                                                                                    <th class="hidden"></th>
                                                                                    <th style="text-align: center; background-color: lightgray; color: black;">
                                                                                        @*<input type="checkbox" id="checkAll" />*@
                                                                                    </th>
                                                                                    <th class="td" style="text-align: center;background-color:lightgray;color:black">Quotation Number</th>
                                                                                    <th class="td" style="text-align: center;background-color:lightgray;color:black">Company Name</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Createdby</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Branch Name</th>
                                                                                    <th style="text-align: center;background-color:lightgray;color:black">Estimated Amount</th>
                                                                                    <th style="text-align:center;background-color:lightgray;color:black">Status</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody></tbody>
                                                                        </table>
                                                                    </div>



                                                                </div>
                                                            </div>

                                                        </div>



                                                    </div>

                                                    <div class="col-xs-12 text-center">
                                                        @if (Model != null)
                                                        {
                                                            @*<button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE" onclick="doFunction();" data-status1="@Model.CheckListDescription">Enquiry Review CheckList</button>*@
                                                            <button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE" data-status1="@Model.CheckListDescription">Enquiry Review CheckList</button>
                                                        }
                                                        else
                                                        {
                                                            @*<button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE" onclick="doFunction();">Enquiry Review CheckList</button>*@
                                                            <button type="button" class="btn btn-default news-btn" data-toggle="modal" data-target="#myModalE">Enquiry Review CheckList</button>
                                                        }

                                                    </div>
                                                 <   @if (Model != null)
                                                    {
                                                        if (Model.RegretStatus == "Deleted")
                                                        {
                                                            <div class="row">
                                                                <div class="col-xs-12">
                                                                    <div class="form-group">
                                                                        <label>Enquiry Deleted Reason: <span style="color:#1CE325;">*</span></label>
                                                                        @Html.TextAreaFor(model => model.DeleteReason, new { placeholder = "Delete Reason", @class = "form-control form-control-custom", @rows = "3", @readonly = "readonly" })
                                                                        @Html.ValidationMessageFor(model => model.DeleteReason, "", new { @class = "text-danger" })

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {

                                                        }

                                                    }




                                                    @Html.HiddenFor(m => m.Citys)
                                                    @Html.HiddenFor(m => m.DocumentAttached)
                                                    <!--Button Controls-->
                                                    <div class="col-xs-12 text-center">
                                                        @{
                                                            if (Model != null)
                                                            {
                                                                if (Convert.ToInt32(TempData["QuotationEnableButton"]) != 0)
                                                                {
                                                                    @*<button type="button" class="btn btn-default news-btn" id="btnReset" value="Reset" title="Reset">Reset</button>*@
                                                                    @Html.HiddenFor(m => m.QuoGenerated)
                                                                    if (Model.QuoGenerated == "NO")
                                                                    {
                                                                        <button class="btn btn-default insert-form-btn" style="background-color:red;" type="button" id="chkPassport" onclick="myFunction()">Regret</button>
                                                                    }
                                                                    else
                                                                    {

                                                                    }



                                                                    //}

                                                                    <button type="button" class="btn btn-default insert-form-btn" id="btnEnquiryMasterSave" title="Submit"> Update Enquiry</button>

                                                                    //if (ViewBag.Regret == "" || ViewBag.Regret == null)
                                                                    if (Model.RegretStatus == "Regret")
                                                                    {

                                                                    }
                                                                    else
                                                                    {

                                                                        if (Model.GetDuplicateEnquiry == "Yes" && Model.ConflictSituation == "Yes")
                                                                        {
                                                                            <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("GetConflictJob", "EnquiryMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Conflicts Jobs</button>

                                                                            if (Model.ENQDuplicate != "" && Model.AllA == "Yes")
                                                                            {

                                                                                if (Model.RegretStatus != "Deleted")
                                                                                {
                                                                                    if (Model.JobCount == "YES")
                                                                                    {
                                                                                        <button class="btn btn-default insert-form-btn hidden" id="btnquotation" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class="btn btn-default insert-form-btn" id="btnquotation" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>
                                                                                    }
                                                                                }

                                                                            }
                                                                            else
                                                                            {

                                                                            }
                                                                        }
                                                                        else if (Model.GetDuplicateEnquiry == "Yes")
                                                                        {
                                                                            if (Model.ENQDuplicate != "")
                                                                            {
                                                                                <button class="btn btn-default insert-form-btn" id="btnquotation" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>
                                                                            }
                                                                            else
                                                                            {

                                                                            }
                                                                        }

                                                                        else
                                                                        {
                                                                            //<button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>
                                                                            if (Model.AllA == "Yes")
                                                                            {
                                                                                if (Model.RegretStatus != "Deleted")
                                                                                {
                                                                                    if (Model.JobCount == "YES")
                                                                                    {
                                                                                        <button class="btn btn-default insert-form-btn hidden" id="btnquotation" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class="btn btn-default insert-form-btn" id="btnquotation" type="button" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>
                                                                                    }
                                                                                }

                                                                            }
                                                                            else
                                                                            {
                                                                                if (Model.ConflictType == "Conflict")
                                                                                {
                                                                                    <h3>This enquiry is conflicting with existing Job of client @Html.DisplayFor(m => m.CompanyName)  </h3>
                                                                                    <h3>Please visit to list of conflicting Job page and propose plan mitigation.  </h3>
                                                                                    <h3>Kindly Note , Quotation can be create after approval of metigation plan by PCH and CH.  </h3>
                                                                                    <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("GetConflictJob", "EnquiryMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Conflicts Jobs</button>

                                                                                }
                                                                                @*else if (Model.ConflictType == "BranchConflict")
                                        {
                                            <h1>Branch Conflict.</h1>
                                            <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("GetConflictEnquiry", "EnquiryMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Conflicts Enquiry</button>

                                        }
                                        else if (Model.ConflictType == "BothConflict")
                                        {
                                            <h1>Both Conflict.</h1>
                                            <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("GetConflictJob", "EnquiryMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Conflicts Jobs</button>
                                            <button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("GetConflictEnquiry", "EnquiryMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Conflicts Enquiry</button>

                                        }*@
                                                        else
                                                        {
                                                            if (Model.JobCount == "YES")
                                                            {
                                                                <button class="btn btn-default insert-form-btn hidden" type="button" id="btnquotation" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>
                                                            }
                                                            else
                                                            {



                                                                if (Model.RegretStatus != "Deleted")
                                                                {
                                                                    <button class="btn btn-default insert-form-btn" type="button" id="btnquotation" onclick="location.href='@Url.Action("Quotation", "QuotationMaster", new { @PK_EQID = Model.EQ_ID })'"><i class="fa fa-plus-circle"></i> Create Quotation</button>

                                                                        }

                                                                    }
                                                                }
                                                            }


                                                        }

                                                        @*<button class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("CostSheet", "CostSheetMaster",new {@PK_EQID=Model.EQ_ID})'"><i class="fa fa-plus-circle"></i> Cost Sheet</button>*@
                                                                    }

                                                                }
                                                            }

                                                            else
                                                            {
                                                                <button type="button" class="btn btn-default news-btn" id="btnReset" value="Reset" title="Reset">Reset</button>

                                                                <button type="button" class="btn btn-default insert-form-btn" id="btnEnquiryMasterSave" title="Submit">
                                                                    <i class="fa fa-plus-circle"></i> Insert Enquiry
                                                                </button>

                                                            }
                                                        }


                                                    </div>
                                                    <!--Button Controls-->
</form>

                                        </div>
                                        @{
                                            if (Model != null)
                                            {
                                                <div class="row">
                                                    <hr>
                                                    <div class="col-xs-12">
                                                        @*<table id="contacts-dt" class="display" cellspacing="0" width="100%">*@
                                                        <table id="example" class="display custom-table" cellspacing="0" width="100%">

                                                            <thead>
                                                                <tr>
                                                                    <th>Quotation Number</th>
                                                                    <th>Description</th>
                                                                    <th>Enquiry Number</th>
                                                                    <th>Reference</th>
                                                                    <th>Enquiry</th>
                                                                    <th>Expiry Date</th>
                                                                    <th>Inspection Location</th>
                                                                    @*<th>Approval Status</th>*@
                                                                    <th>Domestic Approval Status</th>
                                                                    <th>International Approval Status</th>
                                                                    <th>Status</th>
                                                                    <th>Revised Quotation</th>
                                                                    <th>Action</th>
                                                                </tr>
                                                            </thead>

                                                            <tbody>
                                                                @{
                                                                    if (ViewData["QuotationMaster"] != null)
                                                                    {
                                                                        foreach (var item in ViewData["QuotationMaster"] as IEnumerable<TuvVision.Models.QuotationMaster>)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <a href="@Url.Action("Quotation","QuotationMaster",new { @PK_QM_ID = item.PK_QTID })" style="margin-right:15px;" title="Edit Quotation">@item.QuotationNumber</a>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="TitleName">@item.Quotation_Description</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Pan_No">@item.EnquiryNumber</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="HomePhone" class="ScripID">@item.Reference</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Address">@item.Enquiry</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Mobile">@item.ExpiryDate</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Fax_No">@item.InspectionLocation</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Fax_No">@item.DApprovalStatus</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="Fax_No">@item.IApprovalStatus</label>
                                                                                </td>
                                                                                <td>
                                                                                    <label style="font-size:11px;font-weight:400!important;" id="IsMainContact">@item.StatusType</label>
                                                                                </td>
                                                                                <td style="text-align:center;">
                                                                                    @if (item.QTType != "")
                                                                                    {
                                                                                        <a href="#" id="REV" onclick="myFunction()" title="Revised Quotation"><span style="color:red;">Revised</span>&nbsp;</a>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        @*<a href="@Url.Action("Quotation","QuotationMaster",new { @PK_QM_ID = item.PK_QTID })" style="margin-right:15px;" title="Revised Quotation"> Revise</a>*@
                                                                                        <a href="@Url.Action("Quotation", "QuotationMaster", new {@PK_QM_ID = item.PK_QTID ,@Revise ="Revise"})" title="Revised Quotation"><span>Revise</span>&nbsp;</a>
                                                                                    }


                                                                                </td>
                                                                                <td style="text-align:center;">
                                                                                    <a href="@Url.Action("DeleteQuotation","QuotationMaster",new {@PK_QTID=item.PK_QTID })" onclick="return confirm('Are you sure you want to delete Contact record?')" title="Delete Quotation"><i class="fa fa-trash"></i></a>
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }

                                                                }

                                                            </tbody>

                                                        </table>

                                                    </div><!-- /.data table col -->
                                                </div>
                                                                    }
                                        }
                                        <br>
                                    </div>
                                </div>

                            </div>



                        </div><!-- /.col -->

                    </div><!-- /.row -->
                </div><!-- /.data table col -->

            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
        <!--End of main content 3-->


                                                                    }

<div class="modal fade bs-example-modal-lg" id="AddCustomerDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Customer Details</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;overflow-x: auto;overflow-y: auto;">
                    <div class="row">
                        <div class="col-xs-12 col-sm-4">
                            <div class="form-group">
                                <label>Customer Name:<span style="color:#ff0000;">*</span></label>
                                @Html.TextBoxFor(model => model.CustomerSearch, new { @placeholder = "Type Customer Name Here", @class = "form-control", id = "CustomerSearch" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <div class="col-xs-12 text-center">
                                <button type="button" class="btn btn-default insert-form-btn" id="btnSearchData" title="Search"><i class="fa fa-search"></i> Search</button>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            <div class="col-xs-12 text-center">
                                <button type="button" class="btn btn-default insert-form-btn" id="btnAddNew" title="Add New"><i class="fa fa-plus"></i> Add New Customer Details</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <input type="text" id="searchBox" class="form-control" placeholder="Search in results..." style="margin-bottom: 10px;">
                            <table id="customerTable" class="table table-striped mvc-grid" style="width:100%;border:1px solid;margin-left: 11px">
                                <thead>
                                    <tr style="border:27px; background:#001ED2;">
                                        <th style="color:#FFFFFF">Action</th>
                                        <th style="color:#FFFFFF">Company Code</th>
                                        <th style="color:#FFFFFF">Company Name</th>
                                        <th style="color:#FFFFFF">State</th>
                                        <th style="color:#FFFFFF">Address</th>
                                        <th style="color:#FFFFFF">GST</th>
                                        <th style="color:#FFFFFF">Pan</th>
                                        <th hidden>New custome</th>
                                    </tr>
                                </thead>
                                <tbody id="tbldataBody"></tbody>
                            </table>
                            <!-- Pagination controls -->
                            <div id="paginationControls" class="text-center"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal" id="btnCloseModal" style="background:#001ED2">Close</button>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close" id="modalCloseButton" style="margin-top: 15px;margin-left: -14px;"><span aria-hidden="true">&times;</span></button>*@
            </div>
        </div>
    </div>
</div>









<div class="modal fade bs-example-modal-lg" id="AddNewCustomerDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel"> Add New Customer</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">
                    <div class="row">
                        <div class="row">
                            <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                <div class="form-box">
                                    <form>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12">
                                                <div class="form-group">
                                                    <span style="color:#E12F24;">
                                                        <strong>Notes </strong> :
                                                    </span> 1) <span style="color:#ff0000;">*</span> - Mandatory.<br />

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12">
                                                <hr class="custom-hr1">
                                            </div>
                                        </div>
                                        <div class="row">
                                            @*@Html.Hidden("CMP_ID")*@

                                            @Html.HiddenFor(model => model.CMP_ID, new { @id = "CMP_ID" })
                                            @*@Html.HiddenFor(model => model.FK_CMP_ID)*@
                                            @*<div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Company Location:<span style="color:#ff0000;">*</span></label>

                                                        @Html.DropDownListFor(m => m.InspectionLocation, new List<SelectListItem>
                                                                         {
                                                                        new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                         new SelectListItem{ Text="Domestic", Value = "Domestic" },
                                                                         new SelectListItem{ Text="International", Value = "International" },



                                                               },

                                                                         new { @class = "form-control", @id = "IL" })
                                                    </div>
                                                </div>*@
                                            <div class="col-xs-12 col-sm-8">
                                                <div class="form-group">
                                                    <label>Customer Name: <span style="color:#ff0000">*</span></label>
                                                    @Html.TextBoxFor(model => model.Company_Name, new { @placeholder = "Enter Customer Name", @class = "form-control Company" })
                                                    @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger validation-msg" })
                                                    <input type="hidden" id="newCompanyName" name="CustomerId2" />
                                                    <p id="Status" />
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Location:<span style="color:#ff0000;">*</span></label>
                                                    @*@Html.TextBoxFor(model => model.Address, new { @placeholder = "Enter Office Address ", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })*@

                                                    @*@Html.DropDownListFor(m => m.Address, new List<SelectListItem>
                                                                                                                                 {
                                                                                                                               new SelectListItem { Text = "---SELECT---", Value = "" },
                                                                new SelectListItem { Text = "Andhra Pradesh", Value = "Andhra Pradesh" },
                                                                new SelectListItem { Text = "Arunachal Pradesh", Value = "Arunachal Pradesh" },
                                                                new SelectListItem { Text = "Assam", Value = "Assam" },
                                                                new SelectListItem { Text = "Bihar", Value = "Bihar" },
                                                                new SelectListItem { Text = "Chhattisgarh", Value = "Chhattisgarh" },
                                                                new SelectListItem { Text = "Delhi", Value = "Delhi" },
                                                                new SelectListItem { Text = "Goa", Value = "Goa" },
                                                                new SelectListItem { Text = "Gujarat", Value = "Gujarat" },
                                                                new SelectListItem { Text = "Haryana", Value = "Haryana" },
                                                                new SelectListItem { Text = "Himachal Pradesh", Value = "Himachal Pradesh" },
                                                                new SelectListItem { Text = "Jharkhand", Value = "Jharkhand" },
                                                                new SelectListItem { Text = "Karnataka", Value = "Karnataka" },
                                                                new SelectListItem { Text = "Kerala", Value = "Kerala" },
                                                                new SelectListItem { Text = "Madhya Pradesh", Value = "Madhya Pradesh" },
                                                                new SelectListItem { Text = "Maharashtra", Value = "Maharashtra" },
                                                                new SelectListItem { Text = "Manipur", Value = "Manipur" },
                                                                new SelectListItem { Text = "Meghalaya", Value = "Meghalaya" },
                                                                new SelectListItem { Text = "Mizoram", Value = "Mizoram" },
                                                                new SelectListItem { Text = "Nagaland", Value = "Nagaland" },
                                                                new SelectListItem { Text = "Odisha", Value = "Odisha" },
                                                                new SelectListItem { Text = "Punjab", Value = "Punjab" },
                                                                new SelectListItem { Text = "Rajasthan", Value = "Rajasthan" },
                                                                new SelectListItem { Text = "Sikkim", Value = "Sikkim" },
                                                                new SelectListItem { Text = "Tamil Nadu", Value = "Tamil Nadu" },
                                                                new SelectListItem { Text = "Telangana", Value = "Telangana" },
                                                                new SelectListItem { Text = "Tripura", Value = "Tripura" },
                                                                new SelectListItem { Text = "Uttar Pradesh", Value = "Uttar Pradesh" },
                                                                new SelectListItem { Text = "Uttarakhand", Value = "Uttarakhand" },
                                                                new SelectListItem { Text = "West Bengal", Value = "West Bengal" },
                                                                 new SelectListItem { Text = "International", Value = "International" }
                                                        new SelectListItem { Text = "Oman", Value = "Oman" }




                                                                                                                       },

                                                                                                                                 new { @class = "form-control" })*@

                                                    <div class="form-group">

                                                        @if (ViewBag.Address != null)
                                                        {
                                                            @Html.DropDownListFor(m => m.Address, ViewBag.Address as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger validation-msg" })
                                                        }
                                                    </div>
                                                </div>
                                            </div>


                                        </div>

                                        @*<div class="row">
                                                <div class="col-xs-12">
                                                    <div class="form-group">
                                                        <label>State:<span style="color:#ff0000;">*</span></label>
                                                        @Html.TextAreaFor(model => model.Address, new { @placeholder = "Enter Office Address ", @class = "form-control", @rows = "3" })
                                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Head/Main Office Address PIN Code:<span style="color:#ff0000;">*</span></label>
                                                        @Html.TextBoxFor(model => model.OffAddrPin, new { @placeholder = "Office Address PIN", @class = "form-control CPIN", @onkeypress = "return isNumberKey(event);" })
                                                        @Html.ValidationMessageFor(model => model.OffAddrPin, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="display:none;">
                                                <div class="col-xs-12 col-sm-12">
                                                    <div class="form-group">
                                                        <label>Select Address Type:</label>
                                                        @Html.DropDownListFor(m => m.AddressType, new List<SelectListItem>
                                                                         {
                                                                        new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                        new SelectListItem{ Text="Head Office", Value = "M" },
                                                                         new SelectListItem{ Text="Site", Value = "S" },
                                                                         new SelectListItem{ Text="Invoicing", Value = "I" },





                                                               },

                                                                         new { @class = "form-control", @id = "IdAddrType", })

                                                    </div>
                                                </div>


                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>PAN Number:</label>
                                                        @Html.TextBoxFor(model => model.Pan_No, new { @placeholder = "Enter Pan Number ", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Pan_No, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-sm-4">
                                                    <div class="form-group">
                                                        <label>Industry Type: <span style="color:#ff0000;">*</span></label>
                                                        @Html.DropDownListFor(model => model.Ind_ID, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "---Select Industry---", new { @id = "ddlIndustry", @class = "form-control form-control-custom-ddl" })
                                                        @Html.ValidationMessageFor(model => model.Ind_ID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>*@
                                        <div class="col-xs-12 text-center">


                                            <button type="button" class="btn btn-default insert-form-btn" id="btnSaveCompany"> Save</button>


                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal" id="btnCloseModal">Close</button>
            </div>
        </div>
    </div>
</div>




@************************************Scripts Started Here**************************************************************************@

<!--This is add script for Type End here-->
<!--multiselect-->
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>

<script>
    // $('.form-multiselect-city').multiselect();
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });

    $('.form-multiselect-country').multiselect({
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });


    $('#ProductLists').multiselect({
        includeSelectAllOption: true
    });

</script>




<!--filepond-->
<!-- Load FilePond library -->
<script src="~/AllJsAndCss/js/filepond.js"></script>

<!-- Turn all file input elements into ponds -->
<script>
    FilePond.parse(document.body);
</script>

<script>
    FilePond.registerPlugin(
    // encodes the file as base64 data
    FilePondPluginFileEncode,
    // validates the size of the file
    FilePondPluginFileValidateSize,
    // corrects mobile image orientation
    FilePondPluginImageExifOrientation,
    // previews dropped images
    FilePondPluginImagePreview
    );
    // Select the file input and use create() to turn it into a pond
    FilePond.create(document.querySelector('.filepond'));
</script>

<script>
    FilePond.setOptions({
        server: '@Url.Action("TemporaryFilePathDocumentAttachment", "EnquiryMaster")'
    });
</script>

@*Custom Scripts*@
@*Binding Service Type Dropdownlist*@
<script>

    @*$('#ddlProjectType').on("change", function () {
        var Project = $('#ddlProjectType').val();
        var obj = { Project: Project };
        $('#ddlPortfolioType').html('');
        $.ajax({
            type: "post",
            url: '@Url.Action("GetProfile", "EnquiryMaster")',
            data: { Project: Project },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var district = "<select id='ddlPortfolioType'>";
                district = district + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    district = district + '<option value=' + data[i].Code + '>' + data[i].Name + '</option>';
                }
                district = district + '</select>';
                $('#ddlPortfolioType').html(district);
            }
        });
    });

    $('#ddlPortfolioType').on("change", function () {
        var Portfolio = $('#ddlPortfolioType').val();
        var obj = { Portfolio: Portfolio };
        $('#ddlServiceType').html('');

        $.ajax({
            type: "post",
            url: '@Url.Action("GetSubServiceList", "EnquiryMaster")',
            data: { Portfolio: Portfolio },
            datatype: "json",
            traditional: true,
            success: function (data) {

                var district = "<select id='ddlServiceType'>";
                district = district + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    district = district + '<option value=' + data[i].Code + '>' + data[i].Name + '</option>';
                }
                district = district + '</select>';
                $('#ddlServiceType').html(district);
            }
        });
    });*@



    $('#ddlProjectType').on("change", function () {
        var project = $('#ddlProjectType').val();

        // Clear the PortfolioType dropdown before the AJAX call
        $('#ddlPortfolioType').html('<option value="">--Select--</option>');
        $('#ddlServiceType').html('<option value="">--Select--</option>'); // Clear ServiceType too

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProfile", "EnquiryMaster")',
            data: { Project: project },
            dataType: "json", // Correct casing
            traditional: true,
            success: function (data) {
                if (data && data.length > 0) {
                    var options = '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += `<option value="${data[i].Code}">${data[i].Name}</option>`;
                    }
                    $('#ddlPortfolioType').html(options); // Add options to the existing dropdown
                } else {
                    alert("No profiles available for the selected project.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error in GetProfile AJAX: ", error);
                alert("Failed to load profiles. Please try again.");
            }
        });
    });

    $('#ddlPortfolioType').on("change", function () {
        var portfolio = $('#ddlPortfolioType').val();

        // Clear the ServiceType dropdown before the AJAX call
        $('#ddlServiceType').html('<option value="">--Select--</option>');

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSubServiceList", "EnquiryMaster")',
            data: { Portfolio: portfolio },
            dataType: "json", // Correct casing
            traditional: true,
            success: function (data) {
                if (data && data.length > 0) {
                    var options = '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += `<option value="${data[i].Code}">${data[i].Name}</option>`;
                    }
                    $('#ddlServiceType').html(options); // Add options to the existing dropdown
                } else {
                    alert("No services available for the selected portfolio.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error in GetSubServiceList AJAX: ", error);
                alert("Failed to load services. Please try again.");
            }
        });
    });




</script>




<script>



    $(document).ready(function () {

        $("#btnEnquiryMasterSave").on('click', function (event) {

            debugger;






            var a = "1";
            var b = "1";
            var EnquiryID = $("#EQ_ID").val();
            var EnquiryDescription = $("#EnquiryDescription").val();
            var CompanyName = $("#CompanyName").val();
            var ddlProjectType = $("#ddlProjectType option:selected").val();
            var ddlType = $("#ddlServiceType option:selected").val();
            var ddlPortfolioType = $("#ddlPortfolioType option:selected").val();

            var ddlBranch = $("#ddlBranch option:selected").val();
            var EndCustomer = $("#EndCustomer").val();
            var EnquiryReferenceNo = $("#EnquiryReferenceNo").val();
            var Notes = $("#Notes").val();
            //var RegretReason = $(".RegretReason").val();
            var ddlSource = $("#ddlSourceType option:selected").val();
            var SubType = $("#ddlPedType option:selected").val();
            var OtherType = $("#ddlOtherType option:selected").val();
            var EnergyType = $("#ddlEnergyType option:selected").val();
            var City = $("#ddlCityType option:selected").val();
            var Country = $("#ddlCountryType option:selected").val();
            var ddlContactName = $("#ddlContactType option:selected").val();
            var DocumentAttached = $("#DocumentAttached").val();
            var AttachmentDocument = $("#hfDocumentAttachment").val();
            var CMP_Id=$('#CMP_ID').val();

            //added by nikita on 25042024
            var Quotationviewed = $("#Quotationviewed_").prop("checked");
            var LegalReview = $("#LegalReview_").prop("checked");
            var Legalcomment = $("#Legalcomment").val();
            //var Budgetary = $("#Budgetary_").prop("checked");
            var Budgetary=$('input[name="Budgetary"]:checked').val(); //$("#Budgetary").prop("checked");
            var txtAttachLinks = $(".title[href*='/EnquiryMaster/Download1/']").length;
            //end

            var RefDate = $(".RefDate").val();

            var RegretReason = $(".RR").val();
            var ActionTaken = $(".AT").val();
            var RegretReasonDescription = $(".RRD").val();

            var multipleValues = $("#ProductLists").val() || [];

            var p = multipleValues.join(",");

            var DArray = [];



            var arrInspectionLocation = $("#ProductLists").val() || [];
            var p = arrInspectionLocation.join(",");

            var arrOrderType = $("#IdOrderType").val() || [];
            var O = arrOrderType.join(",");

            var arrCountry = $("#CountryNameList").val() || [];
            var Country = arrCountry.join(",");
            var arrCity = $("#CityNameList").val() || [];
            var City = arrCity.join(",");
            var chkCountry = Country;
            var chkCity = City;

            var DLostReason = $("#DLR").val();
            var ILostReason = $("#ILR").val();

            var ENQDuplicate =$('input[name="ENQDuplicate"]:checked').val();

            var checkedQuotationIds = [];
            $('.enquiry-checkbox:checked').each(function () {
                checkedQuotationIds.push($(this).val());
            });

            var budgetaryPk_QTID = checkedQuotationIds.join(',');


            if (arrInspectionLocation != '1') {
                //var DStatusList = $("#DStatusList option:selected").val();


                $('.trDomestic').each(function () {
                    var trD = {};

                    var OrderType = $(this).find('.COrderType').val();
                    var OrderRate = $(this).find('.COrderRate').val();
                    var Estimate_ManDays_ManMonth = $(this).find('.CEstimate_ManDays_ManMonth').val();
                    var distance = $(this).find('.CDistance').val();
                    var DEstimatedAmount = $(this).find('.CEstimatedAmount').val();
                    var Dcurrency = $(this).find('.CDcurrency').val();
                    var DExchangeRate = $(this).find('.CDExchangeRate').val();
                    var DTotalAmount = $(this).find('.CDTotalAmount').val();
                    var DRemark = $(this).find('.CDRemark').val();
                    var strMsg = "";

                    if (OrderType == '') {
                        strMsg = "Please fill Order Type";
                        $(this).find('.COrderType').focus()
                        return a = "2";
                    }
                    if (OrderRate == '') {
                        strMsg = "Please fill Order Rate";
                        $(this).find('.COrderRate').focus()
                        return a = "2";
                    }
                    if (Estimate_ManDays_ManMonth == '') {
                        //alert("Please Fill all details in Domestic")
                        strMsg = "Please fill Mandays";
                        $(this).find('.CEstimate_ManDays_ManMonth').focus()
                        return a = "2";
                    }
                    if (DEstimatedAmount == '') {
                        //alert("Please Fill all details in Domestic")
                        strMsg = "Please fill Estimated Amount";
                        $(this).find('.CEstimatedAmount').focus()
                        return a = "2";
                    }
                    if (Dcurrency == '') {
                        //alert("Please Fill all details in Domestic")
                        strMsg = "Please fill correct Currency";
                        $(this).find('.CDcurrency').focus()
                        return a = "2";
                    }
                    if (DExchangeRate == '') {
                        //alert("Please Fill all details in Domestic")
                        strMsg = "Please fill Exchange Rate";
                        $(this).find('.CDExchangeRate').focus()
                        return a = "2";
                    }

                    if (OrderType == 'ManDays') {
                        if (distance == '') {
                            strMsg = "Please fill Distance";
                            $(this).find('.CDistance').focus()
                            return a = "2";
                        }
                    }


                    //if (OrderType == 'LumSum' || OrderType == 'Perc') {
                    //    if (DRemark == '') {
                    //        $(this).find('.CDRemark').focus()
                    //        return a = "2";
                    //    }
                    //}

                    if (a !== "2") {


                        trD['OrderType'] = OrderType;
                        trD['OrderRate'] = OrderRate;
                        if (OrderType == 'ManDays' || OrderType == 'ManHR' || OrderType == 'LumSum' || OrderType == 'Perc') {
                            trD['Estimate_ManDays'] = Estimate_ManDays_ManMonth;
                            trD['Estimate_ManMonth'] = null;
                        }
                        else if (OrderType == 'ManMonth') {
                            trD['Estimate_ManDays'] = null;
                            trD['Estimate_ManMonth'] = Estimate_ManDays_ManMonth;
                        }
                        else {
                            trD['Estimate_ManMonth'] = null;
                            trD['Estimate_ManDays'] = null;
                        }
                        trD['Distance'] = distance;
                        trD['EstimatedAmount'] = DEstimatedAmount;
                        trD['Currency'] = Dcurrency;
                        trD['ExchangeRate'] = DExchangeRate;
                        trD['DTotalAmount'] = DTotalAmount;
                        trD['DRemark'] = DRemark;





                        DArray.push(trD);
                    }
                    else {
                        alert(strMsg);
                        return false;
                    }

                });

            }

            var IArray = [];

            //if (arrInspectionLocation != '2') {
            //    //var IStatusList = $("#IStatusList option:selected").val();
            //    $('.trInternational').each(function () {
            //        var trI = {};


            //        var IOrderType = $(this).find('.CIOrderType').val();
            //        var IOrderRate = $(this).find('.CIOrderRate').val();
            //        var IEstimate_ManDays_ManMonth = $(this).find('.CIEstimate_ManDays_ManMonth').val();
            //        var Idistance = $(this).find('.CIDistance').val();
            //        var IEstimatedAmount = $(this).find('.CIEstimatedAmount').val();
            //        var Icurrency = $(this).find('.CIcurrency').val();
            //        var IExchangeRate = $(this).find('.CIExchangeRate').val();
            //        var ITotalAmount = $(this).find('.CITotalAmount').val();
            //        var CIRemark = $(this).find('.CIRemark').val();


            //        if (IOrderType == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIOrderType').focus()
            //            return b = "2";
            //        }
            //        if (IOrderRate == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIOrderRate').focus()
            //            return b = "2";
            //        }
            //        if (IEstimate_ManDays_ManMonth == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIEstimate_ManDays_ManMonth').focus()
            //            return b = "2";
            //        }
            //        if (IEstimatedAmount == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIEstimatedAmount').focus()
            //            return b = "2";
            //        }
            //        if (Icurrency == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIcurrency').focus()
            //            return b = "2";
            //        }
            //        if (IExchangeRate == '') {
            //            //alert("Please Fill all details in Domestic")
            //            $(this).find('.CIExchangeRate').focus()
            //            return b = "2";
            //        }

            //        //if (IOrderType == 'LumSum' || IOrderType == 'Perc') {
            //        //    if (IRemark == '') {
            //        //        $(this).find('.CIRemark').focus()
            //        //        return b = "2";
            //        //    }
            //        //}


            //        if (b !== "2") {



            //            trI['IOrderType'] = IOrderType;
            //            trI['IOrderRate'] = IOrderRate;
            //            if (IOrderType == 'ManDays') {
            //                trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
            //                trI['IEstimate_ManMonth'] = null;
            //            }
            //            else if (IOrderType == 'ManMonth') {
            //                trI['IEstimate_ManDays'] = null;
            //                trI['IEstimate_ManMonth'] = IEstimate_ManDays_ManMonth;
            //            }
            //            else {
            //                trI['IEstimate_ManMonth'] = null;
            //                trI['IEstimate_ManDays'] = IEstimate_ManDays_ManMonth;
            //            }
            //            trI['IDistance'] = Idistance;
            //            trI['IEstimatedAmount'] = IEstimatedAmount;
            //            trI['InternationalCurrency'] = Icurrency;
            //            trI['IExchangeRate'] = IExchangeRate;
            //            trI['ITotalAmount'] = ITotalAmount;
            //            trI['IRemark'] = CIRemark;




            //            IArray.push(trI);
            //        }
            //    });
            //}


            //var checkbox = "";
            //if ($('#chkArc').prop('checked')) {
            //    checkbox = "1"
            //}
            //else {
            //    checkbox = "0"
            //}

            //var radioValue = $("input[name='chkArc']:checked").val();
            //var checkbox = "";
            //if (radioValue === "True") {
            //    checkbox = "1"
            //}
            //else {
            //    checkbox = "0"
            //}

            var checkbox_ =$("input[name=chkArc]:checked").val();
            var checkbox="";
            if(checkbox_=="True"){
                checkbox="1";
            }
            else{
                checkbox="0";
            }


            var Budgetary = $("input[name='Budgetary']:checked").val();
            //var Budgetary1 = "";
            //if (Budgetary === "True") {
            //    Budgetary1 = "1"
            //}
            //else {
            //    Budgetary1 = "0"
            //}


            var selected = $("#CountryNameList option:selected");
            var ddlCountryValue = "";
            selected.each(function () {
                ddlCountryValue += $(this).val() + ",";
            });

            var selected = $("#CityNameList option:selected");
            var ddlCityValue = "";
            selected.each(function () {
                ddlCityValue += $(this).val() + ",";
            });


            var selected = $("#FileUpload").text();



            var RR = $("#RR").val();
            var AT = $("#AT").val();

            var RRD = $("#RRD").val();


            if ($("#RegretStatus").val() == 'Regret') {
                if (RR == "" || RR == null) {
                    alert("Please select Regret reason!");
                    $("#RR").focus()
                    return false;
                }
                if (AT == "" || AT == null) {
                    alert("Please select Action Taken!");
                    $("#AT").focus()
                    return false;
                }
                if (RRD == "" || RRD == null) {
                    alert("Please select Regret reason description!");
                    $("#AT").focus()
                    return false;
                }
            }



            //*********************************************************

            //if ($("#EnquiryDescription").val() == "" || $("#EnquiryDescription").val() == null) {
            //    alert("Please Enter Enquiry Description !!!");
            //    $("#EnquiryDescription").focus()
            //    return false;
            //}
            if ($("#CompanyName").val() == "" || $("#CompanyName").val() == null) {
                alert("Please Enter Company Name First !!!");
                $("#CompanyName").focus()
                return false;
            }
            if (ddlContactName == 0 || ddlContactName == null) {
                alert("Please Select at lease (1) Contact Name !!!");
                $("#ContactName").focus()
                return false;
            }
            //if ($("#EndCustomer").val() == "" || $("#EndCustomer").val() == null) {
            //    alert("Please Enter End Customer !!!");
            //    $("#EndCustomer").focus()
            //    return false;
            //}
            if ($("#EnquiryReferenceNo").val() == "" || $("#EnquiryReferenceNo").val() == null) {
                alert("Please Enter Enquiry Reference Number !!!");
                $("#EnquiryReferenceNo").focus()
                return false;
            }
            if ($(".RefDate").val() == "" || $(".RefDate").val() == null) {
                alert("Please Select Date !!!");
                $(".RefDate").focus()
                return false;
            }
            if ($("#EstClose").val() == "" || $("#EstClose").val() == null) {
                alert("Please Select Est Close Date !!!");
                $("#EstClose").focus();
                return false;
            }
            if (ddlProjectType == 0 || ddlProjectType == null) {
                alert("Please Select At lease (1) OBS Type !!!");
                $("#ddlProjectType").focus()
                return false;
            }


            if (ddlPortfolioType == 0 || ddlPortfolioType == null) {
                alert("Please Select at lease (1) Portfolio !!!");
                $("#ddlPortfolioType").focus();
                return false;
            }
            if (ddlType == 0 || ddlType == null) {
                alert("Please Select at lease (1) ServiceType !!!");
                $("#Type").focus();
                return false;
            }

            //added by nikita on 20062024
            var role = @Session["RoleID"];
            if (($("#LegalReview_").prop("checked") == false || $("#LegalReview_").val()  == null) && role=="60") {
                alert("Please Select LegalReview !!!");
                return false;
            }
            //if (($("#Quotationviewed_").prop("checked") == false || $("#Quotationviewed_").val() == null) && role=="60") {
            //    alert("Please Select Quotation !!!");
            //    return false;
            //}
            if ((Legalcomment == "" || Legalcomment == null) && role=="60") {
                alert("Please Enter Comment !!!");
                return false;
            }
            //end


            if ($("#ProductLists").val() == 0 || $("#ProductLists").val() == null) {
                alert("Please Select at lease (1) Inspection Location !!!");
                $("#InspectionLocation").focus();
                return false;
            }

            if ($("#EstimatedAmount").val() == "" || $("#EstimatedAmount").val() == null) {
                alert("Please Enter Estimated Amount !!!");
                $("#EstimatedAmount").focus();
                return false;
            }
            if (ddlSource == 0 || ddlSource == null) {
                alert("Please Select at lease (1) source !!!");
                $("#Source").focus(); ddlBranch
                return false;
            }
            if (ddlBranch == 0 || ddlBranch == null) {
                alert("Please Select at lease (1) Branch !!!");
                $("#Branch").focus();
                return false;
            }

            var CheckListDescription =$('#EnqCheckListDescription').val();
            if(CheckListDescription.length < 50) {
                alert("Please enter at least 50 characters in the Check List Description comment.");
                return false;
            }

            //added by nikita on 25062024
            var fileInput = $("input[name=FileUpload2]").val();
            var fileInput1 = $("input[name=filepond]").val();

            if (ddlSource === "11" && (txtAttachLinks==0 && fileInput === "")) {
                alert("Please Attach Tender Documents");
                $("#FileUpload2").focus();
                return false;
            }

            if ((ddlSource === "3" || ddlSource === "16" || ddlSource === "17") && (txtAttachLinks==0 && fileInput1 === "")) {
                alert("Please Attach  Related Communications Documents");
                $("#FileUpload").focus();
                return false;
            }




            ///Domestic
            if (p.indexOf('2') != -1)
            {
            //    var DEstimatedAmount = $("#DEstimatedAmount").val();
            //    //var Dcurrency = $("#Dcurrency option:selected").val();
            //    var Dcurrency = $("#Dcurrency").val();

            //    var DExchangeRate = $("#DExchangeRate").val();
            //    var DTotalAmount = $("#DTotalAmount").val();

                //if (ddlCityValue == "") {
                //    alert("Please Enter atleast (1)  City !!!");
                //    $("#DOMESTIC").focus();
                //    return false;
                //}

            //    if (DEstimatedAmount == "") {
            //        alert("Please Enter Domestic Estimated Amount !!!");
            //        $("#DEstimatedAmount").focus();
            //        return false;
            //    }

            //    if (DExchangeRate == "") {
            //        alert("Please Enter Domestic Exchange Rate !!!");
            //        $("#DExchangeRate").focus();
            //        return false;
            //    }

            //    if (Dcurrency == "") {
            //        alert("Please Select Domestic Currency !!!");
            //        $("#Dcurrency").focus();
            //        return false;
            //    }

            }

            ///International
            if (p.indexOf('1') != -1) {
            //    var IEstimatedAmount = $("#IEstimatedAmount").val();
            //    var Icurrency = $("#Icurrency").val();
            //    var IExchangeRate = $("#IExchangeRate").val();
            //    var ITotalAmount = $("#ITotalAmount").val();

                //if (ddlCountryValue == "") {
                //    alert("Please Enter atleast (1)  Country !!!");
                //    $("#INTERNATIONAL").focus();
                //    return false;
                //}

            //    if (IEstimatedAmount == "") {
            //        alert("Please Enter International Estimated Amount !!!");
            //        $("#IEstimatedAmount").focus();
            //        return false;
            //    }

            //    if (IExchangeRate == "") {
            //        alert("Please Enter International Exchange Rate !!!");
            //        $("#IExchangeRate").focus();
            //        return false;
            //    }

            //    if (Icurrency == "") {
            //        alert("Please Select International Currency !!!");
            //        $("#Icurrency").focus();
            //        return false;
            //    }
            }



            if (a == "2") {
                alert("Please Fill details in Domestic !!!");
                $("#EstimatedAmount").focus();
                return false;
            }
            if (b == "2") {
                alert("Please Fill details in International !!!");
                $("#EstimatedAmount").focus();
                return false;
            }

            //$("#CheckListId").val();

            var varEnqCheckList = $("input[id='myCheckbox1']:checked").map(function () {
                return this.value;
            }).get().join(',');

            var varEnqCheckListD = $("#EnqCheckListDescription").val();

            if (varEnqCheckList == "" || varEnqCheckList == null) {
                alert("Fill Enquiry review CheckList form!!!");
                return false;
            }



            var arrRegretReason = $("#RR").val() || [];
            var RegretReason = arrRegretReason.join(",");

            var arrActionTaken = $("#AT").val() || [];
            var ActionTaken = arrActionTaken.join(",");

            // else
            // {

            event.preventDefault();
            //do something


            $("#btnEnquiryMasterSave").prop('disabled', true);



            var EnquiryDetails =
                {
                    EQ_ID: $("#EQ_ID").val(),
                    EnquiryDescription: $("#EnquiryDescription").val(),
                    CompanyName: $("#CompanyName").val(),
                    EndCustomer: $("#EndCustomer").val(),
                    EnquiryReferenceNo: $("#EnquiryReferenceNo").val(),
                    ProjectType: $("#ddlProjectType option:selected").val(),
                    PortfolioType: $("#ddlPortfolioType option:selected").val(),
                    SubServiceType: $("#ddlServiceType option:selected").val(),

                    EstimatedAmount: $("#EstimatedAmount").val(),
                    Notes: $("#Notes").val(),
                    //RegretReason: $(".RegretReason").val(),
                    Branch: $("#ddlBranch option:selected").val(),
                    Source: $("#ddlSourceType option:selected ").val(),
                    ///Type: $("#ddlServiceType option:selected").val(),
                    ContactName: $("#ddlContactType option:selected").val(),
                    SubType: $("#ddlPedType option:selected").val(),
                    OtherType: $("#ddlOtherType option:selected").val(),
                    EnergyType: $("#ddlEnergyType option:selected").val(),
                    //InspectionLocation: $("#ddlInspectionLocation option:selected").val(),
                    InspectionLocation: p,
                    OrderType :O,

                    City: $("#ddlCityType option:selected").val(),
                    Country: $("#ddlCountryType option:selected").val(),
                    DocumentAttached: $("#DocumentAttached").val(),
                    //added by nikita on 25062024

                    //Budgetary: Budgetary1,//$("#Budgetary_").prop("checked"),
                    Budgetary:$('input[name="Budgetary"]:checked').val(),
                    Quotationviewed :  $("#Quotationviewed_").prop("checked"),
                    LegalReview : $("#LegalReview_").prop("checked"),
                    Legalcomment : $("#Legalcomment").val(),
                    //end
                    DEstimatedAmount: $("#DEstimatedAmount").val(),
                    Dcurrency: $("#Dcurrency").val(),
                    DExchangeRate: $("#DExchangeRate").val(),
                    DTotalAmount: $("#DTotalAmount").val(),
                    IEstimatedAmount: $("#IEstimatedAmount").val(),
                    Icurrency: $("#Icurrency").val(),
                    IExchangeRate: $("#IExchangeRate").val(),
                    ITotalAmount: $("#ITotalAmount").val(),
                    RefDate: $(".RefDate").val(),
                    EstClose: $(".estimatedclosedate").val(),
                    RegretReason: RegretReason,
                    RegretActionTakenId: ActionTaken,
                    RegretReasonDescription: $("#RRD").val(),
                    CheckListId: varEnqCheckList,
                    CheckListDescription: varEnqCheckListD,
                    LeadGivenBy: $("#LeadGivenBy").val(),
                    NotesbyLeads: $("#NotesbyLeads").val(),
                    CMP_ID:CMP_Id,
                    ENQDuplicate:ENQDuplicate,
                    BudgetaryPk_QTid:budgetaryPk_QTID

                }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Enquiry", "EnquiryMaster")',
                dataType: 'json',
                Async: false,
                data: JSON.stringify({ EM: EnquiryDetails, "City": ddlCityValue, "Country": ddlCountryValue, "C": checkbox, "DArray": DArray, "IArray": IArray }),
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {


                    if (response.result == 'Redirect') {
                        alert("Enquiry Details has been saved successfully!!!")
                        window.location = response.url;
                    }
                    else if (response.success == 2) {
                        alert("Enquiry Details has been Updated successfully!!!")
                        window.location.href = '@Url.Action("EnquiryMasterDashBoard", "EnquiryMaster")';
                    }
                    else if (response.success == 3) {
                        alert("Faild !!! Something Went Wrong!!!")
                        // window.location.href = '@Url.Action("Enquiry", "EnquiryMaster")';
                    }
                }
            });
            // }
        });

    });
</script>



<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />

<script type="text/javascript">
    $(function () {
        $(".Company").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetsapCompanyName", "EnquiryMaster")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {


                        response($.map(data, function (item) {

                            return { label: item.CompanyName, value: item.CompanyName };


                        }));
                    },
                    error: function (response) {
                        //alert(response.responseText);
                    },
                    failure: function (response) {
                        //  alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //if (u.item.val == -1) {
                //    return false;
                //}
                //$("#hfCompanyName").val(i.item.val);
            },
            minLength: 2
        });

    });

    $('#CompanyName').blur(function () {


        // $('#EndCustomer').val($('#CompanyName').val());
        if ($('#CompanyName').val() == '' || $('#CompanyName').val() == null) {
            $('#lnkNewCOntact').hide();
            $('#ddlContactType').attr('disabled', true);
        }
        else {
            $('#lnkNewCOntact').show();
            $('#ddlContactType').attr('disabled', false);
        }
    })

</script>

<script type='text/javascript'>
    $(document).ready(function () {

        debugger;

        if ($('#CompanyName').val() == '' || $('#CompanyName').val() == null) {

            $('#ddlContactType').attr('disabled', true);
            $('#lnkNewCOntact').hide();
        }
        else {
            $('#lnkNewCOntact').show();
            $('#ddlContactType').attr('disabled', false);
        }

    });
</script>

<script>
    // jQuery ".Class" SELECTOR.
    $(document).ready(function () {
        $('#EstimatedAmount').keypress(function (event) {
            return isNumber(event, this)
        });
    });
    // THE SCRIPT THAT CHECKS IF THE KEY PRESSED IS A NUMERIC OR DECIMAL VALUE.
    function isNumber(evt, element) {

        var charCode = (evt.which) ? evt.which : event.keyCode

        if (
            (charCode != 45 || $(element).val().indexOf('-') != -1) &&      // “-” CHECK MINUS, AND ONLY ONE.
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
            (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>







@*Enabled and Dissabled Dropdownlist*@
<script>

    $(document).ready(function () {
        $("#ddlPedType").prop("disabled", true);
        $("#ddlOtherType").prop("disabled", true);
        $("#ddlEnergyType").prop("disabled", true);
        $("#ddlServiceType").change(function () {
            var selected = $("#ddlServiceType option:selected");
            var ddlSubMenuEnabledDisabled = "";
            selected.each(function () {
                ddlSubMenuEnabledDisabled += $(this).text() + ",";
            });
            var ddlSubMenuPED = ddlSubMenuEnabledDisabled.indexOf("PED") !== -1;
            var ddlSubMenuOTHERS = ddlSubMenuEnabledDisabled.indexOf("OTHERS") !== -1;
            var ddlSubMenuENERGY = ddlSubMenuEnabledDisabled.indexOf("ENERGY") !== -1;
            if (ddlSubMenuPED == true) {
                $("#ddlPedType").prop("disabled", false);
            }
            else {
                $("#ddlPedType").prop("disabled", true)
            }
            if (ddlSubMenuOTHERS == true) {
                $("#ddlOtherType").prop("disabled", false);
            }
            else {
                $("#ddlOtherType").prop("disabled", true)
            }
            if (ddlSubMenuENERGY == true) {
                $("#ddlEnergyType").prop("disabled", false);
            }
            else {
                $("#ddlEnergyType").prop("disabled", true)
            }
        });
    });
</script>

@*Adding Code For Contact Details in Poupp 17 June 2019*@
<script>
    $(document).ready(function () {
        $("#btnAddNewContact").on('click', function () {
            debugger
            //var SalesID = $("#SalesID").val();
            // alert($('#CompanyName').val());
            var testcompanynameparam = $('#CompanyName').val();
            var pk_Cmp_id=$('#CMP_ID').val();
            var ContactNames = $("#ContactNames").val();
            var ddlContactCompanyName = $("#ddlContactCompanyname option:selected").val();
            var ddlCompanyName = $("#ddlContactCompanyname option:selected").text();
            //var ddlContactTitleName = $("#ddlContactTitle option:selected").val();
            var HomePhoneNo = $("#HomePhone").val();
            var MobileNo = $("#Mobile").val();
            //var PanNo = $("#Pan_No").val();
            //var FaxNo = $("#Fax_No").val();
            var MainContact = $('#IsMainContact').is(':checked');
            var CompanyName = $('#hidCompany').val();
            var Address = $("#Address").val();
            var Email = $("#Email").val();
            var Fax_No = $("#Fax_No").val();
            var TitleName = $("#TitleName").val();
            var ContactStatus = $("#PT").val();
            // alert(Fax_No);
            //  alert(ContactStatus);

            //**************************************************************************
            if ($("#ContactNames").val() == "" || $("#ContactNames").val() == null) {
                alert("Please Enter Contact Name!!!");
                $("#ContactNames").focus()
                return false;
            }

                //else if (ddlCompanyName == 0 || ddlCompanyName == null) {
                //    alert("Please Select Company Name !!!");
                //    $("#ContactCompanyName").focus()
                //    return false;
                //}
            else if (TitleName == "" || TitleName == null) {
                alert("Enter Designation !!!");
                $("#TitleName").focus()
                return false;
            }
            else if (Email == "" || Email == null) {
                alert("Enter Email !!!");
                $("#Email").focus()
                return false;
            }
            //else if (MobileNo == "" || MobileNo == null) {
            //    alert("Enter Mobile !!!");
            //    $("#Mobile").focus()
            //    return false;
            //}
            else if (ContactStatus == "" || ContactStatus == null) {
                alert("Enter Status !!!");
                $("#PT").focus()
                return false;
            }


            else {

                var ContactDetails =
                    {
                        //SalesID: SalesID,
                        ContactNames: ContactNames,
                        CMP_ID:pk_Cmp_id,
                        ContactCompanyName: ddlContactCompanyName,
                        //CompanyName: ddlCompanyName,
                        CompanyName: testcompanynameparam,
                        //TitleName: ddlContactTitleName,
                        HomePhone: HomePhoneNo,
                        // Pan_No: PanNo,
                        Mobile: MobileNo,
                        //Fax_No: FaxNo,
                        IsMainContact: MainContact,
                        Address: Address,
                        Email: Email,
                        Fax_No: Fax_No,
                        TitleName: TitleName,
                        ContactStatus: ContactStatus
                    }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify({ ECM: ContactDetails }),
                    url: '@Url.Action("ContactDetails", "EnquiryMaster")',
                    dataType: 'json',
                    Async: false,
                    enctype: "multipart/form-data",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {

                        if (response.success == 1) {
                            alert("Contact Saved Successfully!!!")
                            @*window.location.href = '@Url.Action("Enquiry", "EnquiryMaster")';*@
                            $('#myModal').modal('hide');
                            showMessage();
                            @*window.location.href = '@Url.Action("GetSubSubSectionType", "EnquiryMaster")';*@
                            @*window.location.href = "@Url.Action("GetSubSubSectionType", "EnquiryMaster")" +"/"+ testcompanynameparam ;*@
                        }
                        else if (response.success == 2) {

                            alert("Duplicate Contact detail Or !!Failed!!! Something Went Wrong!!! Please Try Again....")
                            @*window.location.href = '@Url.Action("Enquiry", "EnquiryMaster")';*@
                            $('#myModal').modal('hide');
                            showMessage();
                            @*window.location.href = '@Url.Action("GetSubSubSectionType", "EnquiryMaster")';*@
                            @*window.location.href = "@Url.Action("GetSubSubSectionType", "EnquiryMaster")" +"/"+ testcompanynameparam ;*@
                        }

                    }
                });
            }
        });
    });
</script>


<script>
    $(document).ready(function () {
        $("#ddlCompanyName").change(function () {
            varcityText = $("#ddlCompanyName option:selected").text();
            $("#hidCompany").val(varcityText);
        });
    });
</script>
@*Only Allowed Decimal Value and number*@
<script>
    $(document).ready(function () {
        $("#EstimatedAmount").keypress(function (e) {
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                alert("Only Decimal Value Allowed in Estimated amount!!!");
                $("#EstimatedAmount").focus();
                return false;
            }
        });

    });
</script>


<script>
    $(document).ready(function () {
        debugger;
        $('#ProductLists').on('change', function () {
            debugger;
            var multipleValues = $("#ProductLists").val() || [];

            var p = multipleValues.join(",");
            if (p == '1,2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").show();
            }
            else if (p == '1') {
                $("#INTERNATIONAL").show();
                $("#DOMESTIC").hide();
            }
            else if (p == '2') {

                $("#DOMESTIC").show();
                $("#INTERNATIONAL").hide();
            }
            else {
                $("#DOMESTIC").hide();
                $("#INTERNATIONAL").hide();
            }
        })
    });
</script>


<script>
    $(document).ready(function () {
            debugger;
            var multipleValues = $("#ProductLists").val() || [];

            var p = multipleValues.join(",");
            if (p == '1,2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").show();
            }
            else if (p == '1') {
                $("#INTERNATIONAL").show();
                $("#DOMESTIC").hide();
            }
            else if (p == '2') {

                $("#DOMESTIC").show();
                $("#INTERNATIONAL").hide();
            }
            else {
                $("#DOMESTIC").hide();
                $("#INTERNATIONAL").hide();
            }

    });
</script>

@*<script>
        $(document).ready(function () {
            debugger;
            $('#ProductLists').on('change', function () {
                debugger;
                var multipleValues = $("#ProductLists").val() || [];

                var p = multipleValues.join(",");
                //alert(p);

                if (p == '1,2') {
                    $("#DOMESTIC").show();
                    $("#INTERNATIONAL").show();

                    //$("#Dcurrency option:selected").val("");
                    $("#DExchangeRate").val("");

                    $("#DomesticCurrency").show();
                    $("#InternationalCurrency").show();

                    $(".CDcurrency").val("1");
                    $(".CDExchangeRate").val("1");

                    $(".CIcurrency").val("3");
                    $(".CIExchangeRate").val("75");
                    sumIt()
                }
                else if (p == '1') {
                    $("#INTERNATIONAL").show();
                    $("#DOMESTIC").hide();

                    $("#DomesticCurrency").hide();
                    $("#InternationalCurrency").show();


                    $("#CityNameList option:selected").val("");
                    $(".COrderType").val("");
                    $(".COrderRate").val("");
                    $(".CEstimate_ManDays_ManMonth").val("");
                    $(".CDistance").val("");
                    $(".CDEstimatedAmount").val("");
                    $(".CDcurrency").val("");
                    $(".CDExchangeRate").val("");
                    $(".CDTotalAmount").val("");

                    $(".CIcurrency").val("3");
                    $(".CIExchangeRate").val("75");


                    sumIt()
                }
                else if (p == '2') {

                    $("#DOMESTIC").show();
                    $("#INTERNATIONAL").hide();

                    $("#DomesticCurrency").show();
                    $("#InternationalCurrency").hide();

                    $("#CountryNameList option:selected").val("");
                    $(".CIOrderRate").val("");
                    $(".CIOrderType").val("");
                    $(".CIEstimate_ManDays_ManMonth").val("");
                    $(".CIDistance").val("");
                    $(".CIEstimatedAmount").val("");

                    $(".CDcurrency").val("1");
                    $(".CDExchangeRate").val("1");

                    $(".CITotalAmount").val("");

                    sumIt()

                }
                else {
                    $("#DOMESTIC").hide();
                    $("#INTERNATIONAL").hide();


                    $("#DomesticCurrency").hide();
                    $("#InternationalCurrency").hide();

                    $("#DEstimatedAmount").val("");
                    //$("#Dcurrency option:selected").val("");
                    $("#DExchangeRate").val("");
                    $("#DTotalAmount").val("");
                    $("#IEstimatedAmount").val("");
                    $("#Icurrency").val("");
                    $("#IExchangeRate").val("");
                    $("#ITotalAmount").val("");
                    sumIt()
                }

            });
        });

    </script>*@






<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    //$(document).ready(function ()
    //{
    @*$('#CompanyName').blur(function () {
        //debugger;
        console.log($('#CompanyName').val())
        $('#ddlContactType').html('');
        $.ajax({
            type: "post",
            url: '@Url.Action("GetSubSubSectionType", "EnquiryMaster")',
            data: { CompanyName: $('#CompanyName').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {
                //alert(data)
                var district = "<select id='ddlContactType'>";
                district = district + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    district = district + '<option value=' + data[i].Code + '>' + data[i].Name + '</option>';
                }
                district = district + '</select>';
                $('#ddlContactType').html(district);
            }
        });
        //});
    });*@

    @*$('.ContactName').blur(function () {
        debugger;

        console.log($('#CompanyName').val());
        $('#ddlContactType').html(''); // Clear existing options

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSubSubSectionType", "EnquiryMaster")',
            data: { CompanyName: $('#CMP_ID').val()},
            dataType: "json", // Ensure correct casing
            traditional: true,
            success: function (data) {
                if (data && data.length) {
                    let options = '<option value="">--Select--</option>';
                    for (let i = 0; i < data.length; i++) {
                        options += `<option value="${data[i].Code}">${data[i].Name}</option>`;
                    }
                    $('#ddlContactType').html(options); // Update dropdown content
                } else {
                   // alert("No data returned from server");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error in AJAX request: ", error);
                alert("Error occurred. Please try again.");
            }
        });
    });*@

    //$('#ddlContactType').blur(function () {
  function onContactTypeChange(){
        debugger;

        console.log($('#CompanyName').val());
        $('#ddlContactType').html(''); // Clear existing options

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSubSubSectionType", "EnquiryMaster")',
            data: { CompanyName: $('#CMP_ID').val()},
            dataType: "json", // Ensure correct casing
            traditional: true,
            success: function (data) {
                if (data && data.length) {
                    let options = '<option value="">--Select--</option>';
                    for (let i = 0; i < data.length; i++) {
                        options += `<option value="${data[i].Code}">${data[i].Name}</option>`;
                    }
                    $('#ddlContactType').html(options); // Update dropdown content
                } else {
                    // alert("No data returned from server");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error in AJAX request: ", error);
                alert("Error occurred. Please try again.");
            }
        });
    };



</script>





<script>
    function myFunction() {
        debugger;


        if (validateform() == false) {
            return false;
        }
        else {
            //var link = document.getElementById('btnEnquiryMasterSave');
            //link.click();

        }

        function validateform() {
            debugger;
            $("#RegretStatus").val("Regret");
            $("#dvPassport").show();
            $("#dvPassport1").show();
            $("#dvPassport2").show();
            //var RR = $("#RR").val();
            //var AT = $("#AT").val();
            //var RRD = $("#RRD").val();

            //if (RR == "" || RR == null) {
            //    alert("Please select Regret reason!");
            //    $("#RR").focus()
            //    return false;
            //}
            //if (AT == "" || AT == null) {
            //    alert("Please select Action Taken!");
            //    $("#AT").focus()
            //    return false;
            //}
            //if (RRD == "" || RRD == null) {
            //    alert("Please select Regret reason description!");
            //    $("#AT").focus()
            //    return false;
            //}

        }


    }




</script>
<script>
    $(document).ready(function () {
        $('.deleteItem').click(function (e) {
            debugger;
            e.preventDefault();
            var $ctrl = $(this);
            var EnquiryID = $("#EQ_ID").val();
            if (confirm('Do you really want to delete this file?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id'), EnquiryID: $("#EQ_ID").val() }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });
    });

</script>



<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>



<script type="text/javascript">

    //$(document).ready(function ()
    //{

    //$('#CompanyName').blur(function () {
    function showMessage() {
        debugger
        //debugger;
        console.log($('#CompanyName').val())
        $('#ddlContactType').html('');
        $.ajax({
            type: "post",
            url: '@Url.Action("GetSubSubSectionType", "EnquiryMaster")',
            data: { CompanyName: $('#CMP_ID').val() },
            datatype: "json",
            traditional: true,
            async:false,
            success: function (data) {
                debugger
                //alert(data)
                //var district = "<select id='ddlContactType'>";
                //district = district + '<option value="">--Select--</option>';
                //for (var i = 0; i < data.length; i++) {
                //    district = district + '<option value=' + data[i].Code + '>' + data[i].Name + '</option>';
                //}
                //district = district + '</select>';
                //$('#ddlContactType').html(district);

                var district = "<select id='ddlContactType'>";
                district += '<option value="">--Select--</option>';

                for (var i = 0; i < data.length; i++) {

                    district += '<option value="' + data[i].Code + '">' + data[i].Name + '</option>';
                }

                district += "</select>";


                $('#ddlContactType').html(district);

            }
        });
    };
    //});
</script>



<script>
    $(document).ready(function () {
        $('#lnkNewCOntact').click(function () {
            debugger
            if ($("#CompanyName").val() != "") {
                var Address = {};
                //Address.url = "/CompanyMasters/GetAddressOfCompany";
                Address.url = '@Url.Action("GetAddressOfCompany", "EnquiryMaster")';
                //Address.url: '@Url.Action("GetAddressOfCompany", "CompanyMasters")',
                @*Address.url: '@Url.Action("GetAddressOfCompany", "CompanyMasters")';*@
                Address.type = "Get";
                Address.data = { Company_Name: $("#CompanyName").val() };
                Address.datatype = "json";
                Address.ContentType = "application/json";
                //Address.success = function (address) {
                Address.success = function (response) {
                    //$("#Address").val(address.Address).val()
                    $('#ddlCaddr').empty();

                    var s = '<option value="-1">--Select Address--</option>';
                    for (var i = 0; i < response.length; i++) {
                        s += '<option value="' + response[i].Code + '">' + response[i].Name + '</option>';

                    }
                    $("#ddlCaddr").html(s);
                };
                Address.error = function () { alert("Error in Getting Address !"); };
                $.ajax(Address);
            }
            else {
                $("#Address").empty();
                $("#Address").prop("disabled", true);
            }
        });
    });
</script>

<script>
    function CheckValidCompany() {

        // $("#Status").html('<font color="blue">Checking ...</font>'),
        $.post("@Url.Action("CheckValidCompany", "EnquiryMaster")",
            {
                companyname: $("#CompanyName").val()
            },
            function (data) {

                if (data == 0) {

                    alert("Company Name is not Valid !! Please select Company Name from suggestion")
                    $('#CompanyName').val("");

                    //$("#Status").html('<font color="red">Coupan Code is  already Use !</font>');
                }
                if (data == 1) {



                }



            });


    }
</script>


<script type="text/javascript">
    //$(document).ready(function () {

    function onchangeevent() {

        var multipleValues = $("#ProductLists").val() || [];
        var DTotalAmount = 0;
        var ITotalAmount = 0;

        var p = multipleValues.join(",");

        if (p == '1') {
            var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
            var IExchangedRate = parseFloat($('#IExchangeRate').val());
            ITotalAmount = IEstimatedAmount * IExchangedRate;
            $('#EstimatedAmount').val(ITotalAmount);
            $('#ITotalAmount').val(ITotalAmount);
            $("#DomesticCurrency").hide();
            $("#InternationalCurrency").show();


        }
        if (p == '2') {
            var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
            var ExchangedRate = parseFloat($('#DExchangeRate').val());


            DTotalAmount = EstimatedAmount * ExchangedRate;
            $('#EstimatedAmount').val(DTotalAmount);
            $('#DTotalAmount').val(DTotalAmount);
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").hide();
        }
        if (p == '1,2') {
            var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
            var ExchangedRate = parseFloat($('#DExchangeRate').val());

            var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
            var IExchangedRate = parseFloat($('#IExchangeRate').val());

            DTotalAmount = EstimatedAmount * ExchangedRate;

            if (isNaN(DTotalAmount) == false) {
                $('#DTotalAmount').val(DTotalAmount);
            }

            ITotalAmount = IEstimatedAmount * IExchangedRate;

            if (isNaN(ITotalAmount) == false) {
                $('#ITotalAmount').val(ITotalAmount);
            }

            var GrandTotal = DTotalAmount + ITotalAmount;
            if (isNaN(GrandTotal) == false) {
                $('#EstimatedAmount').val(GrandTotal);
            }
            // $('#EstimatedAmount').val(GrandTotal);
            $("#DomesticCurrency").show();
            $("#InternationalCurrency").show();
        }
    };


</script>

@*<script type="text/javascript">
        $(document).ready(function () {
            debugger;
            var multipleValues = $("#ProductLists").val() || [];
            var DTotalAmount = 0;
            var ITotalAmount = 0;
            var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
            var ExchangedRate = parseFloat($('#DExchangeRate').val());

            var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
            var IExchangedRate = parseFloat($('#IExchangeRate').val());


            var p = multipleValues.join(",");

            var p = multipleValues.join(",");
            if (p == '1,2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").show();

                $("#DomesticCurrency").show();
                $("#InternationalCurrency").show();
                sumIt()
            }
            else if (p == '1') {
                $("#INTERNATIONAL").show();
                $("#DOMESTIC").hide();

                $("#DomesticCurrency").hide();
                $("#InternationalCurrency").show();


                //$("#CityNameList").val("");
                $(".COrderType").val("");
                $(".COrderRate").val("");
                $(".CEstimate_ManDays_ManMonth").val("");
                $(".CDistance").val("");
                $(".CDEstimatedAmount").val("");
                $(".CDcurrency").val("");
                $(".CDExchangeRate").val("");
                $(".CDTotalAmount").val("");
                sumIt()
            }
            else if (p == '2') {
                $("#DOMESTIC").show();
                $("#INTERNATIONAL").hide();

                $("#DomesticCurrency").show();
                $("#InternationalCurrency").hide();

                //$("#CountryNameList").val("");
                $(".CIOrderRate").val("");
                $(".CIOrderType").val("");
                $(".CIEstimate_ManDays_ManMonth").val("");
                $(".CIDistance").val("");
                $(".CIEstimatedAmount").val("");
                $(".CIcurrency").val("");
                $(".CIExchangeRate").val("");
                $(".CITotalAmount").val("");
                sumIt()

            }
            else {
                $("#DOMESTIC").hide();
                $("#INTERNATIONAL").hide();


                $("#DomesticCurrency").hide();
                $("#InternationalCurrency").hide();

                $("#DEstimatedAmount").val("");
                $("#Dcurrency option:selected").val("");
                $("#DExchangeRate").val("");
                $("#DTotalAmount").val("");
                $("#IEstimatedAmount").val("");
                $("#Icurrency").val("");
                $("#IExchangeRate").val("");
                $("#ITotalAmount").val("");
                sumIt()
            }



        });


    </script>*@

<script type="text/javascript">
    $(function () {
        debugger;
        $('#myModal').on('show.bs.modal', function (e) {
            var button = $(e.relatedTarget) // Button that triggered the modal
            var ST = button.data('status') // Extract info from data-* attributes data-PK_QTID


            //$(e.currentTarget).find('.modal-title1').text('Change PKId :' + PK);
            //$(e.currentTarget).find('.modal-title').text('Change Status for Service Tag :' + ST);
            $(e.currentTarget).find('#Address').val(ST);
            //$(e.currentTarget).find('.ST').val(ST);
        });
    });
</script>

<script type="text/javascript">
    //$(document).ready(function () {
    function sum() {
        debugger;
        var multipleValues = $("#ProductLists").val() || [];
        var DTotalAmount = 0;
        var ITotalAmount = 0;
        //var EstimatedAmount = parseFloat($('#DEstimatedAmount').val());
        //var ExchangedRate = parseFloat($('#DExchangeRate').val());
        //var IEstimatedAmount = parseFloat($('#IEstimatedAmount').val());
        //var IExchangedRate = parseFloat($('#IExchangeRate').val());

        var EstimatedAmount = isNaN($('#DEstimatedAmount').val()) || $.trim($('#DEstimatedAmount').val()) === "" ? 0 : parseFloat($('#DEstimatedAmount').val());
        var ExchangedRate = isNaN($('#DExchangeRate').val()) || $.trim($('#DExchangeRate').val()) === "" ? 0 : parseFloat($('#DExchangeRate').val());
        var IEstimatedAmount = isNaN($('#IEstimatedAmount').val()) || $.trim($('#IEstimatedAmount').val()) === "" ? 0 : parseFloat($('#IEstimatedAmount').val());
        var IExchangedRate = isNaN($('#IExchangeRate').val()) || $.trim($('#IExchangeRate').val()) === "" ? 0 : parseFloat($('#IExchangeRate').val());

        var p = multipleValues.join(",");

        if (p == '1') {
            ITotalAmount = IEstimatedAmount * IExchangedRate;
            $('#EstimatedAmount').val(ITotalAmount);
            $('#ITotalAmount').val(ITotalAmount);




        }
        if (p == '2') {


            DTotalAmount = EstimatedAmount * ExchangedRate;
            $('#EstimatedAmount').val(DTotalAmount);
            $('#DTotalAmount').val(DTotalAmount);
            //$("#DomesticCurrency").show();
            //$("#InternationalCurrency").hide();
        }
        if (p == '1,2') {

            //DTotalAmount = EstimatedAmount * ExchangedRate;
            //$('#DTotalAmount').val(DTotalAmount);

            //ITotalAmount = IEstimatedAmount * IExchangedRate;
            //$('#ITotalAmount').val(ITotalAmount);
            //var GrandTotal = DTotalAmount + ITotalAmount;



            DTotalAmount = EstimatedAmount * ExchangedRate;
            $('#DTotalAmount').val(DTotalAmount);

            ITotalAmount = IEstimatedAmount * IExchangedRate;
            $('#ITotalAmount').val(ITotalAmount);
            // var GrandTotal = isNaN(DTotalAmount) || $.trim(DTotalAmount) === "" ? 0 : parseFloat(DTotalAmount) + isNaN(ITotalAmount) || $.trim(ITotalAmount) === "" ? 0 : parseFloat(ITotalAmount);
            var GrandTotal = DTotalAmount + ITotalAmount;
            $('#EstimatedAmount').val(GrandTotal);

        }

    };


</script>



<script>
    $("#DEstimatedAmount").on("keyup change", function (e) {
        sum()
    })
</script>
<script>
    $("#IEstimatedAmount").on("keyup change", function (e) {
        sum()
    })
</script>




@*12 Aug start*@



<script type="text/javascript">
    $(".CDExchangeRate").on("keyup change", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox

        if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox

        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }


        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    //$(".CEstimatedAmount").on("keyup change", function (e) {
    $(".COrderRate").on("keyup", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })

    $(".CEstimate_ManDays_ManMonth").on("keyup", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
        if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CEstimatedAmount").val());
        var two = Number(tableRow.find(".COrderRate").val());
        var OrderType = tableRow.find(".COrderType").val();  //get first textbox
        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }

        Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

        sumIt()
    })
</script>

<script type="text/javascript">
    $(".CIExchangeRate").on("keyup change", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox

        if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());
        //var two = Number(tableRow.find(".CIEstimatedAmount").val());

        var two = Number(tableRow.find(".CIOrderRate").val());
        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox

        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIOrderRate").on("keyup change", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox


        if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());



        var two = Number(tableRow.find(".CIOrderRate").val());

        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox


        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })

    $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {

        var a = $(this).val();
        var b = $(this).prev;

        var tableRow = $(this).closest("tr");  //from input find row
        var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox

        if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
            var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());

        var two = Number(tableRow.find(".CIOrderRate").val());
        var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox

        if (OrderType == "LumSum" || OrderType == "Perc") {
            var Total = two * one;
        }
        else {
            var Total = two * one * three;
        }
        Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
        sumIt()
    })
</script>

<script>
    //Domestic amount calculation
    function c() {

        $(".CDExchangeRate").on("keyup change", function (e) {

            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());

            if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());
            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }

    function cc() {

        //$(".CEstimatedAmount").on("keyup change", function (e) {
        $(".COrderRate").on("keyup change", function (e) {

            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());
            if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }

            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }

    function ccc() {

        //$(".CEstimatedAmount").on("keyup change", function (e) {
        $(".CEstimate_ManDays_ManMonth").on("keyup change", function (e) {

            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CDExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".COrderRate").val());

            if (tableRow.find(".CEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".COrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CDTotalAmount").val(Math.round(Total)));

            sumIt()
        })

    }
</script>

<script>
    function CI() {

        $(".CIExchangeRate").on("keyup change", function (e) {

            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());

            if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox

            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }

    function CICI() {

        $(".CIOrderRate").on("keyup change", function (e) {
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());

            if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }

    function CICICI() {
        $(".CIEstimate_ManDays_ManMonth").on("keyup change", function (e) {
            var a = $(this).val();
            var b = $(this).prev;

            var tableRow = $(this).closest("tr");  //from input find row
            var one = Number(tableRow.find(".CIExchangeRate").val());  //get first textbox
            var two = Number(tableRow.find(".CIOrderRate").val());

            if (tableRow.find(".CIEstimate_ManDays_ManMonth").val() != "")
                var three = Number(tableRow.find(".CIEstimate_ManDays_ManMonth").val());

            var OrderType = tableRow.find(".CIOrderType").val();  //get first textbox
            if (OrderType == "LumSum" || OrderType == "Perc") {
                var Total = two * one;
            }
            else {
                var Total = two * one * three;
            }
            Number(tableRow.find(".CITotalAmount").val(Math.round(Total)));
            sumIt()
        })

    }


</script>

<script type="text/javascript">
    //$(document).ready(function () {
    function sumIt() {

        //var Ival = 0, val;
        //var totalnew = 0, val;

        //var Dtotal = 0, val;
        //var Itotal = 0, val;
        //var GTotal = 0, val;

        //var multipleValues = $("#ProductLists").val() || [];
        //var DTotalAmount = 0;
        //var ITotalAmount = 0;

        //var p = multipleValues.join(",");

        //if (p == '1') {//International

        //    $('.CITotalAmount').each(function () {
        //        val = $(this).val();
        //        val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
        //        totalnew += val;
        //    });
        //    $('#EstimatedAmount').val(Math.round(totalnew));


        //    //$("#DomesticCurrency").hide();
        //    //$("#InternationalCurrency").show();


        //}
        //if (p == '2') {//Domestic
        //    $('.CDTotalAmount').each(function () {
        //        val = $(this).val();
        //        val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
        //        totalnew += val;
        //    });



        //    $('#EstimatedAmount').val(Math.round(totalnew));


        //    //$("#DomesticCurrency").show();
        //    //$("#InternationalCurrency").hide();
        //}
        //if (p == '1,2') {


        //    $('.CDTotalAmount').each(function () {
        //        val = $(this).val();
        //        val = isNaN(val) || $.trim(val) === "" ? 0 : parseFloat(val);
        //        Dtotal += val;
        //    });

        //    $('.CITotalAmount').each(function () {

        //        Ival = $(this).val();

        //        Ival = isNaN(Ival) || $.trim(Ival) === "" ? 0 : parseFloat(Ival);
        //        Itotal += Ival;
        //    });

        //    GTotal = Dtotal + Itotal;
        //    $('#EstimatedAmount').val(Math.round(GTotal));
        //    showvalue();
        //}

    };


</script>



<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }


    var ITRowCount = 1;
    $(document).ready(function () {
        $(document).on("click", ".classAddI", function () { //



            var rowCount = $('.data-contact-person').length + 1;


            if ($('#ITestTable tr').length - 1 >= ITRowCount) {
                var count = $('#ITestTable tr').length - 1;
                ITRowCount = count;
            }

            var contactdiv = '<tr class="trInternational">' +
                '<td>' +


            ' <select name="IOrderType"  class="form-control CIOrderType" id="IddlOrderType" onchange="IDropdownChange()"> <option value="">Select</option> <option value="ManDays">Man Day</option> <option value="ManMonth">Man Month</option> <option value="LumSum">Lump Sum</option> <option value="Perc">Percentage</option> <option value="ManHR">Man Hour</option></select>  </td>' +
                '<td><input type="text" style="text-align:center" name="IOrderRate" class="form-control CIOrderRate" onkeyup="CICI()" onkeypress = "return isNumberKey(event);"/></td>' +
                '<td><input type="text" style="text-align:center" name="IEstimate_ManDays_ManMonth"  class="form-control CIEstimate_ManDays_ManMonth" onkeyup="CICICI()" onkeypress = "return isNumberKey(event);" /></td>' +
                '<td><input type="text" style="text-align:center" name="IDistance"  class="form-control CIDistance" onkeypress = "return isNumberKey(event);"/></td>' +
                '<td><select name="Icurrency" style="text-align:center"  class="form-control CIcurrency"> <option value="">--Select Currency--</option> <option value="1">INR</option> <option value="2">EUR</option> <option value="3" selected>USD</option><option value="4">GBP</option><option value="5">LKR</option><option value="6">THB</option></select>  </td>' +
                '<td><input type="text" style="text-align:center" name="IExchangeRate" value="75"  class="form-control CIExchangeRate" onkeyup="CI()" onkeypress = "return isNumberKey(event);" /></td>' +
                '<td><input type="text" style="text-align:center" name="ITotalAmount"  class="form-control CITotalAmount" readonly/></td>' +
                '<td><input type="text" style="text-align:center" name="IRemark"  class="form-control CIRemark" /></td>' +
                '<td><button type="button" style="text-align:center" id="IbtnDelete" class="IdeleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
                '</tr>';

            $('#ITestTable').append(contactdiv); // Adding these controls to Main table class
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('#chkPassport').on('click', function () {
            debugger;
            $("#dvPassport").show();
        });
    });
</script>

<script>
    function validateform() {

        $("#dvPassport").show();
    }
</script>


<script>
    $(document).on("click", ".IdeleteContact", function () {
        ITRowCount = ITRowCount - 1;
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        sumIt()
    });
</script>

<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#ITestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#ITestTable");
    }
</script>

<script type="text/javascript">

    var DTRowCount = 1;

    $(document).ready(function () {

        $(document).on("click", ".classAdd", function () { //


            if ($('#DTestTable tr').length - 1 >= DTRowCount) {
                var count = $('#DTestTable tr').length - 1;
                DTRowCount = count;
            }
            //if (count < 3) {
            DTRowCount += 1;
            var contactdiv = '<tr class="trDomestic">' +
          '<td>' +


      ' <select name="OrderType" style="text-align:center"  class="form-control COrderType" id="ddlOrderType' + DTRowCount + '"  onchange="DDropdownChange()"> <option value="">Select</option> <option value="ManDays">Man Day</option> <option value="ManMonth">Man Month</option> <option value="LumSum">Lump Sum</option><option value="Perc">Percentage</option> <option value="ManHR">Man Hour</option></select>  </td>' +


          '<td><input type="text" style="text-align:center" name="OrderRate" class="form-control COrderRate" onkeyup="cc()" onkeypress = "return isNumberKey(event);" id="IddOrderRate' + DTRowCount + '"/></td>' +
          '<td><input type="text" style="text-align:center" name="Estimate_ManDays_ManMonth"  class="form-control CEstimate_ManDays_ManMonth" onkeypress = "return isNumberKey(event);" onkeyup="ccc()" id="IddEstimate_ManDays_ManMonth' + DTRowCount + '"/></td>' +
          '<td><input type="text" style="text-align:center" name="Distance" onkeypress = "return isNumberKey(event);" class="form-control CDistance" id="IddDistance' + DTRowCount + '"/></td>' +


          '<td><select name="Dcurrency" class="form-control CDcurrency" style="text-align:center" Id="IddDcurrency' + DTRowCount + '"> <option value="">--Select Currency--</option> <option value="1" selected>INR</option> <option value="2">EUR</option> <option value="3">USD</option><option value="4">GBP</option><option value="5">LKR</option><option value="6">THB</option></select>  </td>' +

          '<td><input type="text" style="text-align:center" name="DExchangeRate" onkeypress = "return isNumberKey(event);" value="1" class="form-control CDExchangeRate" onkeyup="c()" Id="IddDExchangeRate' + DTRowCount + '"/></td>' +
          '<td><input type="text" style="text-align:center" name="DTotalAmount" onkeypress = "return isNumberKey(event);" class="form-control CDTotalAmount" id="IddDTotalAmount' + DTRowCount + '" readonly/></td>' +
          '<td><input type="text"  style="text-align:center" name="DRemark"  class="form-control CDRemark" id="IddRemark' + DTRowCount + '" /></td>' +
          '<td><button type="button" style="text-align:center" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs">Remove</button></td>' +
          '</tr>';

            $('#DTestTable').append(contactdiv); // Adding these controls to Main table class


            //}
            //else {
            //    alert("max 3 value");
            //}




            //var rowCount = $('.data-contact-person').length + 1;







        });
    });
</script>

<script>
    $(document).on("click", ".deleteContact", function () {
        $(this).closest("tr").remove(); // closest used to remove the respective 'tr' in which I have my controls
        DTRowCount = DTRowCount - 1;
        sumIt()
    });
</script>


<script type="text/javascript">
    // <![CDATA[
    function addRow() {
        //copy the table row and clear the value of the input, then append the row to the end of the table
        $("#DTestTable tbody tr:first").clone().find("input").each(function () {
            $(this).val('');
        }).end().appendTo("#DTestTable");
    }
</script>


<script>
    $(function () {
        $(".LeadGivenBy").autocomplete({
            source: function (request, response) {
                debugger
                $.ajax({
                    url: '@Url.Action("GetLeadByName", "EnquiryMaster")',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            debugger

                            return { label: item.CompanyName, value: item.CompanyNames };

                        }));
                    },
                    error: function (response) {

                    },
                    failure: function (response) {

                    }
                });
            },
            select: function (e, i) {

            },
            minLength: 2
        });

    });

</script>


<style>
    .ui-widget-header {
        background: #001ED2 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }

    /*-- Delete color-profile --*/
    ul.Attachment {
        padding-left: 0px;
        list-style: none;
        margin-bottom: 0px;
    }

        ul.Attachment > li {
            border: 1px solid #999;
            margin: 7px 5px 0 0;
            display: inline-block;
            padding: 0px 10px;
            background-color: #dfdfdf;
            color: #000;
        }

            ul.Attachment > li a.title {
                color: #000;
                vertical-align: text-bottom;
                text-transform: capitalize;
            }

            ul.Attachment > li a.deleteItem {
                color: white;
                font-size: 10px;
                background: #e91e1e;
                padding: 2px 4px;
                border-radius: 50%;
                vertical-align: text-top;
            }
</style>


@*12 Aug End*@

@*<script>
        $(document).ready(function () {
            debugger;
            function doFunction()
            {
                debugger;
                var CheckListId = $("#CheckListId").val();
                var CheckListDescription = $("#CheckListDescription").val();


                var taskAssignTo = CheckListId;
                var userArray = new Array();
                userArray = taskAssignTo.split(",");
                $("input[id='myCheckbox1']").each(function (index) {

                    var val = $(this).val();
                    alert(val)
                    if (userArray.includes(val)) {
                        $(this).prop('checked', true);
                    }
                });



                //var match = CheckListId.split(',')

                //for (var a in match) {
                //    var variable = match[a]

                //}



            }



            var CheckListId = $("#CheckListId").val();
            var CheckListDescription = $("#CheckListDescription").val();


            var taskAssignTo = CheckListId;
            var userArray = new Array();
            userArray = taskAssignTo.split(",");
            $("input[id='myCheckbox1']").each(function (index) {

                var val = $(this).val();
                alert(val)
                if (userArray.includes(val)) {
                    $(this).prop('checked', true);
                }
            });



        });
    </script>*@


@*<script>
        function doFunction() {
            debugger;
            var CheckListId = $("#CheckListId").val();
            var CheckListDescription = $("#CheckListDescription").val();


            var taskAssignTo = CheckListId;
            var userArray = new Array();
            userArray = taskAssignTo.split(",");
            $("input[id='myCheckbox1']").each(function (index) {

                var val = $(this).val();

                if (userArray.includes(val)) {
                    $(this).prop('checked', true);
                    alert($(this).val());
                }
            });






        }
    </script>*@


<!-- Modal -->
<div class="modal fade bs-example-modal-lg modal fade" id="myModalE" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Enquiry Review List</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">



                    <div class="row">
                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">

                                <ul type="checkbox" id="checkAll" checked disabled>

                                    @foreach (var item in ViewBag.CostSheet as IEnumerable<TuvVision.Models.EnquiryMaster>)
                                    {


                                        @*<li>*@
                                        <p style="margin:0">
                                            @Html.CheckBoxFor(model => model.LCheckList[j].chkbox, new { @placeholder = "Heading", @class = "chkCheckBoxId", id = "myCheckbox1", @value = item.CheckListId, name = "programming", @checked = "checked", disabled = "disabled" })

                                            @item.CheckListName
                                        </p>
                                        @*</li>*@

                                        j++;
                                    }

                                    <p style="margin:0">
                                        @*<input type="checkbox" id="selectAll" onclick="toggleCheckboxes(this)" />
                                            <label for="selectAll">Select All</label>*@

                                        <strong style="font-style:italic;color:red;font-size:14px"> I hereby confirm that I have thoroughly reviewed all the points mentioned above, and my detailed comments are provided below (min 50 alphabets).</strong>


                                    </p>



                                </ul>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-12">
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.CheckListDescription, new { placeholder = "Comment", @class = "form-control form-control-custom", id = "EnqCheckListDescription", @rows = 3 })
                            </div>
                        </div>





                    </div>






                    <div class="row">
                        <div class="col-xs-12 text-center">
                            @*<button type="button" class="btn btn-default insert-form-btn" id="btnEnquiryMasterSave" title="Add New Contact"><i class="fa fa-plus-circle"></i> Save</button>*@
                            <button type="button" class="btn btn-default insert-form-btn" onclick="fncModalSave();" title="Add New Contact"><i class="fa fa-plus-circle"></i> Save</button>

                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>


    </div>
</div>
<!-- Modal -->

<script type="text/javascript">
    $(function () {


        $('#myModalE').on('show.bs.modal', function (e) {
            debugger;
            var button = $(e.relatedTarget)
            var PK = button.data('status1')
            //$(e.currentTarget).find('#EnqCheckListDescription').val(PK);


            if (PK != undefined) {
                $(e.currentTarget).find('#EnqCheckListDescription').val(PK);
            }
            else {

            }

            var CheckListId = $("#CheckListId").val();
            var CheckListDescription = $("#CheckListDescription").val();



            var taskAssignTo = CheckListId;
            var userArray = new Array();
            userArray = taskAssignTo.split(",");

            $('.chkCheckBoxId').each(function (index, obj) {



                var val1 = $(this).val();

                if (userArray.includes(val1)) {

                    var b = $(this).attr('name');

                    var c = $("input[name='" + b + "']").prop('checked', true);
                    $("input[name='" + b + "']").prop('checked', true);








                }
            });

        });



    });
</script>


<script>
    $(document).ready(function () {
        debugger;
        var CheckListId = $("#CheckListId").val();
        var taskAssignTo = CheckListId;
        var userArray = new Array();
        userArray = taskAssignTo.split(",");

        $('.chkCheckBoxId').each(function (index, obj) {



            var val1 = $(this).val();

            if (userArray.includes(val1)) {

                var b = $(this).attr('name');

                var c = $("input[name='" + b + "']").prop('checked', true);
                $("input[name='" + b + "']").prop('checked', true);


            }
        });
    })
</script>

<script>

    function fncModalSave() {
        debugger;

        var link = document.getElementById('btnEnquiryMasterSave');
        link.click();
    }

</script>
<script>
    $('form').on('focus', 'input[type=number]', function (e) {
        $(this).on('wheel.disableScroll', function (e) {
            e.preventDefault()
        })
    })
    $('form').on('blur', 'input[type=number]', function (e) {
        $(this).off('wheel.disableScroll')
    })
</script>


<script>

    $('#HomePhone').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#HomePhone').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });

    $('#Mobile').keypress(function (evt) {
        var maxLength = 15; // as it threat maxlength-5 custom class :)

        // assuming that data-mask will certify that only currency format will be valid
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        if (pureValue.length >= maxLength)
            evt.preventDefault();
    })
    $('#Mobile').keypress(function (e) {
        debugger;
        var maxLength = 15;
        var pureValue = $(this).val().replace('.', '').replace(',', '');

        var regex = new RegExp("^[0-9*#+]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        e.preventDefault();
        return false;
    });


</script>


@*added by nikita on 25062024*@

<script>
    $(document).ready(function () {
        debugger;
        var Quotationviewed = $("#Quotationviewed_").prop("checked");
        var legalReviewChecked = $("#LegalReview_").prop("checked");
        var Budgetray = $("#Budgetary_").prop("checked");
        var ddlSource = $("#ddlSourceType").val();

            if (Quotationviewed) {
                $('[name="FileUpload2"]').addClass('readonly-input');
                $("#txtlegal").addClass('readonly-div');
                //$(".deleteItem").hide(); // Hide the delete links

            }
            else if (ddlSource === "11" && !legalReviewChecked && !Quotationviewed){
                //$("#btnquotation").hide();
            }
            else if (ddlSource === "11" && legalReviewChecked && Quotationviewed){
                //$("#btnquotation").show();
            }
            if(ddlSource!="11")
                {
                    $("#btnquotation").show();
                }



        toggleLegalAttachment();

        $('#ddlSourceType').on("change", function () {
            toggleLegalAttachment();
        });
        function toggleLegalAttachment() {
            var ddlSource = $("#ddlSourceType").val();
            var Roleid = @Session["RoleID"];

            if (ddlSource === "11") {
                $("#txtlegal").show();
                $("#txtattach").show();
                $("#txtcomment").show();
                $("#txtlegalQuotation").show();
                $("#txtlegalreview").show();
                $("#chkbudgetray").hide();

            } else {
                $("#txtlegal").hide();
                $("#txtattach").hide();
                $("#txtcomment").hide();
                $("#txtlegalQuotation").hide();
                $("#txtlegalreview").hide();
                $("#chkbudgetray").show();
            }

            if (Roleid == 60) {
                $("#txtattach").show();
                $("#Legalcomment").removeAttr('readonly');
                $("#Quotationviewed_").removeAttr('disabled');
                $("#LegalReview_").removeAttr('disabled');
            } else {
                $("#txtattach").show();
                $("#Legalcomment").attr('readonly', 'readonly');
                $("#Quotationviewed_").attr('disabled', 'disabled');
                $("#LegalReview_").attr('disabled', 'disabled');
            }
            if (ddlSource === "11"&& Roleid == 60 ){
                $("#btnquotation").hide();
            }
            else{
            }
        }
    });
</script>


<script>
    $(document).ready(function () {

        // Open modal on button click
        $('#btnOpenModal').click(function () {
            $('#CustomerSearch').val("");
            $('#tbldataBody').empty();
            $('#AddCustomerDetails').modal('show');
        });



        $('#btnAddNew').click(function () {

            $('#AddNewCustomerDetails').modal('show');
        });




    // Initialize data
    var allData = [];

    // Function to display data in the table with pagination
    function displayItems(data, page, itemsPerPage) {
        $('#tbldataBody').empty();
        $('#searchBox').empty();
        var start = (page - 1) * itemsPerPage;
        var end = Math.min(start + itemsPerPage, data.length);

        for (var i = start; i < end; i++) {
            var item = data[i];
            var companyCode = item.CompanyCode;
            var customerSearch = item.CustomerSearch;
            var address = item.Address;

            var actionCell = item.New_Cmp === 1
                ? '<td>' +
                    '<a href="#" class="fa fa-pencil" title="Edit" onclick="getCustomerData(\'' + encodeURIComponent(item.CompanyCode) + '\'); return false;"></a> <br />' +
                    '<a href="#" class="fa fa-trash-o" title="Delete" onclick="DeleteCustomer(\'' + encodeURIComponent(item.CompanyCode) + '\'); return false;"></a>' +
                   '</td>'
                : '<td></td>';

            $('#tbldataBody').append(
                '<tr>' +
                actionCell +
                '<td>' + item.CompanyCode + '</td>' +
                '<td><a href="#" class="company-code-link" data-company-code="' + encodeURIComponent(item.CompanyCode) + '" data-customer-search="' + encodeURIComponent(item.CustomerSearch) + '">' + item.CustomerSearch + '</a></td>' +
                '<td>' + item.State + '</td>' +
                '<td>' +
                    '<div class="tooltip-container">' +
                        '<span class="tooltip-icon fa fa-eye"></span>' +
                        '<span class="tooltiptext">' + address + '</span>' +
                    '</div>' +
                '</td>' +
                '<td>' + item.GST_NO + '</td>' +
                '<td>' + item.Pan_No + '</td>' +
                '<td hidden>' + item.New_Cmp + '</td>' +
                '</tr>'
            );
        }
    }

    // Function to create pagination controls
    function createPaginationControls(totalPages) {
        $('#paginationControls').empty();

        for (var page = 1; page <= totalPages; page++) {
            $('#paginationControls').append(
                '<button class="btn btn-default pagination-button" data-page="' + page + '">' + page + '</button>'
            );
        }

        $('.pagination-button').click(function () {
            var page = $(this).data('page');
            var searchQuery = $('#searchBox').val().toLowerCase();
            var filteredData = allData.filter(function (item) {
                return item.CustomerSearch.toLowerCase().includes(searchQuery) ||
                       item.CompanyCode.toLowerCase().includes(searchQuery) ||
                       item.State.toLowerCase().includes(searchQuery) ||
                       item.Address.toLowerCase().includes(searchQuery) ||
                       item.GST_NO.toLowerCase().includes(searchQuery) ||
                       item.Pan_No.toLowerCase().includes(searchQuery);
            });

            var itemsPerPage = 10;
            var totalPages = Math.ceil(filteredData.length / itemsPerPage);
            displayItems(filteredData, page, itemsPerPage);
            createPaginationControls(totalPages);
        });
    }

    // Search button click event
    $('#btnSearchData').click(function () {
        var CompanyName = $('#CustomerSearch').val();

        $.ajax({
            url: '@Url.Action("GetSearchCompanyData", "EnquiryMaster")',
            data: JSON.stringify({ CompanyName: CompanyName }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data === "Failed") {
                    $('#tbldataBody').empty();
                    $('#tbldataBody').append('<tr><td colspan="8">No data found</td></tr>');
                    $('#paginationControls').empty();
                } else {
                    allData = data;
                    var searchQuery = $('#searchBox').val().toLowerCase();
                    var filteredData = allData.filter(function (item) {
                        return item.CustomerSearch.toLowerCase().includes(searchQuery) ||
                               item.CompanyCode.toLowerCase().includes(searchQuery) ||
                               item.State.toLowerCase().includes(searchQuery) ||
                               item.Address.toLowerCase().includes(searchQuery) ||
                               item.GST_NO.toLowerCase().includes(searchQuery) ||
                               item.Pan_No.toLowerCase().includes(searchQuery);
                    });

                    var itemsPerPage = 10;
                    var totalPages = Math.ceil(filteredData.length / itemsPerPage);
                    displayItems(filteredData, 1, itemsPerPage);
                    createPaginationControls(totalPages);
                }
            },
            error: function (xhr, status, error) {
                console.log('Error: ' + error);
            }
        });
    });

    // Real-time search box event
    $('#searchBox').on('input', function () {
        var searchQuery = $(this).val().toLowerCase();
        var filteredData = allData.filter(function (item) {
            return item.CustomerSearch.toLowerCase().includes(searchQuery) ||
                   item.CompanyCode.toLowerCase().includes(searchQuery) ||
                   item.State.toLowerCase().includes(searchQuery) ||
                   item.Address.toLowerCase().includes(searchQuery) ||
                   item.GST_NO.toLowerCase().includes(searchQuery) ||
                   item.Pan_No.toLowerCase().includes(searchQuery);
        });

        var itemsPerPage = 10;
        var totalPages = Math.ceil(filteredData.length / itemsPerPage);
        displayItems(filteredData, 1, itemsPerPage);
        createPaginationControls(totalPages);
    });

    // Handle click event for company code link
    $('#tbldataBody').on('click', '.company-code-link', function (event) {
        event.preventDefault();
        var companyCode = decodeURIComponent($(this).data('company-code'));
        var customerSearch = decodeURIComponent($(this).data('customer-search'));

        handleCompanyCodeClick(companyCode, customerSearch);
    });
});




    function handleCompanyCodeClick(companyCode, companyName) {
        debugger
        // Update the form fields
        $('#CompanyName').val(companyName);
        $('#hfCompanyName').val(companyCode);
        $('#AddCustomerDetails').modal('hide');

        // Perform AJAX request to get additional details if needed
        $.ajax({
            url: '@Url.Action("GetCompanyNameSearch", "EnquiryMaster")',
            data: JSON.stringify({companyCode: companyCode, CompanyName: companyName }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger
                if (data === "Failed") {
                    debugger
                    // Handle failure
                    //$('#CompanyName').val(companyName);
                    alert('Please Contact Tiimes Team.');
                    $('#CompanyName').val("");

                } else {
                    if (Array.isArray(data) && data.length > 0) {
                        // Display company name and ID
                        var company = data[0];
                        //var CMP_ID=data[1];
                        //$('#CompanyName').val(company.Company_Name);
                        $('#CMP_ID').val(company.CMP_ID);
                        $('#CompanyName').val(company.Company_Name + ' (' + company.CMP_ID + ')');
                        //$('#ddlContactType').attr('disabled', true);
                         $('#ddlContactType').html(''); // Clear existing options
                        $('#ddlContactType').attr('disabled', false);
                        $('#lnkNewCOntact').show();
                        onContactTypeChange();
                    } else {
                        alert('Please Contact Tiimes Team.');
                        $('#CompanyName').val("");

                    }
                }
            },
            error: function (xhr, status, error) {
                console.log('Error: ' + error);
            }
        });
    }



</script>


<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetIndustries", "EnquiryMaster")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var $dropdown = $('#ddlIndustry');
                $dropdown.empty();
                $dropdown.append('<option value="">---Select Industry---</option>');
                $.each(data, function (index, item) {
                    $dropdown.append($('<option/>', {
                        value: item.Code,
                        text: item.Name
                    }));
                });
            },
            error: function (xhr, status, error) {
                console.error("Error fetching industries: ", status, error);
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $("#btnSaveCompany").on('click', function () {
            debugger
            var i = 1;
            var CMP_ID = $("#newCompanyName").val();
            var New_Cmp = i;
            //var varI = $('#IL').val();
            var CompanyName = $("#Company_Name").val();
            var Address = $("#Address").val();
            //var OfficePin = $("#OffAddrPin").val();
            //var PanNo = $("#Pan_No").val();
            //var IndustryType = $("#ddlIndustry option:selected").val();


            //**************************************************************************
            //if ($("#Company_Name").val() == "" || $("#Company_Name").val() == null) {
            //    alert("Please Enter Company Name!!!");
            //    $("#Company_Name").focus()
            //    return false;
            //}

            //else if (PanNo == "" || PanNo == null) {
            //    alert("Enter Designation !!!");
            //    $("#idTitleName").focus()
            //    return false;
            //}
            //else {
            var CustomerDetails =
                {
                    //InspectionLocation: varI,
                    Company_Name: CompanyName,
                    Address: Address,
                    //OffAddrPin: OfficePin,
                    //Pan_No: PanNo,
                    //Ind_ID: IndustryType,
                    CMP_ID: CMP_ID,
                    New_Cmp: New_Cmp

                }
            $.ajax({
                type: 'POST',
                data: JSON.stringify({ CM: CustomerDetails }),
                url: '@Url.Action("CreateCompany", "EnquiryMaster")',
                dataType: 'json',
                Async: false,
                enctype: "multipart/form-data",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    debugger

                    if (response.success == 1) {

                        alert("Company Saved Successfully!!!")
                        $('#AddNewCustomerDetails').modal('hide');
                        $("#modalCloseButton").click();
                        GetCompanyName($("#Company_Name").val());


                        //reloadTable();

                    }
                    else if (response.success == 2) {
                        alert("Company Update Successfully!!!")
                        $('#AddNewCustomerDetails').modal('hide');
                        $("#btnSearchData").trigger("click");
                        //alert("Something Went Wrong!!! Please Try Again....")


                    }

                    else if (response.success == 3) {
                        //alert("Company Update Successfully!!!")
                        //$('#AddNewCustomerDetails').modal('hide');
                        alert("Something Went Wrong!!! Please Try Again....")


                    }


                }
            });
            // }
        });
    });
</script>

<script>
    function DeleteCustomer(CMP_Id) {
        debugger
        var CompanyID = CMP_Id;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteCompany", "EnquiryMaster")',
            data: JSON.stringify({ CompanyID: CompanyID }),
            dataType: 'json',
            Async: false,
            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                if (response.success == 1) {

                    alert("Company Delete Successfully!!!")
                    //$('#AddNewCustomerDetails').modal('hide');
                    //reloadTable();
                    // location.reload();
                    $("#btnSearchData").trigger("click");


                }
                else if (response.success == 2) {

                    alert("Something Went Wrong!!! Please Try Again....")


                }


            }
        });
    }

</script>




<script>
    function getCustomerData(CMP_Id) {
        debugger
        var CompanyID = CMP_Id;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("getCompanyData", "EnquiryMaster")',
            data: JSON.stringify({ CompanyID: CompanyID }),
            dataType: 'json',
            async: false,
            enctype: "multipart/form-data",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                debugger
                if (response === "Failed") {
                    alert("Failed to retrieve data.");
                } else {

                    var data = response[0];
                    $('#AddNewCustomerDetails').modal('show');


                    $('#Company_Name').val(data.Company_Name);
                    $('#IL').val(data.InspectionLocation);
                    $('#Address').val(data.Address);
                    $('#OffAddrPin').val(data.OffAddrPin);
                    $('#Pan_No').val(data.Pan_No);


                    $('#ddlIndustry').val(data.Ind_ID);


                    $('#CMP_ID').val(data.CMP_ID);
                    $('#newCompanyName').val(data.CMP_ID);
                }
            },
            error: function (xhr, status, error) {
                alert("An error occurred while processing your request.");
            }
        });
    }




</script>


<script type="text/javascript">

    function toggleCheckboxes(source) {
        var checkboxes = document.querySelectorAll('.chkCheckBoxId');
        checkboxes.forEach(function(checkbox) {
            checkbox.checked = source.checked;
        });
    }
</script>
<script>
    function GetCompanyName(CompanyName) {
        debugger
        $.ajax({
            url: '@Url.Action("GetSearchCompanyName", "EnquiryMaster")',
            data: JSON.stringify({ CompanyName: CompanyName }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger
                var CompanyName = data[0].CompanyName;
                var CMP_Id = data[0].CMP_ID

                // alert(CompanyName);
                //alert(CMP_Id);
                $('#CompanyName').val(CompanyName);
                $('#hfCompanyName').val(CMP_Id);
                $('#CMP_ID').val(CMP_Id);


                $('#Company_Name').val('');
                $('#Address').val('');
            }

        })

    }
</script>

<script>
    function checkDateConstraints(fromDate, toDate, errorMessage) {
        var fromDateParts = fromDate.split('/');
        var toDateParts = toDate.split('/');


        var fromDateObj = new Date(fromDateParts[2], fromDateParts[1] - 1, fromDateParts[0]);
        var toDateObj = new Date(toDateParts[2], toDateParts[1] - 1, toDateParts[0]);


        if (fromDateObj > toDateObj) {
            alert(errorMessage);
            return 1;
        } else {
            return 0;
        }
    }

    $('#EstClose').change(function () {
        var CallRefDate = $('#RefDate').val();
        var CallClose = $(this).val();


        var a = checkDateConstraints(CallRefDate, CallClose, "Estimated closure date cannot be Smaller than Enquiry Receipt date.");
        if (a == 1) {
            $(this).val("");
        }
    });

</script>

<script>
    $(document).ready(function() {
        // Check if the EstimatedAmount input already has a value on page load
        var initialAmount = $('#EstimatedAmount').val();
        if (initialAmount && !isNaN(initialAmount) && initialAmount > 0) {
            var amountInWords = convertNumberToWords(initialAmount);
            $('#amountInWords').text(amountInWords + ' Rupees');
        }

        // When the value of the input field changes
        $('#EstimatedAmount').on('input', function() {
            var amount = $(this).val();

            // Convert the number to words
            var amountInWords = convertNumberToWords(amount);

            // Show the number in words below the input field
            if (amount && !isNaN(amount) && amount > 0) {
                $('#amountInWords').text(amountInWords + ' Rupees');
            } else {
                $('#amountInWords').text('');
            }
        });

        // Function to convert a number into words
        function convertNumberToWords(number) {
            var ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
            var tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];
            var scales = ['', 'Thousand', 'Lakh', 'Crore'];

            if (number == 0) return 'Zero';

            if (isNaN(number)) return '';  // Return empty string for invalid numbers

            var word = '';
            var crore = Math.floor(number / 10000000);
            number %= 10000000;
            var lakh = Math.floor(number / 100000);
            number %= 100000;
            var thousand = Math.floor(number / 1000);
            number %= 1000;
            var hundred = Math.floor(number / 100);
            number %= 100;

            if (crore > 0) {
                word += convertNumberToWords(crore) + ' Crore ';
            }

            if (lakh > 0) {
                word += convertNumberToWords(lakh) + ' Lakh ';
            }

            if (thousand > 0) {
                word += convertNumberToWords(thousand) + ' Thousand ';
            }

            if (hundred > 0) {
                word += convertNumberToWords(hundred) + ' Hundred ';
            }

            if (number > 0) {
                if (number < 20) {
                    word += ones[number];
                } else {
                    word += tens[Math.floor(number / 10)];
                    if (number % 10 > 0) {
                        word += ' ' + ones[number % 10];
                    }
                }
            }

            return word.trim();
        }
    });

</script>

<script>
    $(document).ready(function () {
        debugger
        $('#ConflictJobValue').hide();
        $('#ButtonClickconfict').click(function () {
            $('#ConflictJobValue').toggle();
        })
    })
</script>


<script type="text/javascript">

    function toggleCheckboxes(source) {
        var checkboxes = document.querySelectorAll('.chkCheckBoxId');
        checkboxes.forEach(function(checkbox) {
            checkbox.checked = source.checked;
        });
    }
</script>

<script>
    function showvalue(){
        var initialAmount = $('#EstimatedAmount').val();
        if (initialAmount && !isNaN(initialAmount) && initialAmount > 0) {
            var amountInWords = convertNumberToWords(initialAmount);
            $('#amountInWords').text(amountInWords + ' Rupees');
        }
    }
</script>


<script>
    $(document).ready(function () {
        GetEnqiry();
        showButton();
        GetBudgetaryEnqiry();



        function GetEnqiry() {
            var CompanyName=$('#CompanyName').val();
            var EQ_Id= $('#EQ_ID').val();
            var CMP_id=$('#CMP_ID').val();
            debugger
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetEnquiry", "EnquiryMaster")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                data: JSON.stringify({ CompanyName: CompanyName,EQ_Id:EQ_Id,CMP_id:CMP_id }),
                success: function (response) {
                    debugger
                    var a = JSON.parse(response);
                    if (a.length === 0) {
                        $('#EnquiryData').hide();
                        //$('#tbl tbody').append('<tr><td colspan="4" style="text-align: center;">No records available</td></tr>');
                        $('#btnquotation').show();
                    } else {
                        $('#EnquiryData').show();
                        for (var i = 0; i < a.length; i++) {
                            var tr = $('<tr/>');
                            // tr.append("<td style='background-color: white;'><label>" + a[i].EnquiryNumber + "</label></td>");
                            // Assuming a is an array of objects and you are dynamically building the table rows
                            tr.append("<td style='background-color:white;'><label><a href='/EnquiryMaster/Enquiry?EQ_ID=" + a[i].EQ_ID + "' target='_blank'>" + a[i].EnquiryNumber + "</a></label></td>");
                            tr.append("<td style='background-color: white;'><label>" + a[i].CreatedName + "</label></td>");
                            tr.append("<td style='background-color: white;'><label>" + a[i].MobileNo + "</label></td>");
                            tr.append("<td class='td' style='background-color: white;'>" + a[i].CreatedDate + "</td>");
                            tr.append("<td class='td' style='background-color: white;'>" + a[i].CompanyName + "</td>");
                            tr.append("<td class='td' style='background-color: white;'>" + a[i].Branch_Name + "</td>");
                            //tr.append("<td class='td'>" + a[i].Remarks + "</td>");

                            tr.append(`
                    `);
                            $('#tbl').append(tr);
                        }
                        if($('input[name="ENQDuplicate"]:checked').val()=== undefined){
                            $('#btnquotation').hide();
                            alert(" This is Duplicate Entry of this Enquiry. Kindly Visit Bottom Section Of Page and Give Declaration To Generate Quotation!")
                        }

                        $('#btnquotation').hide();
                    }

                },
                error: function (xhr, status, error) {
                    //alert("An error occurred while fetching concerns.");
                    $('#EnquiryData').hide();
                }
            });
        };


        @*function showButton(){
            var ENQDublicate = $('input[name="ENQDuplicate"]:checked').val();
            debugger

            var getvalue=@Html.Raw(Json.Encode(Model.ENQDuplicate));

            if(getvalue==""){
                $('#btnquotation').hide();
            }


            else if(ENQDublicate =="YES"){

                $('#btnquotation').hide();
            }
            else if(ENQDublicate =="NO"){
                $('#btnquotation').show();
            }

        }*@
        function showButton(){
            debugger;
            var ENQDublicate = $('input[name="ENQDuplicate"]:checked').val();

      

            if(ENQDublicate == "YES"){
                $('#btnquotation').hide();
            }
            else if(ENQDublicate == "NO"){
                $('#btnquotation').show();
            }
        }

    })
</script>


<script>
    function GetBudgetaryEnqiry() {
        var CompanyName=$('#CompanyName').val();
        var EQ_Id= $('#EQ_ID').val();
        var CMP_id=$('#CMP_ID').val();
        debugger
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetBudgetaryEnqiry", "EnquiryMaster")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            data: JSON.stringify({ CompanyName: CompanyName,EQ_Id:EQ_Id,CMP_id:CMP_id }),
            success: function (response) {
                debugger
                var a = JSON.parse(response);

                console.log("Parsed Result:", a);
                if (a.length === 0) {
                    $('#EnquiryBudgetaryData').hide();
                    //$('#tbl tbody').append('<tr><td colspan="4" style="text-align: center;">No records available</td></tr>');
                    $('#btnquotation').show();
                } else {
                    $('#EnquiryBudgetaryData').show();


                    for (var i = 0; i < a.length; i++) {
                        var tr = $('<tr/>');
                        // tr.append("<td style='background-color: white;'><label>" + a[i].EnquiryNumber + "</label></td>");
                        // Assuming a is an array of objects and you are dynamically building the table rows
                        var isChecked = a[i].CarryForwardBudget === 1 ? "checked" : "";
                        tr.append("<td><input type='checkbox' class='enquiry-checkbox' value='" + a[i].PK_QTID + "' " + isChecked + " /></td>");
                        tr.append("<td style='background-color:white;'><label><a href='/EnquiryMaster/Enquiry?EQ_ID=" + a[i].PK_QTID + "' target='_blank'>" + a[i].QuotationNumber + "</a></label></td>");
                        tr.append("<td style='background-color: white;'><label>" + a[i].companyname + "</label></td>");
                        tr.append("<td style='background-color: white;'><label>" + a[i].Createdby + "</label></td>");
                        tr.append("<td class='td' style='background-color: white;'>" + a[i].Branch_Name + "</td>");
                        tr.append("<td class='td' style='background-color: white;'>" + a[i].EstimatedAmount + "</td>");
                        tr.append("<td class='td' style='background-color: white;'>" + a[i].QTStatus + "</td>");

                        tr.append(`
                    `);
                        $('#tbl1').append(tr);
                    }


                    $('#btnquotation').hide();
                }

            },
            error: function (xhr, status, error) {
                //alert("An error occurred while fetching concerns.");
                $('#EnquiryBudgetaryData').hide();
            }
        });
    };
</script>


<div class="modal fade bs-example-modal-lg" id="AddNewCity" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center" style="background-color: #001ED2;color: #fff;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel"> Add New City</h4>
            </div>
            <div class="modal-body">
                <div class="form-box" style="padding-bottom:0!important;">
                    <div class="row">
                        <div class="row">
                            <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                <div class="form-box">
                                    <form>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12">
                                                <div class="form-group">
                                                    <span style="color:#E12F24;">
                                                        <strong>Notes </strong> :
                                                    </span> 1) <span style="color:#ff0000;">*</span> - Mandatory.<br />

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12">
                                                <hr class="custom-hr1">
                                            </div>
                                        </div>
                                        <div class="row">

                                            <div class="col-xs-12 col-sm-8">
                                                <div class="form-group">
                                                    <label>City Name: <span style="color:#ff0000;">*</span></label>
                                                    @Html.TextBoxFor(model => model.CityName, new { @placeholder = "Enter City Name", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger validation-msg" })
                                                    <p id="Status" />
                                                </div>
                                            </div>


                                        </div>


                                        <div class="col-xs-12 text-center">


                                            <button type="button" class="btn btn-default insert-form-btn" id="btnSaveCity"> Save City</button>


                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding: 10px 15px;">
                <button type="button" class="btn btn-default news-btn" data-dismiss="modal" id="btnCloseModal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#btnSaveCity').click(function () {
            debugger
            var CityName = $('#CityName').val();

            if (CityName == null || CityName == "") {
                alert("Please Enter City Name !")
                return false;
            }
            $.ajax({
                url: '@Url.Action("AddCityDetails", "QuotationMaster")',
                type: 'POST',
                data: { CityName: CityName },
                type: "POST",
                dataType: "json",
                success: function (response) {
                    if (response.success == 1) {
                        alert('City Name Aadded successfully.');
                        $('#btnCloseModal').click();

                        fetchAndBindCityList();
                        // window.location = response.url;
                        //location.reload();
                    }
                    else if (response.success == 2) {

                        alert("Duplicate City Name Or !!Failed!!! Something Went Wrong!!! Please Try Again....")

                        $('#btnCloseModal').click();
                        fetchAndBindCityList();
                        //location.reload();

                            }

                    s
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('Error: ' + error);
                }
            })

        })


        function initializeMultiselect() {
            $('#CityNameList').multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select All',
                enableFiltering: true,
                enableCaseInsensitiveFiltering: true,
                maxHeight: 300
            });
        }

        function fetchAndBindCityList() {
            $.ajax({
                url: '@Url.Action("GetCityListValue", "QuotationMaster")',
                type: 'GET',
                dataType: "json",
                success: function (data) {

                    $('#CityNameList').empty();


                    $.each(data, function (index, city) {
                        $('#CityNameList').append(new Option(city.CityName, city.PK_ID));
                    });
                    $('#CityNameList').multiselect('destroy');

                    initializeMultiselect();
                    $('#btnCloseModal').click();


                },
                error: function (xhr, status, error) {
                    console.error('Error fetching city list:', error);
                    alert('Error fetching city list: ' + error);
                }
            });
        }
    })

    $(".RefDate").datepicker({
        dateFormat: 'dd/mm/yy',
        changeMonth: true,
        changeYear: true,
        yearRange: "-100:+50",
        minDate: "-15d",
        maxDate: "0",
        onSelect: function (selectedDate) {
            var refDate = $(this).datepicker('getDate');
            var maxClosureDate = new Date(refDate);
            maxClosureDate.setDate(refDate.getDate() + 90);
            var dd = String(maxClosureDate.getDate()).padStart(2, '0');
            var mm = String(maxClosureDate.getMonth() + 1).padStart(2, '0');
            var yyyy = maxClosureDate.getFullYear();
            var maxDateStr = dd + '/' + mm + '/' + yyyy;
            $("#EstClose").datepicker("option", "minDate", refDate);
            $("#EstClose").datepicker("option", "maxDate", maxDateStr);
        }
    });


    $(".estimatedclosedate").datepicker({
        dateFormat: 'dd/mm/yy',
        changeMonth: true,
        changeYear: true,
        yearRange: "-100:+50",
        minDate: 0,
        maxDate: "+90d"
    });



</script>