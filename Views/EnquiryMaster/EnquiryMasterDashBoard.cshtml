@model TuvVision.Models.EnquiryMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;



@{
    ViewBag.Title = "EnquiryMasterDashBoard";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

@helper CustomRenderingOfColumn(TuvVision.Models.EnquiryMaster EnquiryMaster)
{
if (EnquiryMaster.RegretStatus != null && EnquiryMaster.RegretStatus != "")
{
        <span style='font-size:12px!important;color:red;background-color:yellow;font-weight:bold;'>@EnquiryMaster.EnquiryNumber</span>
}
else
{
        <span style='font-size:12px!important;'>@EnquiryMaster.EnquiryNumber</span>
}
}
@helper CustomRenderingOfColumn1(TuvVision.Models.EnquiryMaster EnquiryMaster)
{
if (EnquiryMaster.RegretStatus != null && EnquiryMaster.RegretStatus != "")
{
        <span style='color:red;background-color:yellow;font-weight:bold;'>@EnquiryMaster.RegretStatus</span>
        @*<span style='color:red;background-color:yellow;font-weight:bold;'>@EnquiryMaster.RegretReason</span>*@
}
else
{
        <span style='font-size:12px!important;'>@EnquiryMaster.RegretStatus</span>
        @*<span style='font-size:12px!important;'>@EnquiryMaster.RegretReason</span>*@
}
}






@*Manoj Scripts here for datatable starts here*@
@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/css/jquery.dataTables.css"></script>

    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
    <script src="~/AllJsAndCss/js/datatable-custom2.js"></script>*@
@*Ashwini Scripts here for datatable ends here*@

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />





@*<style>
    .mvc-grid th {
        background-clip: padding-box;
        position: relative;
        background-color: #001ED2;
        color: #fff;
    }
    tr.mvc-grid-headers > th {
        word-break: normal !important;
    }
    .mvc-grid-title {
        display: inline-block;
        font-size: 12px;
        font-weight: 600;
    }
    table.dataTable tbody tr:nth-of-type(n) {
        background-color:#ececec;
    }
    table.dataTable tbody tr:nth-of-type(2n+1) {
        background-color: #ffffff;
    }
    button.mvc-grid-sort {
        font-size: 13px;
    }
    th.asc > button {
        font-size: 13px;
    }
    .mvc-grid-sort::before, .mvc-grid-sort::after {
            opacity:inherit;
    }
    .mvc-grid.mvc-grid-row-mode > table > tbody > tr > td {
        font-family: mont-med, helvetica, arial, sans-serif;
        font-size: 12px;
        line-height: 1.3;
    }
    table#gridMapping {
        overflow: auto;
        display: block;
    }
        </style>*@





@using (Html.BeginForm())
{
   <!--Start of header-->
    <!--Start of main content 3-->
    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">EnquiryMasterDashBoard</h3>
                    <a href="@Url.Action("Enquiry","EnquiryMaster")" class="btn btn-info dynamic-function-btn dynamic-function-btn-2 mr-1"><i class="fa fa-plus-circle"></i> Add New Enquiry</a>
                    <button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2 " style='margin-right:16px' onclick="location.href='@Url.Action("ExportIndex","EnquiryMaster")'">
                        Export To Excel
                    </button>
                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->

            <div class="col-xs-12">
                <!--
                    @*<table id="example" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th class="remove-search less-width">Action</th>
                                <th>Enquiry Number</th>
                                <th>Enquiry Description</th>
                                <th>Company Name</th>
                                <th>Branch</th>
                                <th>Date Opened</th>

                                <th>Owner</th>
                                <th>Service Type</th>
                                <th>Project Type</th>
                                <th>Regret Status</th>
                                <th>Regret Reason</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                            }
                            @foreach (var item in ViewData["EnquiryMaster"] as IEnumerable<TuvVision.Models.EnquiryMaster>)
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Enquiry", "EnquiryMaster", new {@EQ_ID = item.EQ_ID })" title="Edit"><span class="fa fa-pencil"></span>&nbsp;</a>
                                        <a href="@Url.Action("DeleteEnquiry", "EnquiryMaster", new {@EQ_ID = item.EQ_ID })" onclick="return confirm('Are you sure you want to Delete this Record?')" title="Delete"><span class="fa fa-trash-o"></span>&nbsp;</a>
                                        @{
                                            if ((Convert.ToString(TempData["DeletedEnquiry"])) != "" && Convert.ToString(TempData["DeletedEnquiry"]) != null)
                                            {
                                                TempData["DeletedEnquiry"] = null;
                                                <script type="text/javascript" language="javascript">
                                                    alert("Enquiry Data Deleted Successfully!!!");
                                                </script>
                                            }
                                        }

                                    </td>
                                    @if (item.RegretStatus != null && item.RegretStatus != "")
                                    {
                                        <td style="font-size:12px!important;color:red;background-color:yellow;font-weight:bold;">@item.EnquiryNumber</td>
                                    }
                                    else
                                    {
                                        <td style="font-size:12px!important;">@item.EnquiryNumber</td>
                                    }
                                    <td style="font-size:12px!important;">@item.EnquiryDescription</td>
                                    <td style="font-size:12px!important;">@item.CompanyName</td>
                                    <td>@item.Branch</td>
                                    <td>@item.CreatedDate</td>

                                    <td>@item.Branch</td>
                                    <td>@item.Type</td>
                                    <td>@item.ProjectType</td>
                                    @if (item.RegretStatus != null && item.RegretStatus != "")
                                    {
                                        <td style="color:red;background-color:yellow;font-weight:bold;">@item.RegretStatus</td>
                                        <td style="color:red;background-color:yellow;font-weight:bold;">@item.RegretReason</td>
                                    }
                                    else
                                    {
                                        <td>@item.RegretStatus</td>
                                        <td>@item.RegretReason</td>
                                    }


                                </tr>
                                            }
                        </tbody>
                    </table>*@
                    -->



                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lstEnquiryMast)
                            .Build(columns =>
                            {
                                //grid.Column(columnName: "Date", format: (item) => Html.ActionLink(((string)item.Date), "Edit", new { id = item.id })),
                                //columns.Template(c => @Html.ActionLink("Map", "TestMap", new { id = c.Id, }));
                                //columns.(p => p.EQ_ID).ClientTemplate("<a href='" + @Url.Action("Index", "Invoice", new { id = "#=Id#" }) + "' class='btn btn-primary'><i class='fa fa-eye'></i>  View</a>").Width(90);
                                //< a href = "@Url.Action("Enquiry", "EnquiryMaster", new {@EQ_ID = item.EQ_ID })" title = "Edit" >< span class="fa fa-pencil"></span>&nbsp;</a>

                                columns.Add().Titled("OPEN/EDIT").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Enquiry", new { EQ_ID = o.EQ_ID }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "DeleteEnquiry", new { EQ_ID = o.EQ_ID }, new { @class = "fa fa-trash-o", title = "Delete" }));

                                columns.Add(c => c.EnquiryNumber).Titled("Enquiry Number");
                                columns.Add(c => c.EnquiryDescription).Titled("Project Name");
                                columns.Add(c => c.Company_Name).Titled("Customer Name");
                                columns.Add(c => c.ProjectType).Titled("OBS Type");
                                columns.Add(c => c.PortfolioType).Titled("Service Portfolio Type");
                                columns.Add(c => c.SubServiceType).Titled("Service Type");
                                columns.Add(c => c.Branch).Titled("Originating Branch");
                                columns.Add(c => c.CreatedDate.ToString("dd/MM/yyyy")).Titled("Enquiry Creation Date").Filterable(true).Sortable(true);
                                columns.Add(c => c.Owner).Titled("Created By");


                                //columns.Add(c => c.RegretReason).Titled("Regret Reason");
                                //columns.Add(c => c.RegretStatus).Titled("Regret Status");
                                columns.Add(c => c.RegretStatus).Titled("Status").RenderedAs(c => CustomRenderingOfColumn1(c)).Sortable(true).Filterable(true);
                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()
                            //.Css("css-classes") // Overwrites all classes with the new ones
                            //.AppendCss("display") // Appends classes to the current ones
                            )


                        </td>
                    </tr>
                </table>


            </div><!-- /.data table col -->

        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
  <!--End of main content 3-->
}

<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>

<script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>

