@model TuvVision.Models.TravelExpense
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "OPEVoucherStatus";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}





<link rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css">
<!-- Include the DataTables JavaScript -->
<script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<!-- Include the jQuery UI library -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>








<link href="~/alljsandcss/css/mvcgridn.css" rel="stylesheet" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />




@helper CustomRenderingOfColumnExpense(TuvVision.Models.TravelExpense callmodel)
{
    <button id="btnAddExpenses_@callmodel.VoucherNo" class="btn btn-info btn-xs" type="button" onclick='BindDescription("@callmodel.VoucherNo")'><i class="fas fa-info-circle" aria-hidden="true"></i></button>
}



@using (Html.BeginForm("OPEVoucherStatus", "MISOPEReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="container-fluid">

                <div class="row assignfixedwidth rp-15">

                    <div class="col-xs-12">
                        <h3 class="dynamic-page-title dynamic-page-title-2  text-left">OPE Voucher(s) Status</h3>

                        @*<button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","Calender")'" style="border:none;">
                                Export To Excel
                            </button>*@
                    </div><!-- /.col -->
                    @*<div class="col-xs-12">
                            <hr class="custom-hr">
                        </div>*@<!-- /.col -->
                    <!--Table was here-->

                </div>

                <div class="row">
                    <div class="col-xs-4">
                        <div class="form-group">
                            <label>From Date:</label>
                            @Html.TextBoxFor(model => model.Fromdate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                        </div>
                    </div>


                    <div class="col-xs-4">
                        <div class="form-group">
                            <label>To Date:</label>
                            @Html.TextBoxFor(model => model.Todate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                        </div>

                    </div>
                    <div class="col-xs-2">
                        <div class="form-group">
                            <label>Voucher No:</label>
                            @Html.TextBoxFor(model => model.VoucherNo, htmlAttributes: new { placeholder = "Enter voucher No", @class = "form-control", autocomplete = "off" })
                        </div>

                    </div>

                    <div class="col-xs-2">
                        <div class="form-group">
                            <label>Search:</label>
                            <input type="submit" value="Search" class="btn btn-primary form-control" />
                        </div>

                    </div>


                    <table class="display dataTable no-footer" style="overflow-y:auto;padding-left:6px;" id="gridMapping">
                        <tr>
                            <td>
                                @(Html
                            .Grid(Model.lstTravelExpense)
                            .Build(columns =>
                            {


                                columns.Add(c => c.VoucherNo).Titled("VoucherNo");
                                columns.Add(c => c.Month).Titled("Month");
                                columns.Add(c => c.EmployeeName).Titled("Inspector Name");
                                columns.Add(c => c.EmployeeCode).Titled("Employee Code");
                                //columns.Add(c => c.EmployeementCategoray).Titled("Employeement Category");
                                columns.Add(c => c.Days).Titled("Days present");
                                columns.Add(c => c.TotalAmount).Titled("Total Amount");
                                columns.Add(c => c.ApprovedAmount).Titled("Approved Amount");
                                columns.Add(c => c.Description)
                                    .Titled("Previous Remarks")
                                    .RenderedAs(c => CustomRenderingOfColumnExpense(c))
                                    .Sortable(true);
                                columns.Add(c => c.status).Titled("Current status");

                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No Data Found")
                            .Filterable()
                            .Sortable()
                                )
                            </td>
                        </tr>
                    </table>


                </div>



            </div>



        </div>

    </div>
}

<div class="modal fade" id="remarksModal" tabindex="-1" role="dialog" aria-labelledby="remarksModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content mvc-grid-modal">
            <div class="modal-header mvc-grid-modal-header">
                <h5 class="modal-title" id="remarksModalLabel">Modal Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body mvc-grid-modal-body">
                <!-- Table to display remarks -->
                <div class="table mvc-grid-table">
                    <table class="table table-condensed table-responsive" id="tblusersmodal">
                        <thead class="mvc-grid-table-header">
                            <tr class="mvc-grid-table-row">
                                <th scope="col" class="mvc-grid-table-header-cell">Date</th>
                                <th scope="col" class="mvc-grid-table-header-cell">Approval Stage</th>
                                <th scope="col" class="mvc-grid-table-header-cell">Approver Name</th>
                                <th scope="col" class="mvc-grid-table-header-cell">Remarks</th>
                                <th scope="col" class="mvc-grid-table-header-cell">Approved Amount (INR)</th>
                            </tr>
                        </thead>
                        <tbody class="mvc-grid-table-body" id="tblusers">
                            <!-- Table body content -->
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer mvc-grid-modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>





           function BindDescription(opnumber) {
            debugger;
            var VoucherNo = opnumber;

            $.ajax({
                ////url: UrlLink + "/GenerateVoucher/Voucher_History_Description",
                url: "@Url.Action("Op_Voucher_History_Description", "MISOPEReport")",
                type: "get",
                DataType: "json",
                async: false,
                contenttype: "application/json; charset=utf-8",
                data: { VoucherNo: VoucherNo },
                success: function (result) {
                    debugger;
                    var a = JSON.parse(result);
                    $("#tblusers tbody").empty();
                    let date = [a[0].Date, a[0].ApprovalOne_two_Date, a[0].PCH_Approval_Date, a[0].AdminQA_Approval_Date, a[0].CH_Approval_Date, a[0].Accountant_date];
                    //added by nikita on 27122023
                    let DeductMandays = [a[0].DeductMandays_BranchQA, a[0].DeductMandays_ApprovalOne_Two, a[0].DeductMandays_Pch, a[0].DeductMandays_Admin, a[0].DeductMandays_Ch, a[0].DeductMandays_Accounatantt];
                    let Name_ = [a[0].BranchQAApproval, a[0].Name, a[0].PCH_Name, a[0].AdminQA_Approval, a[0].CH_Approval, a[0].Account_Approval];

                    var Data = ["BranchQA", "ApprovalOne/ApprovalTwo", "PCH", "AdminQA", "ClusterHead", "Accountant"];
                    let k = 0;
                    var myArray = [];
                    for (var i = 0; i < a.length; i++) {
                        if (!!a[i].Branch_QA_Description) {
                            myArray.push(a[i].Branch_QA_Description);
                            k++;
                        }
                        if (!!a[i].ApprovalOne_Description) {
                            myArray.push(a[i].ApprovalOne_Description);
                            k++;
                        }
                        if (!!a[i].PCH_Approval_Description) {
                            myArray.push(a[i].PCH_Approval_Description);
                            k++;

                        }
                        if (!!a[i].AdminQA_Description) {
                            myArray.push(a[i].AdminQA_Description);
                            k++;
                        }
                        if (!!a[i].CH_Approval_Description) {
                            myArray.push(a[i].CH_Approval_Description);
                            k++;

                        }
                        if (!!a[i].Accountant_Description) {
                            myArray.push(a[i].Accountant_Description);
                            k++;
                        }


                        for (var j = 0; j < myArray.length; j++) {
                            //const approvalName = Name[j] == undefined ? "-" : Name[j];
                            // changes added by nikita on 22112023
                            $("#tblusers").append('<tr><td>' + date[j] + '</td><td>' + Data[j] + '</td><td>' + Name_[j] + '</td><td>' + myArray[j] + '</td><td>' + DeductMandays[j] + '</td></tr>')
                        }

                    }
                    $('#remarksModal').modal('show');
                },
                error: function (result) {
                    debugger;
                    (result + "something went wrong");
                }
            });
        }
    </script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSearch").click(function myfunction() {
            debugger;
            if (ValidateForm() == false) {
                return false;
            }
            else {
                $("#form1").submit()
            }
        });
    });

    function ValidateForm() {

        if ($("#FromD").val() == "") {
            alert('Select From Date!');
            return false;
        }
        if ($("#ToD").val() == "") {
            alert('Select To Date!');
            return false;
        }
        debugger;
        if ($("#FromD").val() > $("#ToD").val()) {
            alert("To Date selected is Greater than From Date  !!!");
            return false;
        }

        else {
            return true;

        }
    }
</script>


<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });


            $('.mvc-grid-value').each(function (i)
            {
                    $(this).quicksearch("#gridMapping tr:not(:has(th))",
                    {
                        'testQuery': function (query, txt, row)
                        {
                            return $(row).children(":eq(" + i + ")").text().toLowerCase().indexOf(query[0].toLowerCase()) != -1;
                        }
                    });
            });


</script>



