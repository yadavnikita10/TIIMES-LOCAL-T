@model TuvVision.Models.MISOPEReport
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "MISOPEAdmin";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}


@helper CustomRenderingOfColumn1(TuvVision.Models.MISOPEReport nonInpActivity)
{
    
    <a href="@Url.Action("MISOPEInspector", "MISOPEReport", new {FKVoucherId = @nonInpActivity.Id })" title="Edit">@nonInpActivity.Id</a>
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />
@*calender control*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>


@using (Html.BeginForm("MISOPEAdmin", "MISOPEReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">OPE Report Admin</h3>

                    <button type="button" id="a" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportOpeAppReport", "MISOPEReport")'"
                            style="border:none;">
                        Export To Excel
                    </button>
                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div>


            <div class="row">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label>From Date:</label>
                        @Html.TextBoxFor(model => model.FromDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-4">
                    <div class="form-group">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToDate, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>

                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Search:</label>
                        <input type="submit" value="Search" class="btn btn-primary form-control" />
                    </div>

                </div>
            </div>




            <div class="col-xs-12">
                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lst1)
                            .Build(columns =>
                            {


                                columns.Add(c => c.Id).Titled("OPE Generated").RenderedAs(c => CustomRenderingOfColumn1(c)).Sortable(true);

                                columns.Add(c => c.InspectorName).Titled("Inspector Name");
                                columns.Add(c => c.Branch_Name).Titled("Branch Name");
                                columns.Add(c => c.EmployeeCode).Titled("Employee Code");
                                columns.Add(c => c.EmployeeGrade).Titled("Employee Grade");

                                columns.Add(c => c.StartTime).Titled("On Site Hrs");
                                columns.Add(c => c.EndTime).Titled("Off Site Hrs");
                                columns.Add(c => c.TravelTime).Titled("Travel Time");
                                columns.Add(c => c.ODTime).Titled("OD Time");
                                columns.Add(c => c.TotalTime).Titled("Total Time");
                                columns.Add(c => c.Manday).Titled("Man Day(1/0.5)");
                                columns.Add(c => c.OPERate).Titled("OPE Claim");


                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                            )


                        </td>
                    </tr>
                </table>

            </div>


        </div>

    </div>
}

<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>



@*Date Picker for From Date*@

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>



