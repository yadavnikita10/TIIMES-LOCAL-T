@model TuvVision.Models.NonInspectionActivity
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "Calender";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

@*calender control*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>



@using (Html.BeginForm("Calender", "MISOPEReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{
<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="container-fluid">

            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-12">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Utilisation Summary</h3>
                    
                    <button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","MISOPEReport")'" style="border:none;">
                        Export To Excel
                    </button>
                </div><!-- /.col -->

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div>

            <div class="row">
                <div class="col-xs-2">
                    <div class="form-group">
                        <label>From Date:</label>
                        @Html.TextBoxFor(model => model.FromD, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select Start Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-2">
                    <div class="form-group">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToD, "{0:dd MMM yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>

                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Search User: </label>
                        @Html.TextBoxFor(model => model.UserName, new { placeholder = "Enter User Name", @class = "form-control form-control-custom UserName" })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        <input type="hidden" id="HfUserName" name="HfUserName" />
                        @Html.HiddenFor(model => model.UserName)
                        
                    </div>
                </div>
                <div class="col-xs-2">
                    <div class="form-group">
                        <label>&nbsp;</label>
                        @Html.TextBoxFor(model => model.UserID, new { @class = "form-control form-control-custom UserID", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        <input type="hidden" id="HfUserID" name="HfUserID" />
                        @Html.HiddenFor(model => model.UserID)
                    </div>
                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Search:</label>
                        <input type="submit" value="Search" class="btn btn-primary form-control" onclick="return validateform();" />
                    </div>
                </div>


                
                <table class="display dataTable no-footer" style="overflow-y:auto;padding-left:6px;" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                        .Grid(Model.NIADashBoard)
                        .Build(columns =>
                        {
                            columns.Add(c => c.DateSE).Titled("Date");
                            columns.Add(c => c.Name).Titled("Name");
                            columns.Add(c => c.Branch).Titled("Branch Name");
                            columns.Add(c => c.EmployeeCode).Titled("HR-Emp-Code");
                            columns.Add(c => c.ActivityType).Titled("Activity Type");
                            columns.Add(c => c.JobNumber).Titled("Job Number");
                            columns.Add(c => c.SAP_No).Titled("SAP Number");
                                
                            columns.Add(c => c.StartTime).Titled("Outdoor Time / OnSite Time");
                            columns.Add(c => c.EndTime).Titled("Office Time / OffSite Time");
                            columns.Add(c => c.TravelTime).Titled("Travel Time");
                            columns.Add(c => c.Location).Titled("Location");
                            columns.Add(c => c.Description).Titled("Description");
                            columns.Add(c => c.ServiceCode).Titled("Service Code");
                            columns.Add(c => c.Id).Titled("ID");
                                

                        })
                        .Pageable(pager =>
                        {
                                
                            pager.ShowPageSizes = true;
                            pager.PagesToDisplay = 3;
                            pager.CurrentPage = 1;
                            pager.RowsPerPage = 2;
                        })
                        .UsingFilterMode(GridFilterMode.Row)
                        .Empty("No Data Found")
                        .Filterable()
                        .Sortable()
                            )
                        </td>
                    </tr>
                </table>

           

            </div>



        </div>



        </div>

</div>
}



@*Date Picker for From Date*@

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>

<script>

    $(function () {
        $(".UserName").autocomplete({
            source: function (request, response)
            {
                debugger
                $.ajax({
                    url: '@Url.Action("GetLeadByName", "EnquiryMaster")',
                    data: "{ 'prefix': '" + GetCurrentSearchTerm(request.term) + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data)
                    {
                        response($.map(data, function (item)
                        {
                            debugger
                            
                            
                            return { label: item.CompanyName, value: item.CompanyNames, id: item.PkUserID };

                        }));
                    },
                    error: function (response)
                    {

                    },
                    failure: function (response)
                    {

                    }
                });
            },
            select: function (event, ui) {
                               
                $("#UserID").val(ui.item.id);
                $("#HfUserID").val(ui.item.id);
                $("#HfUserName").val(ui.item.value);
                
                
            },
            minLength: 2,
            
            focus: function ()
            {
                return false;
            }
         //   minLength: 2
        });

        function splitCurrentText(LastTerm)
        {
            return LastTerm.split(/,\s*/);
        }

        function GetCurrentSearchTerm(LastTerm)
        {         
            return splitCurrentText(LastTerm).pop();
        }

    });


    function validateform() 
    {
        debugger;
        var FromD = $("#FromD").val();
        var ToD = $("#ToD").val();
       
        
        if (FromD=="" || ToD=="")
        {
            alert("Please Enter Date Range!!!");
            $("#FromD").focus();
            return false;
        }

        if ($("#UserID").val() != "")
        {
            
            $("#HfUserID").val($("#UserID").val());
            $("#HfUserName").val($("#UserName").val());

        }
        else
        {
            alert("Please Enter user Name!!!");
            $("#UserName").focus();
            return false;

        }
        return true;

    }


    

</script>


