@model TuvVision.Models.IAFScopeMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "ListIAFScopeMaster";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>
@*Ashwini Scripts here for datatable ends here*@

<style>
    table.evaluation > tbody {
        width: 100% !important;
        display: table;
    }

        table.evaluation > tbody > tr td table {
            width: 100% !important;
            display: table;
        }
</style>

<div class="main-content3 xs-max-height">

    <!--Start of header-->
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-15">

            <div class="col-xs-12">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Add IAF Scope-TCE</h3>
                <button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateIAFScope", "IAFScopeMaster")'">Add IAF Scope</button>
                <button type="button"  value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","IAFScopeMaster")'"
                       >
                    Export To Excel
                </button>
             </div><!-- /.col -->

            <div class="col-xs-12">
                <hr class="custom-hr">
            </div><!-- /.col -->
            <!--Table was here-->

        </div>
        <div class="col-xs-12">
            

        </div>
        <div class="col-xs-12">
            <table class="display dataTable no-footer evaluation" style="overflow-y:auto" id="gridMapping">
                <tr>
                    <td>
                        @(Html
                            .Grid(Model.lstlmd1)
                            .Build(columns =>
                            {

                                columns.Add(c => c.IAFScopeName).Titled("IAF Scope Name");
                                columns.Add(c => c.IAFScopeNumber).Titled("IAF Scope Number");
                                columns.Add(c => c.PK_IAFScopeId).Titled("Id").Hidden();
                                columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "CreateIAFScope", new { PK_IAFScopeId = o.PK_IAFScopeId }, new { @class = "fa fa-pencil", title = "Edit" }));
                                columns.Add().Titled("Delete").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "Delete", new { PK_IAFScopeId = o.PK_IAFScopeId }, new { @class = "fa fa-trash-o", title = "Delete", onclick = "return confirm('Are you sure you wish to delete ?');" }));

                               
                            })
                           .Pageable(pager =>
                            {
                                
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                        )


                    </td>
                </tr>
            </table>

            </div>

        </div>

</div>



<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>


<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>
<script>
    var CustomTextFilter = (function (base) {
        debugger;
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>


