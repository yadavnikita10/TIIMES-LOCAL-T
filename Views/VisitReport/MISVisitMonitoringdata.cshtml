@model TuvVision.Models.VisitMonitoringRecord
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "MISVisitMonitoringdata";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/MvcGrid/jquery.quicksearch.js"></script>
<script src="~/Scripts/MvcGrid/dataTables.fixedColumns.min.js"></script>
<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>


@helper CustomRenderingOfReport1(TuvVision.Models.VisitMonitoringRecord Report)
        {

    <a class="btn btn-primary" target="_blank" style="margin-top:11px;" href="@Url.Action("GeneratePDF", "VisitReport", new { PK_CALL_ID = Report.Downloadfile })">
        Export to PDF
    </a>
}
@helper Edit(TuvVision.Models.VisitMonitoringRecord Report)
{

    <a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_CALL_ID = Convert.ToInt32(Report.Downloadfile),@PK_RM_ID =Report.Pk_id })" title="Edit"><i class="fa fa-pencil"></i></a>

}

@using (Html.BeginForm("MISVisitMonitoringdata", "VisitReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))

{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">
                <form method="post">
                    <div class="col-xs-12">
                        <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Monitoring Record</h3>
                    </div>
                </form>

                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div>
            </div>

            <div class="row">

                <div class="col-xs-3">
                    <div class="form-group" style="width:280px;padding-left:25px;">
                        <label>From Date:</label>
                        @Html.TextBoxFor(model => model.FromDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/mm/yyyy", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-3">
                    <div class="form-group" style="width:280px;padding-right:25px;">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/mm/yyyy", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>
                </div>
                <div class="col-xs-2">
                    <label></label>
                    <div class="form-group">
                        <button type="button" class="btn btn-primary form-control" id="btnSearch">Search</button>
                    </div>
                </div>

                @*<div class="col-xs-2">
                        <div class="form-group">
                            <label></label>
                            <button type="button" id="a" value="ExportToExcel" class="btn btn-primary form-control" onclick="location.href='@Url.Action("ExportAllIndex","CallRegister")'">
                                Export To Excel
                            </button>
                        </div>
                    </div>*@
            </div>
            <div class="col-xs-12">
                <table class="display dataTable no-footer evaluation" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lstData)
                            .Build(columns =>
                            {
                                columns.Add().Titled("Edit").RenderedAs(c => Edit(c)).Sortable(true);
                                columns.Add(c => c.Person).Titled("Inspector Name");
                                columns.Add(c => c.Downloadfile).Titled("Download File").RenderedAs(c => CustomRenderingOfReport1(c)).Sortable(true);
                                //columns.Add(c => c.Downloadfile).Titled("Download");
                                columns.Add(c => c.DateofInspection).Titled("Date of Inspection");
                                columns.Add(c => c.IVRRefNo).Titled("IVR No");
                                columns.Add(c => c.VendorName).Titled("Vendor Name");
                                columns.Add(c => c.JobNumber).Titled("Job Number");
                                columns.Add(c => c.Sapnumber).Titled("SAP Number");
                                //columns.Add(c => c.Date).Titled("Date");
                            })
                            .Pageable(pager =>
                            {
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()
                            )
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSearch").click(function myfunction() {
            debugger;
            if (ValidateForm() == false) {
                return false;
            }
            else {
                $("#form1").submit()
            }
        });
    });

    function ValidateForm() {
        if ($("#FromD").val() == "") {
            alert('Select From Date!');
            return false;
        }
        if ($("#ToD").val() == "") {
            alert('Select To Date!');
            return false;
        }
        debugger;
        if ($("#FromD").val() > $("#ToD").val()) {
            alert("To Date selected is Greater than From Date  !!!");
            return false;
        }
        else {
            return true;
        }
    }
</script>


<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });


            $('.mvc-grid-value').each(function (i)
            {
                    $(this).quicksearch("#gridMapping tr:not(:has(th))",
                    {
                        'testQuery': function (query, txt, row)
                        {
                            return $(row).children(":eq(" + i + ")").text().toLowerCase().indexOf(query[0].toLowerCase()) != -1;
                        }
                    });
            });


</script>





