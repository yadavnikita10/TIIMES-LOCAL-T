@model TuvVision.Models.ItemDescriptionModel

@{
    ViewBag.Title = "ItemDescription";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom.js"></script>*@


<script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom.js"></script>

<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="col-xs-12 col-sm-offset-1 col-sm-10">  @*row assignfixedwidth rp-5*@

                <div class="col-xs-12 form-col">
                    <div class="row">
                        <br />
                        @*<h3 class="dynamic-page-title dynamic-page-title-2">Item Description </h3>*@
                        <h5 class="dynamic-page-title dynamic-page-title-2 " style="padding-left: 11px;">Inspection Visit Report Number : @Session["VisitReportNo"]</h5>
                        @*<a href="@Url.Action("CallsListByInspector","CallsMaster")" class="btn btn-info dynamic-function-btn dynamic-function-btn-2"><i class="fa fa-long-arrow-left"></i> Go Back</a>*@

                        <div class="col-xs-12">  @*text-right*@
                        

                            @if (Model.PK_CALL_ID != 0)
                            {
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("VisitReportForm", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'"> General</button>
                                @*<button class="btn btn-info dynamic-function-btn ItemDescription" type="button" onclick="location.href='@Url.Action("ItemDescription", "VisitReport",new { @PK_Call_ID = Model.PK_Call_ID} )'">Item Description</button>*@

                                <button  class="btn btn-default insert-form-btn" type="button" onclick="location.href='@Url.Action("ItemDescription", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Item Description</button>

                                 <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ReferenceDocuments", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Reference Documents</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("InspectionActivites", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Stages Witnessed</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("DocumentReviewed", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Document Reviewed</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("EquipmentDetails", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Details Of Measuring Instrument</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("Conclusion", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Conclusion</button>

                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("ReportImage", "VisitReport",new { @PK_Call_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Image</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("IvrReports", "VisitReport",new { @PK_CALL_ID = Model.PK_CALL_ID, @PK_RM_ID = Model.abcid} )'">Report</button>
                                <button class="btn btn-default news-btn" type="button" onclick="location.href='@Url.Action("AllConcern", "VisitReport",new { @PK_CALL_ID = Model.PK_CALL_ID , @PK_RM_ID = Model.abcid} )'">List Of Issues</button>
                                
                            }



                          </div>


                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Item Description</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">

                                                @Html.HiddenFor(m => m.PK_CALL_ID)
                                                @Html.HiddenFor(m => m.abcid)
                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-2">
                                                        <div class="form-group">
                                                            <label>PO Item No:</label>

                                                            @Html.TextBoxFor(model => model.Po_Item_No, new { @placeholder = "Po Item No", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Po_Item_No, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Item Code:</label>

                                                            @Html.TextBoxFor(model => model.Item_Code, new { @placeholder = "Item Code", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Item_Code, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">
                                                            <label>Item Description:</label>
                                                            @Html.TextAreaFor(model => model.ItemCode_Description, 10, 40, new { @placeholder = "Item Description", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.ItemCode_Description, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>UOM:</label>
                                                            @{
                                                                if (Model != null)
                                                                {
                                                                    if (ViewBag.UOM != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.Unit, new SelectList(@ViewBag.UOM, "Code", "Name"), "---Select UOM---", new { @id = "ddlProjectType", @class = "form-control" })
                                                                    }

                                                                    @*else if (ViewData["ProjectTypeItems"] != null)
                            {
                                @Html.DropDownListFor(model => model.ProjectType, (IEnumerable<SelectListItem>)ViewData["ProjectTypeItems"], "---Select UOM---", new { @id = "ddlProjectType", @class = "form-control" })
                            }*@

                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(model => model.Unit, new SelectList(@ViewBag.UOM, "Code", "Name"), "---Select UOM---", new { @id = "ddlProjectType", @class = "form-control" })
                                                                }
                                                                @Html.ValidationMessageFor(m => m.Unit, "", new { @class = "text-danger validation-msg" })
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">


                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>PO Quantity:</label>

                                                            @Html.TextBoxFor(model => model.Po_Quantity, new { @placeholder = "Po Quantity", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Po_Quantity, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Offered Quantity:</label>

                                                            @Html.TextBoxFor(model => model.Offered_Quantity, new { @placeholder = "Offered Quantity", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Offered_Quantity, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Accepted Quantity:</label>

                                                            @Html.TextBoxFor(model => model.Accepted_Quantity, new { @placeholder = "Accepted Quantity", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Accepted_Quantity, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
@if (Model.HeatNoShow == "Yes")
{
    <div class="col-xs-12 col-sm-4">
        <div class="form-group">
            <label>Heat number:</label>

            @Html.TextBoxFor(model => model.HeatNumber, new { @placeholder = "Heat Number", @class = "form-control", @oninput = "validateNumber(this)" })
            @Html.ValidationMessageFor(model => model.HeatNumber, "", new { @class = "text-danger validation-msg" })
        </div>
    </div>
}

                                                    @*<div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Heat number:</label>

                                                            @Html.TextBoxFor(model => model.HeatNumber, new { @placeholder = "Heat Number", @class = "form-control", @oninput = "validateNumber(this)" })
                                                            @Html.ValidationMessageFor(model => model.HeatNumber, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Total Quantity:</label>

                                                            @Html.TextBoxFor(model => model.TotalQuantity, new { @placeholder = "Total Quantity", @class = "form-control", @oninput = "validateNumber(this)" })
                                                            @Html.ValidationMessageFor(model => model.TotalQuantity, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>*@

                                                </div>
                                                @*<div class="row">

                                                    <div class="col-xs-8 col-sm-6">
                                                        <div class="form-group">
                                                            <label>Upload Excel :</label>
                                                            <input type="file" name="FileUpload" class="form-control" id="FileUpload">
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-8 col-sm-4">
                                                        <a class="btn btn-default insert-form-btn" href="~/Excel/ExcellData.xlsx" role="button" download="ExcellData.xlsx">
                                                            <i class="fa fa-download"></i> Download Template
                                                        </a>

                                                    </div>
                                                </div>*@
                                                <div class="row">
                                                    <span style="color:#E12F24;">
                                                        <strong> &nbsp;&nbsp;&nbsp;&nbsp;Note : </strong>
                                                    </span>
                                                    If concerns are raised, verify data inserted in accepted quantity.


                                                    <div class="col-xs-12 text-center" id="IVRPointerEvents">
                                                        <button type="submit" class="btn btn-default insert-form-btn">Save</button>
                                                    </div>
                                                    </div>
</form>
                                        </div>
                                    </div>
                                </div>
                                <!--Contact Details By Manoj -->
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="col-xs-12">
                                            <table id="library-dt"  cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <td class="remove-search" width="5%" style="padding-left:0px;">Po Item No</td>
                                                        <td class="remove-search" width="10%">Item Code</td>
                                                        <td class="remove-search" width="40%">Item Description</td>
                                                        <td class="remove-search" width="10%">UOM</td>
                                                        <td class="remove-search" width="10%">PO Quantity</td>
                                                        <td class="remove-search" width="10%">Offered Quantity</td>
                                                        <td class="remove-search" width="10%">Accepted Quantity</td>
                                                        @*<td class="remove-search" width="10%">Heat Number</td>
                                                        <td class="remove-search" width="10%">Total Quantity</td>*@
                                                        <td class="remove-search" width="5%">Action</td>
                                                    </tr>
                                                </thead>

                                                <tbody>

                                                    @foreach (var item in ViewData["CostSheet"] as IEnumerable<TuvVision.Models.ItemDescriptionModel>)
                                                    {
                                                        <tr>
                                                            <td width="5%">@item.Po_Item_No</td>
                                                            <td width="10%">@item.Item_Code</td>
                                                            <td style='white-space: pre-line;' width="40%">@item.ItemCode_Description</td>
                                                            <td width="10%">@item.Unit</td>
                                                            <td width="10%">@item.Po_Quantity</td>
                                                            <td width="10%">@item.Offered_Quantity</td>
                                                            <td width="10%">@item.Accepted_Quantity</td>
                                                            @*<td width="10%">@item.HeatNumber</td>
                                                            <td width="10%">@item.TotalQuantity</td>*@

                                                            <td class="less-width" width="5%">
                                                                <a href="@Url.Action("ItemDescription", "Visitreport", new {@PK_ItemD_Id = item.PK_ItemD_Id })" title="Edit"><span class="fa fa-pencil"></span>&nbsp;</a>
                                                                <a href="@Url.Action("DeleteItemDescriptionData", "Visitreport", new {@PK_ItemD_Id = item.PK_ItemD_Id, @PK_CALL_ID = item.PK_CALL_ID })" onclick="return confirm('Are you sure you want to Delete this Record?')" title="Delete"><span class="fa fa-trash-o"></span>&nbsp;</a>
                                                                @{
                                                                    if ((Convert.ToString(TempData["InsertCompany"])) != "" && Convert.ToString(TempData["InsertCompany"]) != null)
                                                                    {
                                                                        TempData["InsertCompany"] = null;
                                                                    }
                                                                    if ((Convert.ToString(TempData["UpdateCompany"])) != "" && Convert.ToString(TempData["UpdateCompany"]) != null)
                                                                    {
                                                                        TempData["UpdateCompany"] = null;

                                                                    }
                                                                }
                                                            </td>

                                                        </tr>
                                                                    }

                                                </tbody>

                                            </table>

                                        </div>
                                    </div>
                                </div>

                                

                                    </div><!-- /.box-shadow -->
                                </div>
                            </div>
                </div>
            </div>
        </div>
    </div>
</div>

   <script>
    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);

            this.methods = ['contains'];
            column.grid.lang.custom = { contains: 'Contains' };
        }

        // Other extension points can be found at MvcGridFilter declaration

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'custom': CustomTextFilter
        }
    });
</script>     




<script>
    var isConfirmationIVR = @Session["IsConfirmationIVR"] ?? 0;
    // JavaScript to disable pointer events if isConfirmationIVR is 1

    if (isConfirmationIVR == 1) {
        document.getElementById("IVRPointerEvents").style.pointerEvents = "none";
    }
</script>