@model TuvVision.Models.ReportModel
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;


@*@helper CustomRenderingOfColumn1(TuvVision.Models.ReportModel Report)
{
if (Report.NCR != "NA" && Report.NCR != null)
{
    string[] words = (Report.NCR).Split(',');
    for (int i = 0; i < words.Count(); i++)
    {
            <a id="btnAddToCart" class="btn btn-default insert-form-btn" href="@Url.Content("" + words[i])" role="button" download="@Url.Content("~/NCRPDF/" + words[i])">
                <i class="fa fa-download"></i>           @words[i]
            </a>
    }
}
else
{
        <a>
            NA
        </a>
}
}*@



    @*@helper CustomRenderingOfReport(TuvVision.Models.ReportModel Report)
    {
    <a href="~/IVRReport/@Report.Report" download="download">

        <img src="~/PDF-Icon.png" height="50px" width="50px" />
    </a>
}*@


@helper CustomRenderingOfReport1(TuvVision.Models.ReportModel Report)
        {
        <a href="~/IVRReport/@Report.Report" download="~/IVRReport/@Report.Report" style="color:#001ED2;">
            @*@Report.Report*@
            @Report.ReportNo
        </a>
    }
@helper Edit(TuvVision.Models.ReportModel Report)
{
if (Report.Edit == "1")
{
        <a href="@Url.Action("VisitReportForm", "VisitReport", new {@PK_CALL_ID = Report.PK_CALL_ID,@PK_RM_ID = Report.PK_RM_ID })" title="Edit"><i class="fa fa-pencil"></i></a>
}
else
{

}
}


    @{
        ViewBag.Title = "IvrReports";
        Layout = "~/Views/Shared/_TuvVision.cshtml";
    }
    <link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />



    @using (Html.BeginForm())
    {

        <div class="main-content3 xs-max-height">

            <!--Start of header-->
            <div class="container-fluid">
                <div class="row assignfixedwidth rp-15">
                    <form method="post">
                        @Html.HiddenFor(m => m.PK_CALL_ID)

                        <div class="col-xs-12">
                            <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Inspection Visit Report</h3>
                            <button type="button" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndex","VisitReport")'"
                                    style="border:none;">
                                Export To Excel
                            </button>

                        </div><!-- /.col -->
                    </form>

                    <div class="col-xs-12">
                        <hr class="custom-hr">
                    </div><!-- /.col -->
                    <!--Table was here-->

                </div><!-- /.row -->

                <div class="col-xs-12">

                </div><!-- /.data table col -->

                <div class="col-xs-12">

                    <table class="display dataTable no-footer evaluation" style="overflow-y:auto" id="gridMapping">
                        <tr>
                            <td>
                                @(Html
                            .Grid(Model.lst1)
                            .Build(columns =>
                            {

                                //columns.Add().Titled("Edit").Encoded(false).RenderedAs(o => Html.ActionLink(" ", "VisitReportForm", new { PK_CALL_ID = o.PK_CALL_ID , PK_RM_ID =o.PK_RM_ID}, new { @class = "fa fa-pencil", title = "Report Name" }));
                                columns.Add().Titled("Edit").RenderedAs(c => Edit(c)).Sortable(true);
                                columns.Add(c => c.ReportNo).Titled("Report No");
                                columns.Add(c => c.Report).Titled("Download File").RenderedAs(c => CustomRenderingOfReport1(c)).Sortable(true);
                                columns.Add(c => c.Call_No).Titled("Call No");
                                columns.Add(c => c.inspectionDate).Titled("Inspection Date");
                                columns.Add(c => c.SubJob_No).Titled("Sub-Job No");
                                columns.Add(c => c.Sap_And_Controle_No).Titled("SAP No");
                                columns.Add(c => c.Project_Name_Location).Titled("Project Name");
                                columns.Add(c => c.Client_Name).Titled("Customer Name");
                                columns.Add(c => c.Vendor_Name_Location).Titled("Vendor Name");
                                columns.Add(c => c.Po_No).Titled("PO No");
                                columns.Add(c => c.Inspector).Titled("Inspector Name");
                                columns.Add(c => c.ReportDate).Titled("Report Date");
                                columns.Add(c => c.Product_item).Titled("Item to be inspected");
                                columns.Add(c => c.Originating_Branch).Titled("Originating Branch");
                                columns.Add(c => c.Excuting_Branch).Titled("Executing Branch");

                                columns.Add(c => c.CanIRNbeissued).Titled("Can IRN be issued");
                                columns.Add(c => c.IssuedPOItemNumbers).Titled("Issued PO Item Numbers");
                                columns.Add(c => c.Conclusion).Titled("Conclusion");
                                columns.Add(c => c.Areas_Of_Concerns).Titled("Areas Of Concerns");
                                columns.Add(c => c.PK_RM_ID).Titled("PK_RM_ID");
                                columns.Add(c => c.checkIFCustomerSpecific).Titled("Customer Specific Format");
                                columns.Add(c => c.IVRDownloadDate).Titled("IVR Download Date");

                            })
                            .Pageable(pager =>
                            {

                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No data found")
                            .Filterable()
                            .Sortable()

                                )


                            </td>
                        </tr>
                    </table>



                </div>

            </div><!-- /.container-fluid -->
            <!--End of header-->

        </div>
    <!--End of Ashwini Code-->
    }

    <script>
        [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
            new MvcGrid(element);
        });
    </script>
    <style>
        table.evaluation > tbody {
            width: 100% !important;
            display: table;
        }

            table.evaluation > tbody > tr td table {
                width: 100% !important;
                display: table;
            }
    </style>


