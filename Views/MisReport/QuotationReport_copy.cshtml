@model TuvVision.Models.QuotationMaster
@using NonFactors.Mvc.Grid;
@using System.Web.Mvc;
@{
    ViewBag.Title = "QuotationReport";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />


@using (Html.BeginForm("QuotationReport", "MisReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-15">

                <div class="col-xs-4">
                    <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Quotation Report</h3>
                    
                </div><!-- /.col -->
                @if (Convert.ToString(TempData["Result"]) != null && Convert.ToString(TempData["Result"]) != "")
                {
                    <div class="col-xs-4">
                        <h4 style="color:red;font-weight:bold;">@Convert.ToString(TempData["Result"])</h4>
                    </div>
                }
                <div class="col-xs-12">
                    @*<button type="button" value="CreateRole" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("CreateBranch", "Branch")'">Add New Branch</button>*@
                    <button type="button" id="a" value="ExportToExcel" class="btn btn-info dynamic-function-btn dynamic-function-btn-2" onclick="location.href='@Url.Action("ExportIndexQuotationMaster", "MisReport")'"
                           >
                        Export To Excel
                    </button>

                    
                </div>
                <div class="col-xs-12">
                    <hr class="custom-hr">
                </div><!-- /.col -->
                <!--Table was here-->

            </div><!-- /.row -->
            <div class="row">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label>From Date:</label>
                        @Html.TextBoxFor(model => model.FromDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Select From Date", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-4">
                    <div class="form-group">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "Select To Date", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>

                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label>Search:</label>
                        @*<input type="submit" value="Search" class="btn btn-primary form-control" />*@
                        <button type="button" class="btn btn-primary form-control" id="btnSearch"> Search </button>
                    </div>

                </div>
            </div>
            @*<div class="col-xs-12">
                <table id="example" class="display custom-table" cellspacing="0" width="100%">

                    <thead>
                        <tr>
                            <th class="hidden"></th>
                            <th>Quotation Number</th>
                            <th>Quotation Date</th>
                            <th>Validity Date</th>
                            <th>Estimate Amount</th>
                            <th>Project Name</th>
                            <th>Service Type</th>
                            <th>Client Name</th>
                            <th>Originating Branch</th>
                            <th>Est Close Date</th>
                            <th>Regret Reason</th>
                            <th>Owner</th>
                        </tr>
                    </thead>

                    <tbody>

                        <tr class="hidden">
                            <td></td>
                            <td>Quotation Number</td>
                            <td>Quotation Date</td>
                            <td>Validity Date</td>
                            <td>Estimate Amount</td>
                            <td>Project Name</td>
                            <td>Service Type</td>
                            <td>Client Name</td>
                            <td>Originating Branch</td>
                            <td>Est Close Date</td>
                            <td>Regret Reason</td>
                            <td>Owner</td>
                        </tr>
                        <tr class="hidden">
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                        @if (ViewData["QuotationMaster"] != null)
                        {
                            foreach (var item in ViewData["QuotationMaster"] as IEnumerable<TuvVision.Models.QuotationMaster>)
                            {
                                <tr>
                                    <td class="hidden"></td>
                                   
                                    <td>@item.QuotationNumber</td>
                                    <td>@item.CreatedDate</td>
                                    <td>@item.ExpiryDate</td>
                                    <td>@item.EstimatedAmount</td>
                                    <td>@item.EndCustomer</td>
                                    <td>@item.Quotation_Description</td>
                                    <td>@item.BranchName</td>
                                    <td>@item.ServiceType</td>
                                    <td>@item.BranchName</td>
                                    <td>@item.ExpiryDate.Value.ToString("dd/MM/yyyy")</td>
                                    <td>@item.FeesStructure</td>

                                </tr>
                            }
                        }
                      

                    </tbody>

                </table>
            </div> /.data table col*@ 


            <div class="col-xs-12">
                <table class="display dataTable no-footer" style="overflow-y:auto" id="gridMapping">
                    <tr>
                        <td>
                            @(Html
                            .Grid(Model.lstQuotationMasterDashBoard1)
                            .Build(columns =>
                            {
                                columns.Add(c => c.QuotationNumber).Titled("Quotation Number");
                                columns.Add(c => c.CreatedDate).Titled("Quotation Date");
                                columns.Add(c => c.ExpiryDate).Titled("Validity Date");
                                columns.Add(c => c.EstimatedAmount).Titled("Estimate Amount");
                                columns.Add(c => c.EndCustomer).Titled("Project Name");
                                columns.Add(c => c.Quotation_Description).Titled("Service Type");
                                columns.Add(c => c.CompanyAddress).Titled("Client Name");
                                columns.Add(c => c.BranchName).Titled("Originating Branch");
                                //columns.Add(c => c.ServiceType).Titled("Originating Branch");
                                columns.Add(c => c.ExpiryDate).Titled("Est Close Date");
                                columns.Add(c => c.StatusType).Titled("Status");
                                columns.Add(c => c.CreatedBy).Titled("Owner");

                            })
                            .Pageable(pager =>
                            {
                                //pager.PageSizes = new DictionaryInt32, String > { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                                pager.ShowPageSizes = true;
                                pager.PagesToDisplay = 3;
                                pager.CurrentPage = 1;
                                pager.RowsPerPage = 2;
                            })
                            .UsingFilterMode(GridFilterMode.Row)
                            .Empty("No Data Found")
                            .Filterable()
                            .Sortable()

                            )


                        </td>
                    </tr>
                </table>


            </div>

        </div><!-- /.container-fluid -->
        <!--End of header-->

    </div>
    <!--End of Ashwini Code-->


                            }
    
@*...Calender Control...*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>


@*Ashwini Scripts here for datatable starts here*@
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>

<!--export to excel-->
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/jszip.min.js"></script>
<script type="text/javascript" language="javascript" src="~/AllJsAndCss/js/buttons.html5.min.js"></script>
<script src="~/AllJsAndCss/js/datatable-custom2.js"></script>
@*Ashwini Scripts here for datatable ends here*@

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSearch").click(function myfunction() {
            debugger;
            if (ValidateForm() == false) {
                return false;
            }
            else {
                $("#form1").submit()
            }
        });
    });

    function ValidateForm() {

        if ($("#FromDate").val() == "") {
            alert('Select From Date!');
            return false;
        }
        if ($("#ToDate").val() == "") {
            alert('Select To Date!');
            return false;
        }
        debugger;
        if ($("#FromDate").val() > $("#ToDate").val()) {
            alert("To Date selected is Greater than From Date  !!!");
            return false;
        }

        else {
            return true;

        }
    }
</script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });
</script>