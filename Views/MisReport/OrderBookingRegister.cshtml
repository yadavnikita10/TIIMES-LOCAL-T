`@model TuvVision.Models.JobMasters
@{
    ViewBag.Title = "OrderBookingRegister";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

<link href="~/AllJsAndCss/css/MVCGridN.css" rel="stylesheet" />


@using (Html.BeginForm("OrderBookingRegister", "MisReport", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
{

    <div class="main-content3 xs-max-height">

        <!--Start of header-->
        <div class="container-fluid">
            <br /><br />

            <div class="form-group" style="padding-left:25px;">
                <h3 class="dynamic-page-title dynamic-page-title-2  text-left">Order Booking Register</h3>
            </div>

            @if (Convert.ToString(TempData["Result"]) != null && Convert.ToString(TempData["Result"]) != "")
            {
                <div class="col-xs-4">
                    <h4 style="color:red;font-weight:bold;">@Convert.ToString(TempData["Result"])</h4>
                </div>
            }

            <div class="form-group" style="padding-left:25px;">
                <hr class="custom-hr1">
            </div>


            <br /><br />
            <div class="row">

                <div class="col-xs-3">
                    <div class="form-group" style="width:280px;padding-left:25px;">
                        <label>From Date:</label>
                        @Html.TextBoxFor(model => model.FromDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/MM/yyyy", @class = "form-control form-control-custom FromD", autocomplete = "off" })
                    </div>
                </div>


                <div class="col-xs-3">
                    <div class="form-group" style="width:280px;padding-right:25px;">
                        <label>To Date:</label>
                        @Html.TextBoxFor(model => model.ToDate, "{0:dd/MM/yyyy}", htmlAttributes: new { placeholder = "dd/MM/yyyy", @class = "form-control form-control-custom ToD", autocomplete = "off" })
                    </div>

                </div>

                <div class="col-xs-2">
                    <label></label>
                    <div class="form-group">
                        <button type="button" class="btn btn-primary form-control" id="btnSearch">Search</button>
                    </div>
                </div>

                <div class="col-xs-2">
                    <div class="form-group">
                        <label></label>
                        <button type="button" id="a" value="ExportToExcel" class="btn btn-primary form-control" onclick="location.href='@Url.Action("ExportIndexorderBookingRegister","MisReport")'">
                            Export To Excel
                        </button>
                    </div>
                </div>


            </div>



            <div class="col-xs-12" style="overflow:auto;width:102%">
                <table class="display dataTable no-footer" style="overflow-y:auto;width:180%;">
                    <tr>
                        <td>

                            @(Html
                                    .Grid(Model.lst1)
                                    .Build(columns =>
                                    {
                                        columns.Add(c => c.Job_Number).Titled("Job Number").Encoded(false).RenderedAs(o => Html.ActionLink(o.Job_Number, "JobCreation", "JobMaster", new { PK_JOB_ID = o.PK_JOB_ID }, new { title = "job Number" }));
                                        columns.Add(c => c.PoAmmendment).Titled("Order Category");
                                        columns.Add(c => c.SAP_No).Titled("Sales Order No");
                                        columns.Add(c => c.Branch).Titled("Branch");
                                        columns.Add(c => c.Client_Name).Titled("Client Name");
                                        columns.Add(c => c.PONo).Titled("PO Number");
                                        columns.Add(c => c.Customer_PoDate).Titled("Customer PO Date");
                                        columns.Add(c => c.Po_Validity).Titled("PO Validity");
                                        columns.Add(c => c.POAmount).Titled("PO AMount");
                                        columns.Add(c => c.OrderType).Titled("Order Type");
                                        columns.Add(c => c.ARC).Titled("ARC");
                                        columns.Add(c => c.OrderStatus).Titled("Order Status");

                                        columns.Add(c => c.Consumed).Titled("Consumed Mandays");
                                        columns.Add(c => c.Remaining).Titled("Remaining Mandays");
                                        columns.Add(c => c.Estimate_ManDays_ManMonth).Titled("ManDays as per PO");
                                        columns.Add(c => c.Estimate_ManMonth).Titled("Estimated Manmonth");
                                        columns.Add(c => c.Estimate_ManHR).Titled("Estimated HR");
                                        columns.Add(c => c.OrderRate).Titled("Man Day Rate");
                                        columns.Add(c => c.JobCreatedBy).Titled("Job Created By");
                                        columns.Add(c => c.JobDate).Titled("Job Created Date");
                                        columns.Add(c => c.Quotation_Of_Order).Titled("Quotation Number");
                                        columns.Add(c => c.QMCreatedBy).Titled("Quotation Created By");
                                        columns.Add(c => c.QMCreatedDate).Titled("Quotation Created Date");
                                        columns.Add(c => c.QMAmount).Titled("Quotation Amount");
                                        columns.Add(c => c.Enquiry_Of_Order).Titled("Enquiry Number");
                                        columns.Add(c => c.EnqRecDate).Titled("Enquiry Receipt Date");
                                        columns.Add(c => c.EQEstAmt).Titled("Enquiry Amount");

                                        // columns.Add(c => c.Description).Titled("Description");


                                        columns.Add(c => c.End_User).Titled("End User");
                                        columns.Add(c => c.Description).Titled("Project Name");
                                        columns.Add(c => c.Job_type).Titled("OBS Type");
                                        columns.Add(c => c.PortfolioType).Titled("Portfolio Type");
                                        columns.Add(c => c.Service_type).Titled("Service Type");
                                        columns.Add(c => c.DECName).Titled("DEC Name");
                                        columns.Add(c => c.DECNumber).Titled("DEC Number");


                                        //columns.Add(c => c.Contract_reviewList).Titled("Contract Review List");
                                        //columns.Add(c => c.Special_Notes).Titled("Special Notes");
                                        //columns.Add(c => c.Estimate_ManMonth).Titled("Estimated Man month");

                                        // columns.Add(c => c.InvoiceAmount).Titled("Invoicing Amount");



                                    })
                                    .Pageable(pager =>
                                    {

                                        pager.ShowPageSizes = true;

                                        pager.CurrentPage = 1;
                                        pager.RowsPerPage = 2;
                                    })
                                    .UsingFilterMode(GridFilterMode.Row)
                                    .Empty("No data found")
                                    .Filterable()
                                    .Sortable()

                            )

                        </td>
                    </tr>
                </table>

            </div>



        </div>


    </div>




}


@*...Calender Control...*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/MvcGrid/jquery.quicksearch.js"></script>
<script src="~/Scripts/MvcGrid/dataTables.fixedColumns.min.js"></script>

<script>
    $(function () {
        $(".FromD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>
<script>
    $(function () {
        $(".ToD").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>



<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSearch").click(function myfunction() {
            debugger;
            if (ValidateForm() == false) {
                return false;
            }
            else {
                $("#form1").submit()
            }
        });
    });

    function ValidateForm() {

        if ($("#FromDate").val() == "") {
            alert('Select From Date!');
            return false;
        }
        if ($("#ToDate").val() == "") {
            alert('Select To Date!');
            return false;
        }
        debugger;
        if ($("#FromDate").val() > $("#ToDate").val()) {
            alert("To Date selected is Greater than From Date  !!!");
            return false;
        }

        else {
            return true;

        }
    }
</script>

<script>
           [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
               new MvcGrid(element);
           });


            $('.mvc-grid-value').each(function (i)
            {
                    $(this).quicksearch("#gridMapping tr:not(:has(th))",
                    {
                        'testQuery': function (query, txt, row)
                        {
                            return $(row).children(":eq(" + i + ")").text().toLowerCase().indexOf(query[0].toLowerCase()) != -1;
                        }
                    });
            });

            $(document).ready(function ()
            {
                var table = $('#gridMapping').DataTable({

                    scrollY: "300px",
                    scrollX: true,
                    scrollCollapse: true,
                    paging: false,
                    fixedColumns:
                    {
                        left: 2
                    }
                });

            });
            

</script>


