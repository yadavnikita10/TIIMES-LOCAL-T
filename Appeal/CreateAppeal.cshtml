@model TuvVision.Models.AppealMaster

@{
    ViewBag.Title = "CreateAppeal";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
}

@*<h2>CreateAppeal</h2>*@
<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-1.8.0.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.22/jquery-ui.js"></script>

<link href="~/Content/css/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

@*<--Code Added By Rahul -->*@
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
@*<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />*@

<script>

    $(function () {
        $(".Abc").datepicker({
            dateFormat: 'dd/mm/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"
        });
    });
</script>

<style>
    .ui-widget-header {
        background: #3677e6 !important;
    }

    .ui-datepicker-month, .ui-datepicker-year {
        color: #333 !important;
    }
</style>

<div class="grey-bg-f3">
    <div class="container-fluid">
        <div class="row assignfixedwidth rp-5">

            <div class="col-xs-12 form-col">
                <div class="row">
                    <div class="col-xs-12 text-right">
                        <a href="@Url.Action("AppealDashBoard", "Appeal")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                    </div>
                    <div class="col-xs-12">
                        <div class="white-bg section-box-shadow">

                            <h3 class="form-page-title">Appeal</h3>

                            <div class="row">
                                <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                    <div class="form-box">
                                        <form method="post" enctype="multipart/form-data">
                                            <div class="col-xs-12 text-right">
                                                <p style="padding:0;margin:0;margin-bottom:10px;color:red;font-weight:bold;font-size: 12px;">Fields marked * are mandatory</p>
                                            </div>

                                            @*<div class="col-xs-12 col-sm-4">
                <div class="form-group">
                    <label>Modified By:</label>
                    @Html.TextBoxFor(model => model.Modified_By, new { placeholder = "Enter Modified By", @class = "form-control form-control-custom CompanyName" })
                    @Html.ValidationMessageFor(model => model.Modified_By, "", new { @class = "text-danger" })
                </div>
            </div>*@

                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Appeal Date:</label>
                                                    @Html.TextBoxFor(model => model.Date_of_Appeal, new { placeholder = "Enter Appeal Date", @class = "form-control form-control-custom CompanyName Abc", @Autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Date_of_Appeal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Status:</label>
                                                    @Html.DropDownListFor(model => model.Status, new List<SelectListItem> {
                                                    new SelectListItem {Text="--select--" },
                                                   new SelectListItem {Text="OPEN" },
                                                    new SelectListItem {Text="CLOSE" },
                                                     new SelectListItem {Text="ONGOING" },
                                               }, new
                                               {
                                                   @class = "form-control form-control-custom CompanyName"
                                               })
                                                    @*<select class="form-control form-control-custom CompanyName" id="status" name="stat">
                        <option>------Select Status-----</option>
                        <option>Open</option>
                        <option>Close</option>
                        <option>Ongoing</option>
                    </select>*@
                                                </div>
                                            </div>

                                            @*<div class="col-xs-12 col-sm-4">
                <div class="form-group">
                    <label>Status:</label>
                    @Html.TextBoxFor(model => model.Status, new { placeholder = "Enter Status", @class = "form-control form-control-custom CompanyName" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>*@
                                            @*<div class="col-xs-12 col-sm-4">
                <div class="form-group">
                    <label>Date of Appeal:</label>
                    @Html.TextBoxFor(model => model.Date_of_Appeal, new { placeholder = "Enter Date of Appeal", @class = "form-control form-control-custom CompanyName datepickerC " })
                    @Html.ValidationMessageFor(model => model.Date_of_Appeal, "", new { @class = "text-danger" })
                </div>
            </div>*@
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Appeal Reference No:</label>
                                                    @Html.TextBoxFor(model => model.Appeal_Referance_No, new
                                               {
                                                   placeholder = "Enter Appeal Reference No",
                                                   @class = "form-control form-control-custom CompanyName ", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.Appeal_Referance_No, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Appellant:</label>
                                                    @Html.TextBoxFor(model => model.Appellant, new { placeholder = "Enter Appeliant", @class = "form-control form-control-custom CompanyName" })
                                                    @Html.ValidationMessageFor(model => model.Appellant, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Branch:</label>
                                                    @*@Html.TextBoxFor(model => model.Branch, new { placeholder = "Enter branch", @class = "form-control form-control-custom CompanyName", @Autocomplete = "off" })*@
                                                    @Html.DropDownListFor(model => model.Branch, (IEnumerable<SelectListItem>)ViewData["BranchName"], "---Select Branch---", new { @id = "ddlBranch", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Mode Of Appeal:</label>
                                                    @Html.TextBoxFor(model => model.Mode_Of_Appeal, new { placeholder = "Enter Mode Of Appeal", @class = "form-control form-control-custom CompanyName", @Autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Mode_Of_Appeal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>TUVI Job No:</label>
                                                    @Html.TextBoxFor(model => model.TUV_Control_No, new { placeholder = "Enter TUVI Control No", @class = "form-control form-control-custom" })
                                                    @Html.ValidationMessageFor(model => model.TUV_Control_No, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 ">
                                                <div class="form-group">
                                                    <label>Details Of Appeal:</label>
                                                    @Html.TextAreaFor(model => model.Details_Of_Appeal, new { placeholder = "Enter Details Of Appeal", @class = "form-control form-control-custom CompanyName", @rows = "3" })
                                                    @Html.ValidationMessageFor(model => model.Details_Of_Appeal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                            @*<div class="col-xs-12 col-sm-4">
                <div class="form-group">
                    <label>Attachment </label>
                    <input type="file" class="inputupload" name="img_Banner" id="img_Banner" />
                    @Html.HiddenFor(m => m.Attachment)
                    @if (Model != null)
                    {
                        <a href="~/Content/Uploads/Images/@Html.DisplayFor(m => m.Attachment)">
                            <img src="@Url.Content("~/Content/Uploads/Images/"+@Html.DisplayFor(m => m.Attachment))" width="75" height="75" multiple />
                            @Html.ValidationMessageFor(m => m.Attachment, "", new { @class = "text-danger", })
                        </a>
                    }
                </div>
            </div>*@
                                            @*<div class="col-xs-12">
                <div class="form-group">
                    <label><i class="fa fa-paperclip" style="color:black;"></i> Related Documents(Please attach files here): <span style="color:#ff0000;">*</span></label>
                    <input type="file" class="filepond" name="filepond" id="FileUpload" multiple>

                </div>
            </div>*@

                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Attachment </label>
                                                    <input type="file" class="inputupload" name="Image" id="img_Banner" multiple="multiple" />
                                                    @*@Html.HiddenFor(m => m.Attachment)
                    @if (Model != null)
                    {
                        <a href="~/ImageUpload/@Html.DisplayFor(m => m.Attachment)">
                            <img src="@Url.Content("~/Content/JobDocument/"+@Html.DisplayFor(m => m.Attachment))" width="75" height="75" />
                            @Html.ValidationMessageFor(m => m.Attachment, "", new { @class = "text-danger", })
                        </a>
                    }*@
                                                    @Html.HiddenFor(m => m.Attachment)
                                                    @if (Model != null && Model.Attachment != null && Model.Attachment != "")
                                                    {
                                                        string[] words = (Model.Attachment).Split(',');
                                                        for (int j = 1; j < words.Count(); j++)
                                                        {
                                                            <a target="_blank" href="@Url.Content("~/AppealDocs/" + words[j-1])">
                                                                <img src="~/PDF-Icon.png" width="50" height="50" />
                                                            </a>
                                                            @*<img src="@Url.Content("~/Content/JobDocument/" + words[j-1])" width="50" height="50" />*@
                                                        }
                                                    }
                                                </div>
                                            </div>

                                            @*<div class="col-xs-12">
                <div class="form-group">
                    @{
                        if (Model != null)
                        {
                            //if(Model.DocumentAttached != null || Model.DocumentAttached !="")
                            if (!string.IsNullOrEmpty(Model.DocumentAttached))
                            {
                                <div class="cform-group">
                                    @{
                                        string[] words = (Model.DocumentAttached).Split(',');
                                        for (int i = 0; i < words.Count(); i++)
                                        {
                                            <a id="btnAddToCart" class="btn btn-default insert-form-btn" href="@Url.Content("" + words[i])" role="button" download="@Url.Content("~/Files/Documents/" + words[i])">
                                                <i class="fa fa-download"></i> Download
                                            </a>
                                        }
                                    }
                                </div>
                                        }
                                        else
                                        {
                                            <div class="form-group">

                                            </div>
                                            }
                                        }
                    }
                </div>
            </div>*@

                                            <div class="col-xs-12">
                                                <div class="form-group">
                                                    <label>Review And Analysis:</label>
                                                    @Html.TextAreaFor(model => model.Review_And_Analysis, new { placeholder = "Enter Review And Analysis", @class = "form-control form-control-custom", @rows = "3" })
                                                    @Html.ValidationMessageFor(model => model.Review_And_Analysis, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                                <div class="form-group">
                                                    <label>Disposal Action:</label>
                                                    @Html.TextAreaFor(model => model.Disposal_Action, new { placeholder = "Enter Disposal Action", @class = "form-control form-control-custom CompanyName", @rows = "3" })
                                                    @Html.ValidationMessageFor(model => model.Disposal_Action, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Disposal By:</label>
                                                    @Html.TextBoxFor(model => model.Disposal_By, new { placeholder = "Enter Disposal By", @class = "form-control form-control-custom CompanyName" })
                                                    @Html.ValidationMessageFor(model => model.Disposal_By, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-4">
                                                <div class="form-group">
                                                    <label>Date Of Disposal:</label>
                                                    @Html.TextBoxFor(model => model.Date_Of_Disposal, new { placeholder = "Enter Date Of Disposal", @class = "form-control form-control-custom CompanyName Abc", @Autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Date_Of_Disposal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-xs-12 ">
                                                <div class="form-group">
                                                    <label>Remarks:</label>
                                                    @Html.TextAreaFor(model => model.Remarks, new { placeholder = "Enter Remarks", @class = "form-control form-control-custom CompanyName ", @rows = "3" })
                                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            @if (Model.Appeal_ID != 0)
                                            {
                                                <div class="col-xs-12 text-center">
                                                    @*<button type="reset" class="btn btn-default news-btn">Reset</button>*@
                                                    <button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Update Appeal</button>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-xs-12 text-center">
                                                    @*<button type="reset" class="btn btn-default news-btn">Reset</button>*@
                                                    <button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Add Appeal</button>
                                                </div>
                                            }


                                            @*<div class="col-xs-12 text-center">
                                                <button type="reset" class="btn btn-default news-btn">Reset</button>
                                                <button type="submit" class="btn btn-default insert-form-btn"><i class="fa fa-plus-circle"></i> Add Appeal</button>
                                            </div>*@

                                        </form>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    <script>
        $(function () {
            $("#Branch").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("getAutocomplete", "Appeal")',
                       // url: "/Appeal/getAutocomplete/",
                        data: "{'prefix':'" + request.term + "'}",
                        datatype: "json",
                        type: "POST",
                        contentType: "application/json;charset-utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Branch, value: item.Branch };
                            }))
                        },
                        minLength:1
                    });
                }
            });
        });



        //$(function () {
        //    $("#Modified_By").autocomplete({
        //        source: function (request, response) {
        //            $.ajax({
        //                url: "/Appeal/getAutocompletemodify/",
        //                data: "{'prefix':'" + request.term + "'}",
        //                datatype: "json",
        //                type: "POST",
        //                contentType: "application/json;charset-utf-8",
        //                success: function (data) {
        //                    response($.map(data, function (item) {
        //                        return { label: item.Modified_By, value: item.Modified_By };
        //                    }))
        //                },
        //                minLength: 1
        //            });
        //        }
        //    });
        //});
        $(function () {
            $("#Modified_By").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Appeal/getAutocompletemodify/",
                        data: "{'prefix':'" + request.term + "'}",
                        datatype: "json",
                        type: "POST",
                        contentType: "application/json;charset-utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Modified_By, value: item.Modified_By };
                            }))
                        },
                        minlength: 3
                    });
                }
            });
        });


    </script>
    <script>
    var SummaryExtension = false;
    var fileExtension = ["pdf", "xls", "xlsx", "doc", "png", "jpg", "JPEG", "gif"];
    $("#FileUpload").change(function (e) {

        var files = $("#FileUpload input[type='file']").get(0).files;
        for (var index = 0; index < files.length; index++)
        {
            var singleExtension = e.target.files[index].name.split('.').pop();
            var Condition = fileExtension.includes(singleExtension);
            if (Condition == true)
            {
                SummaryExtension = true;
            }
            else
            {
                SummaryExtension = false;
                return;
            }
        }
        if (SummaryExtension == true)
        {
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++)
            {
                fileData.append("FileUpload input[type='file']", files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            var link = '@Url.Action("FilePathDocumentAttachment", "Appeal")';
            xhr.open('POST', link, 'true');
            xhr.send(fileData);
            xhr.onreadystatechange = function ()
            {
                if (xhr.readyState == 4 && xhr.status == 200)
                {
                    var data = xhr.responseText;
                    data = data.replace(/"/g, "");
                    $("#DocumentAttached").val(data);
                }
            }
            //})
        }
        else
        {
            alert("Only formats are allowed : " + fileExtension.join(','));
        }

    })
    </script>
<script>
$(document).ready(function () {
    $("#Disposal_By").autocomplete({
            source: function (req, resp) {
                $.ajax({
                    //url: "/TrainingSchedule/GetTrainerName",
                    url: '@Url.Action("GetTrainerName", "TrainingSchedule")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: GetCurrentSearchTerm(req.term) },
                    success: function (data) {
                        resp($.map(data, function (item) {
                            return { label: item.TrainerName, value: item.TrainerName };
                        }))
                    }
                })
            },
            select: function (event, ui) {
                var LastValue = splitCurrentText(this.value);
                LastValue.pop();
                LastValue.push(ui.item.value);
                LastValue.push("");
                this.value = LastValue.join(",");
                return false;
            },
            focus: function () {
            return false;
        }
        });
        function splitCurrentText(LastTerm) {
            return LastTerm.split(/,\s*/);
        }
        function GetCurrentSearchTerm(LastTerm) {
            return splitCurrentText(LastTerm).pop();
        }
});


    $(document).ready(function () {
        $("#Appellant").autocomplete({
            source: function (request, response) {
                $.ajax({
                    //url: "/TrainingSchedule/GetRecord",
                    url: '@Url.Action("GetCompanyName", "Appeal")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CompanyName, value: item.CompanyName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>