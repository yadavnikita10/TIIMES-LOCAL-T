@model TuvVision.Models.Audit
@{
    ViewBag.Title = "Audit";
    Layout = "~/Views/Shared/_TuvVision.cshtml";
    List<string> EditProdName = ViewBag.EditproductName as List<string>;
    List<string> EditAuditorName = ViewBag.AuditorNameName as List<string>;
}





<div class="main-content3 xs-max-height grey-bg-f3">
    <div class="grey-bg-f3">
        <!--Start of header-->
        <div class="container-fluid">
            <div class="row assignfixedwidth rp-5">

                <div class="col-xs-12 form-col">
                    <div class="row">

                        <div class="col-xs-12 text-right">
                            <a href="@Url.Action("ListAudit", "Audit")" class="btn btn-info dynamic-function-btn"><i class="fa fa-long-arrow-left"></i> Go Back</a>

                        </div>

                        <div class="col-xs-12">
                            <div class="white-bg section-box-shadow">
                                <h3 class="form-page-title">Create Audit</h3>
                                <div class="row">
                                    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
                                        <div class="form-box">
                                            <form method="post" enctype="multipart/form-data">

                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Branch </label>
                                                            @Html.DropDownListFor(model => model.Branch, (IEnumerable<SelectListItem>)ViewData["BranchName"], "---Select Branch---", new { @id = "ddlBranch", @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger validation-msg" })


                                                        </div>

                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Type Of Audit</label>
                                                            @Html.DropDownListFor(m => m.TypeOfAudit, new List<SelectListItem>
                                                                     {
                                                                     new SelectListItem{ Text="---SELECT---", Value = "" },
                                                                     new SelectListItem{ Text="Accreditation", Value = "Accreditation" },
                                                                     new SelectListItem{ Text="Renewal", Value = "Renewal" },
                                                                     new SelectListItem{ Text="Internal", Value = "Internal" },


                                                                     }, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.TypeOfAudit, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Audit Standards</label>
                                                            @Html.TextBoxFor(model => model.AuditStandard, new { @placeholder = "Audit Standard", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.AuditStandard, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>



                                                </div>


                                                <div class="row">

                                                    <div class="col-xs-12 col-sm-4">

                                                        <label>Select Auditor Name:</label>


                                                        @*@Html.DropDownListFor(model => model.listAuditorName, (IEnumerable<SelectListItem>)ViewData["AuditorName"],

                                                       new
                                                       {
                                                           @class = "form-control multiselect multiselect-icon multicls",
                                                           @multiple = "multiple",
                                                           @style = "width=20px;"
                                                       })*@

                                                        @if (ViewBag.check == "AuditorName")
                                                        {

                                                            <select id="Auditor" class="form-control form-multiselect-city" multiple="multiple" name="AuditorName" placeholder="Select Option" required="required">
                                                                @foreach (var item in ViewBag.AuditorName)
                                                                {
                                                                    if (EditAuditorName.Contains(item.DAuditorCode))
                                                                    {
                                                                        <option value="@item.DAuditorCode" selected>@item.DAuditorName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@item.DAuditorCode">@item.DAuditorName</option>
                                                                    }

                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            <select id="Auditor" class="form-control form-multiselect-city" multiple="multiple" name="AuditorName" placeholder="Select Option" required="required">

                                                                @{
                                                                    foreach (var item in ViewData["AuditorName"] as IEnumerable<TuvVision.Models.Audit>)
                                                                    {

                                                                        <option value="@item.DAuditorCode">@item.DAuditorName&nbsp; &nbsp;</option>


                                                                    }
                                                                }
                                                            </select>
                                                                    }

                                                      
                                                        @if (Model != null)
                                                        {
                                                            <input type="hidden" id="changeOnAuditorName" value="@Model.AuditorName" />
                                                        }
                                                        <input type="text" class="hidden" id="Auditor" />

                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>External Auditor</label>
                                                            @Html.TextBoxFor(model => model.ExAuditor, new { @placeholder = "External Auditor", @class = "form-control", autocomplete = "off" })
                                                            @Html.ValidationMessageFor(model => model.ExAuditor, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12 col-sm-4">

                                                        <label>Select Auditee Name:</label>

                                                        @*@Html.DropDownListFor(model => model.listAuditee, (IEnumerable<SelectListItem>)ViewData["AuditorName"],

                                                            new
                                                            {
                                                                @class = "form-control multiselect multiselect-icon multicls",
                                                                @multiple = "multiple",
                                                                @style = "width=20px;"
                                                            })*@

                                                        @if (ViewBag.checkAuditee == "Auditee")
                                                        {

                                                            <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option" required="required">
                                                                @foreach (var item in ViewBag.AuditorName)
                                                                {
                                                                    if (EditProdName.Contains(item.DAuditorCode))
                                                                    {
                                                                        <option value="@item.DAuditorCode" selected>@item.DAuditorName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@item.DAuditorCode">@item.DAuditorName</option>
                                                                    }

                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            <select id="Auditee" class="form-control form-multiselect-city" multiple="multiple" name="AuditeeName" placeholder="Select Option" required="required">

                                                                @{
                                                                    foreach (var item in ViewData["AuditorName"] as IEnumerable<TuvVision.Models.Audit>)
                                                                    {

                                                                        <option value="@item.DAuditorCode">@item.DAuditorName&nbsp; &nbsp;</option>


                                                                    }
                                                                }
                                                            </select>
                                                        }


                                                        @if (Model != null)
                                                        {
                                                            
                                                            <input type="hidden" id="changeOnAuditee" value="@Model.Auditee" />
                                                        }
                                                        <input type="text" class="hidden" id="Auditee" />
                                                    </div>                                                    
                                                </div>

                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Propose Date From:</label>
                                                            @Html.TextBoxFor(model => model.ProposeDate, "{0:dd/MMMM/yyyy}", htmlAttributes: new { placeholder = "Select Propose Date", @class = "form-control form-control-custom ProposeDate", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.ProposeDate, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">
                                                        <div class="form-group">
                                                            <label>Propose Date To:</label>
                                                            @Html.TextBoxFor(model => model.ScheduleDate, "{0:dd/MMMM/yyyy}", htmlAttributes: new { placeholder = "Select Schedule Date", @class = "form-control form-control-custom ScheduleDate", autocomplete = "off" })


                                                            @Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger validation-msg" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-4">

                                                        <label>Remark :</label>

                                                        @Html.TextBoxFor(model => model.Remark, new { @placeholder = "Remark", @class = "form-control", autocomplete = "off" })
                                                        @Html.ValidationMessageFor(model => model.AuditStandard, "", new { @class = "text-danger validation-msg" })

                                                    </div>
                                                </div>



                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-12">
                                                        <div class="form-group">

                                                            <button type="submit" class="btn btn-default insert-form-btn"> Save </button>
                                                        </div>
                                                    </div>
                                                </div>


                                            </form>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*<script type="text/javascript" language="javascript" src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
    <script src="~/AllJsAndCss/datatable/js/jquery.dataTables.js"></script>
    <script src="~/AllJsAndCss/js/datatable-custom.js"></script>*@

@*Calender Control*@
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script>
    $(function () {
        $(".ProposeDate").datepicker({
            dateFormat: 'dd/MM/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"

        });
    });
</script>

<script>
    $(function () {
        $(".ScheduleDate").datepicker({
            dateFormat: 'dd/MM/yy',//check change
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+50"

        });
    });
</script>




@*<link href="~/Content/css/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-multiselect.js"></script>*@




@*<script type="text/javascript">

    $(function () {
        $('.multicls').multiselect({
            includeSelectAllOption: true
        });

    });


    //$(document).ready(function () {
    //    $(".changeOnAuditorName").each(function (index) {
    //        debugger;
    //        var id = $(this).attr("arr");
    //        var list = $(this).val();
    //        if (list != "" && id != "") {
    //            var re = list.split(",");
    //            $("#" + id).multiselect('select', re);
    //            $('#' + id).multiselect('rebuild');
    //            $('#' + id).trigger('change');
    //        }

    //    });
    //});


</script>

<script type="text/javascript">

    $(function () {
        $('.multicls').multiselect({
            includeSelectAllOption: true
        });

    });


    $(document).ready(function () {

        try {

            var list = $("#changeOnAuditee").val();
            if (list != "") {
                var re = list.split(",");
                $("#listAuditee").multiselect('select', re);
                $('#listAuditee').multiselect('rebuild');
                $('#listAuditee').trigger('change');
            }

        } catch (e) {

        }

        try {

            var list = $("#changeOnAuditorName").val();
            if (list != "") {
                var re = list.split(",");
                $("#listAuditorName").multiselect('select', re);
                $('#listAuditorName').multiselect('rebuild');
                $('#listAuditorName').trigger('change');
            }

        } catch (e) {

        }

        //$(".changeOnAuditee").each(function (index) {
        //    debugger;
        //    var id = $(this).attr("arr");
        //    var list = $(this).val();
        //    if (list != "" && id != "") {
        //        var re = list.split(",");
        //        $("#" + id).multiselect('select', re);
        //        $('#' + id).multiselect('rebuild');
        //        $('#' + id).trigger('change');
        //    }

        //});
    });


</script>*@
<script src="~/AllJsAndCss/js/bootstrap-multiselect.js"></script>
<link href="~/AllJsAndCss/css/bootstrap-multiselect.css" rel="stylesheet" />
<script>
    $('.form-multiselect-city').multiselect({
        enableFiltering: true,
        includeSelectAllOption: true,
        enableCaseInsensitiveFiltering: true
    });
</script>
<script type="text/javascript">
    $(function () {
        $('#Auditee').multiselect({
            includeSelectAllOption: true
        });

    });




</script>

<script type="text/javascript">
    $(function () {
        $('#Auditor').multiselect({
            includeSelectAllOption: true
        });

    });




</script>














